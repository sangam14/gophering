{"componentChunkName":"component---src-templates-author-tsx","path":"/author/tferdinand/","result":{"data":{"ghostAuthor":{"slug":"tferdinand","name":"Teddy Ferdinand","bio":"Cloud Security Architect at WeScale, Cloud experts in France. I'm a former Ops,  self-taught, and passionate by containers and automatation. I think that knowledge is a wealth that must be shared.","cover_image":null,"profile_image":"https://containous.ghost.io/content/images/2020/07/portrait.png","location":"Esbly, France","website":"https://tferdinand.net/en/","twitter":"@TeddyFERDINAND1","facebook":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5f1f5d0faf4f3b0045f36388","title":"Traefik 2.3: Towards Plugins and Beyond!","slug":"traefik-plugins-pilot","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/08/Blog@1x-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/bcd2c09a2eb9c87798dde34e7c3139a7/47498/Blog%401x-1.jpg","srcSet":"/static/bcd2c09a2eb9c87798dde34e7c3139a7/9dc27/Blog%401x-1.jpg 300w,\n/static/bcd2c09a2eb9c87798dde34e7c3139a7/4fe8c/Blog%401x-1.jpg 600w,\n/static/bcd2c09a2eb9c87798dde34e7c3139a7/47498/Blog%401x-1.jpg 1200w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"In this post, Teddy Ferdinand talks about Traefik 2.3, and its features. He dives into Traefik Pilot, our new SaaS control platform, and the middleware plugin management. ","custom_excerpt":"In this post, Teddy Ferdinand talks about Traefik 2.3, and its features. He dives into Traefik Pilot, our new SaaS control platform, and the middleware plugin management. ","visibility":"public","created_at_pretty":"27 July, 2020","published_at_pretty":"August 4, 2020","updated_at_pretty":"25 August, 2020","created_at":"2020-07-27T23:02:39.000+00:00","published_at":"2020-08-04T14:30:00.000+00:00","updated_at":"2020-08-25T14:37:55.000+00:00","meta_title":"Traefik 2.3: Towards Plugins and Beyond!","meta_description":"In this post, Teddy Ferdinand talks about Traefik 2.3, and its features. He dives into Traefik Pilot, our new SaaS control platform, and middlewares.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/08/Twitter@2x.jpg","twitter_title":null,"authors":[{"name":"Teddy Ferdinand","slug":"tferdinand","bio":"Cloud Security Architect at WeScale, Cloud experts in France. I'm a former Ops,  self-taught, and passionate by containers and automatation. I think that knowledge is a wealth that must be shared.","profile_image":"https://containous.ghost.io/content/images/2020/07/portrait.png","twitter":"@TeddyFERDINAND1","facebook":null,"website":"https://tferdinand.net/en/"}],"primary_author":{"name":"Teddy Ferdinand","slug":"tferdinand","bio":"Cloud Security Architect at WeScale, Cloud experts in France. I'm a former Ops,  self-taught, and passionate by containers and automatation. I think that knowledge is a wealth that must be shared.","profile_image":"https://containous.ghost.io/content/images/2020/07/portrait.png","twitter":"@TeddyFERDINAND1","facebook":null,"website":"https://tferdinand.net/en/"},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"How To","slug":"how-to","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"#community-related-resource","slug":"hash-community-related-resource","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"internal"},{"name":"#traefik-related-resource","slug":"hash-traefik-related-resource","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"internal"},{"name":"#pilot-related-resource","slug":"hash-pilot-related-resource","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"internal"}],"plaintext":"Traefik 2.3 (codename: Picodon - the cheese you can see illustrated below) and\nis available as a release candidate since mid-July 2020. More than a simple\nversion increment, this release brings a lot of new features. Two significant\nnew features caught my attention:\n\n * Introduction of Traefik Pilot\n   [/blog/introducing-traefik-pilot-a-first-look-at-our-new-saas-control-platform-for-traefik/]\n   : a new SaaS platform\n * Middleware plugin management\n\nThere are other new features that I won't cover in this post, such as\ncompatibility with ECS, but be sure to check out my blog\n[https://tferdinand.net/en/], I'll be posting an article on that soon.\n\nPicodonIs there a pilot in the plane?\nTraefik is a complete and powerful reverse proxy, as I already presented in a \nprevious article\n[https://tferdinand.net/en/traefik-2-reverse-proxy-in-kubernetes/].\nNevertheless, it lacked a managed health check solution.\n\nIt is now possible for free! The new service was launched in conjunction with\nthe Traefik 2.3 release candidate.\n\nTraefik Pilot is a new concept, delivering an entirely new approach to network\nmanagement in the cloud. At the moment, it only facilitates the health check of\nyour Traefik instances, allowing you to receive a notification if it becomes\nunavailable or unhealthy. Traefik Pilot is available now at pilot.traefik.io\n[https://pilot.traefik.io/]. Additional features are planned and will launch in\nthe coming months!\n\nAfter a quick sign-up, it is now possible to register one or more instances of\nTraefik.\n\nI added the command line parameter in the Traefik startup arguments in my\nKubernetes manifest, and after a reboot, the status changed to Green (OK).\n\nHowever, there are a few things to keep in mind:\n\n * This status currently only corresponds to your Traefik container's state and\n   does not mean that the backends are functional.\n * This health check is sent from your instance, in \"heartbeat\" mode, and does\n   not necessarily mean that your server is reachable.\n * As the signal transmitted is a heartbeat, it is possible to monitor instances\n   in the Pilot application area.\n\nBy clicking on your profile name at the top right, it is possible to define\nalarms, via webhooks or by e-mail.\n\nIt is worth noting that it is possible to indicate you wish to receive security\nalarms linked to the discovery of possible CVE that corresponds to your version\nof Traefik.\n\nWarm up the plugins\nFor many years I've been using the ubiquitous Apache HTTP web server.\nUndoubtedly, one of the enormous strengths of this product is its modularity,\nallowing the community to extend its functionality.\n\nTraefik now allows the use of plugins as well. The list is currently rather\nsmall, but I do not doubt that the catalog will snowball as the community begins\npublishing its creations!\n\nIt is possible to contribute plugins written in Go by following the guide\nprovided by Containous [https://github.com/containous/plugindemo].\n\n\nFor this article, I chose the \"Block Path\" plugin written by Containous\n[https://github.com/containous/plugin-blockpath]. This plugin allows us to block\naccess to individual pages based on regular expressions dynamically.\n\nBlocked pages will directly return a 403 (Forbidden) error.\n\nThe interest of this kind of plugins, already existing in most reverse proxies,\nis to be able to intercept access to individual pages and prevent the backend\nfrom receiving the request.\n\nThis type of middleware enables operators:\n\n * To not generate a load (for example, in the case of an admin page that could\n   be brute-forced/DDOS).\n * To avoid exposing an undiscovered zero-day flaw, since the backend does not\n   receive any requests.\n\nInstall the Plugin\nPlugins load via the static configuration\n[https://docs.traefik.io/v1.7/basics/#static-traefik-configuration] of Traefik.\nFor this part, I loaded it via the command line parameters, since this is how I\napproach loading my entire configuration in Kubernetes.\n\nargs:\n  - --providers.kubernetescrd\n  - --accesslog=true\n  - --accesslog.filepath=/var/log/traefik/access.log\n  - --accesslog.fields.headers.defaultmode=keep\n  - --entrypoints.web.address=:80\n  - --entrypoints.websecure.address=:443\n  - --certificatesresolvers.le.acme.email=myawesomemail@mail.com\n  - --certificatesresolvers.le.acme.storage=/cert/acme.json\n  - --certificatesResolvers.le.acme.httpChallenge.entryPoint=web\n  - --experimental.pilot.token=mytoken\n  - --experimental.plugins.demo.moduleName=github.com/containous/plugin-blockpath\n  - --experimental.plugins.demo.version=v0.1.2\n\nAs you can see above, declaring the plugins is manageable via the \nexperimental.plugins arguments.\n\nIn my command line example, \"demo\" is the name I gave to the plugin before\nmoduleName. Thus, it contains the path to the GitHub repository containing the\nplugin, version being the Git version to checkout.\n\nOnce this configuration is in place, it is necessary to restart Traefik.\n\nConfiguring the plugin\nThe plugin then behaves like a traditional middleware; which I explain in my\nprevious article on Traefik TLS configuration, middlewares are components that\nexist between Traefik and your backend and modify the normal behavior. For\nexample, in the article mentioned above, the middleware I used allows you to\ndefine the necessary security headers for ranking A+ on SSL Labs.\n\nThe plugin then behaves like a traditional middleware; which I explain in my \nprevious article on Traefik TLS configuration\n[https://tferdinand.net/en/traefik-2-tls-configuration/], middlewares are\ncomponents that exist between Traefik and your backend and modify the normal\nbehavior. For example, in the article mentioned above, the middleware I used\nallows you to define the necessary security headers for ranking A+ on SSL Labs.\n\nFor this example, I have declared a new middleware for use by Traefik in\nKubernetes:\n\napiVersion: traefik.containo.us/v1alpha1\nkind: Middleware\nmetadata:\n  name: demo\nspec:\n  plugin:\n    demo:\n      regex: [\"^/demo-[a-z]{1,5}\"]\n\nConfiguring the plugin declared in the command line arguments requires\nreferencing it in the manifest above in the metadata.name field. In the spec \nfield, we can now configure the plugin according to the schema defined in the\nplugin's documentation. In the example above, I've used regex to indicate that\nTraefik should block any request whose path starts with \"/demo-\" with 1 to 5\nlowercase letters.\n\nLoad middleware\nNow that I have defined my middleware, I have to load it into my IngressRoute.\n\nI modify my IngressRoute by declaring it should load this middleware too. As a\nreminder, you can define multiple middlewares on your IngressRoutes, which will\nexecute in the order specified.\n\napiVersion: traefik.containo.us/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: traefik-web-ui-tls\n  namespace: default\nspec:\n  entryPoints:\n    - websecure\n  routes:\n  - kind: Rule\n    priority: 1\n    match: (Host(`www.tferdinand.net`) || Host(`tferdinand.net`)) && PathPrefix(`/`)\n    services:\n    - name: ghost-tfe-fr\n      port: 2368\n      helthcheck:\n        path: /\n        host: tferdinand.net\n        intervalSeconds: 10\n        timeoutSeconds: 5\n    middlewares:\n      - name: security\n      - name: demo\n  tls:\n    certResolver: le\n    options:\n      name: mytlsoption\n      namespace: default\n\n\nAs you can see in spec.routes[0].middlewares, I've added a reference to the demo \nmiddleware that I installed and configured in the previous steps.\n\nLet's test the plugin\nNow, it's time to test my plugin configuration.\n\nYes, I also use Windows, and I assume it ;)\n\nAs you can see, the behavior we anticipated is present. Legitimate queries work\nas expected, and Traefik is blocking the requests which match the schema defined\nin the demo plugin configuration before ever reaching the backend service.\n\nIn conclusion: A small step for Containous, a big step for the community.\nTraefik Plugins and Traefik Pilot are technology previews and only scratch the\nsurface of their true potential; however, this open modularity will enable the\ncommunity to extend the core features of Traefik without the necessity of custom\nforks or compiled code.\n\nTraefik Pilot and Plugins will potentially allow companies to develop plugins on\ntheir own and thus adapt Traefik to their needs.\n\nTraefik Pilot is an excellent initiative, and I can't wait to see how Containous\nwill take-off with these new features! \n\nUseful links\n * Get started with Pilot › [https://pilot.traefik.io/]\n * Pilot documentation [https://docs.traefik.io/v2.3/plugins/overview/]\n * Traefik [/traefik/]\n * Community forum [https://community.containo.us/c/traefik/5]\n\nAuthor's Bio\nTeddy [https://twitter.com/TeddyFERDINAND1] is a Cloud Security Architect at\nWeScale, an organization made up of cloud experts. He's former Ops, self-taught,\nand is passionate about containers and automation. He believes that knowledge is\nwealth that must be shared.","html":"<figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2020/08/Blog@1x.jpg\" class=\"kg-image\" alt srcset=\"https://containous.ghost.io/content/images/size/w600/2020/08/Blog@1x.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/08/Blog@1x.jpg 1000w, https://containous.ghost.io/content/images/2020/08/Blog@1x.jpg 1200w\" sizes=\"(min-width: 1200px) 1200px\"></figure><p>Traefik 2.3 (codename: Picodon - the cheese you can see illustrated below) and is available as a release candidate since mid-July 2020. More than a simple version increment, this release brings a lot of new features. Two significant new features caught my attention:</p><ul><li>Introduction of <a href=\"https://containous.ghost.io/blog/introducing-traefik-pilot-a-first-look-at-our-new-saas-control-platform-for-traefik/\">Traefik Pilot</a>: a new SaaS platform</li><li>Middleware plugin management</li></ul><!--kg-card-begin: markdown--><p>There are other new features that I won't cover in this post, such as compatibility with ECS, but be sure to check out <a href=\"https://tferdinand.net/en/\" target=\"_blank\" rel=\"nofollow\">my blog</a>, I'll be posting an article on that soon.</p>\n<!--kg-card-end: markdown--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://containous.ghost.io/content/images/2020/07/picodon.jpeg\" class=\"kg-image\" alt=\"Credit: https://fr.wikipedia.org/wiki/Picodon\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/07/picodon.jpeg 600w, https://containous.ghost.io/content/images/2020/07/picodon.jpeg 700w\"><figcaption>Picodon</figcaption></figure><h2 id=\"is-there-a-pilot-in-the-plane\"><strong>Is there a pilot in the plane?</strong></h2><!--kg-card-begin: markdown--><p>Traefik is a complete and powerful reverse proxy, as I already presented in a <a href=\"https://tferdinand.net/en/traefik-2-reverse-proxy-in-kubernetes/\" target=\"_blank\">previous article</a>. Nevertheless, it lacked a managed health check solution.</p>\n<!--kg-card-end: markdown--><p>It is now possible for free! The new service was launched in conjunction with the Traefik 2.3 release candidate.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/07/Blog@1x-1.png\" class=\"kg-image\" alt srcset=\"https://containous.ghost.io/content/images/size/w600/2020/07/Blog@1x-1.png 600w, https://containous.ghost.io/content/images/size/w1000/2020/07/Blog@1x-1.png 1000w, https://containous.ghost.io/content/images/2020/07/Blog@1x-1.png 1200w\" sizes=\"(min-width: 720px) 720px\"></figure><p>Traefik Pilot is a new concept, delivering an entirely new approach to network management in the cloud. At the moment, it only facilitates the health check of your Traefik instances, allowing you to receive a notification if it becomes unavailable or unhealthy. Traefik Pilot is available now at <a href=\"https://pilot.traefik.io/\">pilot.traefik.io</a>. Additional features are planned and will launch in the coming months!</p><p>After a quick sign-up, it is now possible to register one or more instances of Traefik.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh3.googleusercontent.com/z6Z52Ixrg3i3IOK0enPGeICQHWk7LVud62tda2goLUx_aHBYmIfO5YuaddKj-IXC28SIpZMkDc5i4F6R1clLQdL39j2z_xog2llgcbnkHnc3HrSEk-sP6NoQfBE6IgKuyZ3Nv85V\" class=\"kg-image\" alt></figure><p>I added the command line parameter in the Traefik startup arguments in my Kubernetes manifest, and after a reboot, the status changed to Green (OK).</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh3.googleusercontent.com/Af6WNGucCMKrTTea7SOK4wU0AXfIhm1hvrWiK06FmFBbZThMMoDToRz3l6AOHLIeWyQQLzSJ8xH3yWWtqwwVXbB3nuTdnK3YEym8TZM0NYLkmtryauJe7F06_PqJCzGTlZOP-cgQ\" class=\"kg-image\" alt></figure><p>However, there are a few things to keep in mind:</p><ul><li>This status currently only corresponds to your Traefik container's state and does not mean that the backends are functional.</li><li>This health check is sent from your instance, in \"heartbeat\" mode, and does not necessarily mean that your server is reachable.</li><li>As the signal transmitted is a heartbeat, it is possible to monitor instances in the Pilot application area.</li></ul><p>By clicking on your profile name at the top right, it is possible to define alarms, via webhooks or by e-mail.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh3.googleusercontent.com/mIpE_f8Is091urCMzXAkgCrrCJARJScSjDRF9LmemzbNfmiEW_DYxPXXdL-6Fc3xYp3OAC3q-Ir04Mbn89CFjLykbenlZaB9FdgzNmiXCFt2DbPzwSR4-Aq5epjCZpLx69zNP4zg\" class=\"kg-image\" alt></figure><p>It is worth noting that it is possible to indicate you wish to receive security alarms linked to the discovery of possible CVE that corresponds to your version of Traefik.</p><h2 id=\"warm-up-the-plugins\"><strong>Warm up the plugins</strong></h2><p>For many years I've been using the ubiquitous Apache HTTP web server. Undoubtedly, one of the enormous strengths of this product is its modularity, allowing the community to extend its functionality.</p><p>Traefik now allows the use of plugins as well. The list is currently rather small, but I do not doubt that the catalog will snowball as the community begins publishing its creations!</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh3.googleusercontent.com/R5F_9k2vb-vT_4BTOh1_q0cUn8vfnJNRPgiKjTUi8-UazGQk6EBXA-Rxq9ILZlXQE-dPdUmU4WXIMNadjXcT1qxAsXX21vyY-4gX5SEwxHX6JDZltW4u6Cah9BGRXItAo9_IfrbD\" class=\"kg-image\" alt></figure><p>It is possible to contribute plugins written in Go by following <a href=\"https://github.com/containous/plugindemo\">the guide provided by Containous</a>.<br></p><p>For this article, I chose the <a href=\"https://github.com/containous/plugin-blockpath\">\"Block Path\" plugin written by Containous</a>. This plugin allows us to block access to individual pages based on regular expressions dynamically.</p><p>Blocked pages will directly return a 403 (Forbidden) error.</p><p>The interest of this kind of plugins, already existing in most reverse proxies, is to be able to intercept access to individual pages and prevent the backend from receiving the request.</p><p>This type of middleware enables operators:</p><ul><li>To not generate a load (for example, in the case of an admin page that could be brute-forced/DDOS).</li><li>To avoid exposing an undiscovered zero-day flaw, since the backend does not receive any requests.</li></ul><h3 id=\"install-the-plugin\"><strong>Install the Plugin</strong></h3><p>Plugins load via <a href=\"https://docs.traefik.io/v1.7/basics/#static-traefik-configuration\">the static configuration</a> of Traefik. For this part, I loaded it via the command line parameters, since this is how I approach loading my entire configuration in Kubernetes.</p><pre><code class=\"language-yaml\">args:\n  - --providers.kubernetescrd\n  - --accesslog=true\n  - --accesslog.filepath=/var/log/traefik/access.log\n  - --accesslog.fields.headers.defaultmode=keep\n  - --entrypoints.web.address=:80\n  - --entrypoints.websecure.address=:443\n  - --certificatesresolvers.le.acme.email=myawesomemail@mail.com\n  - --certificatesresolvers.le.acme.storage=/cert/acme.json\n  - --certificatesResolvers.le.acme.httpChallenge.entryPoint=web\n  - --experimental.pilot.token=mytoken\n  - --experimental.plugins.demo.moduleName=github.com/containous/plugin-blockpath\n  - --experimental.plugins.demo.version=v0.1.2</code></pre><p>As you can see above, declaring the plugins is manageable via the <code>experimental.plugins</code> arguments.</p><p>In my command line example, \"demo\" is the name I gave to the plugin before moduleName. Thus, it contains the path to the GitHub repository containing the plugin, version being the Git version to checkout.</p><p>Once this configuration is in place, it is necessary to restart Traefik.</p><h3 id=\"configuring-the-plugin\"><strong>Configuring the plugin</strong></h3><!--kg-card-begin: markdown--><p>The plugin then behaves like a traditional middleware; which I explain in my previous article on Traefik TLS configuration, middlewares are components that exist between Traefik and your backend and modify the normal behavior. For example, in the article mentioned above, the middleware I used allows you to define the necessary security headers for ranking A+ on SSL Labs.</p>\n<!--kg-card-end: markdown--><p>The plugin then behaves like a traditional middleware; which I explain in my <a href=\"https://tferdinand.net/en/traefik-2-tls-configuration/\">previous article on Traefik TLS configuration</a>, middlewares are components that exist between Traefik and your backend and modify the normal behavior. For example, in the article mentioned above, the middleware I used allows you to define the necessary security headers for ranking A+ on SSL Labs.</p><p>For this example, I have declared a new middleware for use by Traefik in Kubernetes:</p><pre><code class=\"language-yaml\">apiVersion: traefik.containo.us/v1alpha1\nkind: Middleware\nmetadata:\n  name: demo\nspec:\n  plugin:\n    demo:\n      regex: [\"^/demo-[a-z]{1,5}\"]</code></pre><p>Configuring the plugin declared in the command line arguments requires referencing it in the manifest above in the <code>metadata.name</code> field. In the <code>spec</code> field, we can now configure the plugin according to the schema defined in the plugin's documentation. In the example above, I've used regex to indicate that Traefik should block any request whose path starts with \"/demo-\" with 1 to 5 lowercase letters.</p><h3 id=\"load-middleware\"><strong>Load middleware</strong></h3><p>Now that I have defined my middleware, I have to load it into my IngressRoute.</p><p>I modify my IngressRoute by declaring it should load this middleware too. As a reminder, you can define multiple middlewares on your IngressRoutes, which will execute in the order specified.</p><pre><code class=\"language-yaml\">apiVersion: traefik.containo.us/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: traefik-web-ui-tls\n  namespace: default\nspec:\n  entryPoints:\n    - websecure\n  routes:\n  - kind: Rule\n    priority: 1\n    match: (Host(`www.tferdinand.net`) || Host(`tferdinand.net`)) &amp;&amp; PathPrefix(`/`)\n    services:\n    - name: ghost-tfe-fr\n      port: 2368\n      helthcheck:\n        path: /\n        host: tferdinand.net\n        intervalSeconds: 10\n        timeoutSeconds: 5\n    middlewares:\n      - name: security\n      - name: demo\n  tls:\n    certResolver: le\n    options:\n      name: mytlsoption\n      namespace: default\n</code></pre><p>As you can see in <code>spec.routes[0].middlewares</code>, I've added a reference to the <code>demo</code> middleware that I installed and configured in the previous steps.</p><h3 id=\"let-s-test-the-plugin\"><strong>Let's test the plugin</strong></h3><p>Now, it's time to test my plugin configuration.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh4.googleusercontent.com/q752UlNP9VLB7Quofs1dfL6MWZIoqLSTopZbxsASgxu2nhJsLpwo_h0ldRuYhbq4_d4m6pq-uiJHDJyqwqnd7X3ZeT9c2-2qd1PnOfItAUmfXoL17ooOXrm7Q6OAQ-13ezfikOHc\" class=\"kg-image\" alt></figure><p>Yes, I also use Windows, and I assume it ;)</p><p>As you can see, the behavior we anticipated is present. Legitimate queries work as expected, and Traefik is blocking the requests which match the schema defined in the demo plugin configuration before ever reaching the backend service.</p><h2 id=\"in-conclusion-a-small-step-for-containous-a-big-step-for-the-community-\"><strong>In conclusion: A small step for Containous, a big step for the community.</strong></h2><p>Traefik Plugins and Traefik Pilot are technology previews and only scratch the surface of their true potential; however, this open modularity will enable the community to extend the core features of Traefik without the necessity of custom forks or compiled code.</p><p>Traefik Pilot and Plugins will potentially allow companies to develop plugins on their own and thus adapt Traefik to their needs.</p><p>Traefik Pilot is an excellent initiative, and I can't wait to see how Containous will take-off with these new features! </p><h2 id=\"useful-links\">Useful links</h2><ul><li><a href=\"https://pilot.traefik.io/\">Get started with Pilot ›</a></li><li><a href=\"https://docs.traefik.io/v2.3/plugins/overview/\">Pilot documentation</a></li><li><a href=\"https://containous.ghost.io/traefik/\">Traefik</a></li><li><a href=\"https://community.containo.us/c/traefik/5\">Community forum</a></li></ul><h3 id=\"author-s-bio\">Author's Bio</h3><!--kg-card-begin: markdown--><p><a href=\"https://twitter.com/TeddyFERDINAND1\" target=\"_blank\" rel=\"nofollow\">Teddy</a> is a Cloud Security Architect at WeScale, an organization made up of cloud experts. He's former Ops, self-taught, and is passionate about containers and automation. He believes that knowledge is wealth that must be shared.</p>\n<!--kg-card-end: markdown-->","url":"https://containous.ghost.io/blog/traefik-plugins-pilot/","canonical_url":null,"uuid":"8f55b279-8cc8-4932-aa5b-fffc61d38439","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f1f5d0faf4f3b0045f36388","reading_time":6}}]}},"pageContext":{"slug":"tferdinand","limit":9,"skip":0,"numberOfPages":1,"humanPageNumber":1,"prevPageNumber":null,"nextPageNumber":null,"previousPagePath":null,"nextPagePath":null}},"staticQueryHashes":["1274566015","2561578252","2731221146","394248586","4145280475","749840385"]}