{"componentChunkName":"component---src-templates-author-tsx","path":"/author/neil/","result":{"data":{"ghostAuthor":{"slug":"neil","name":"Neil McAllister","bio":null,"cover_image":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","location":"San Francisco, USA","website":null,"twitter":null,"facebook":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5fd92aa6255eda00390e23da","title":"For Developers, Traefik Enterprise 2.3 Adds Support for GitOps and OpenAPI","slug":"traefik-enterprise-adds-support-for-gitops-and-openapi","featured":true,"feature_image":"https://containous.ghost.io/content/images/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/9137a8a7798710019629587d41c5d119/47498/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg","srcSet":"/static/9137a8a7798710019629587d41c5d119/9dc27/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg 300w,\n/static/9137a8a7798710019629587d41c5d119/4fe8c/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg 600w,\n/static/9137a8a7798710019629587d41c5d119/47498/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg 1200w,\n/static/9137a8a7798710019629587d41c5d119/52258/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg 1800w,\n/static/9137a8a7798710019629587d41c5d119/a41d1/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Traefik Enterprise 2.3 introduces new features for developers and DevOps engineers, including support for GitOps practices and OpenAPI.","custom_excerpt":"Traefik Enterprise 2.3 introduces new features for developers and DevOps engineers, including support for GitOps practices and OpenAPI.","visibility":"public","created_at_pretty":"15 December, 2020","published_at_pretty":"December 22, 2020","updated_at_pretty":"22 December, 2020","created_at":"2020-12-15T21:29:10.000+00:00","published_at":"2020-12-22T13:00:00.000+00:00","updated_at":"2020-12-22T12:59:59.000+00:00","meta_title":"Traefik Enterprise 2.3 Adds Support for GitOps and OpenAPI","meta_description":"Traefik Enterprise 2.3 introduces new features for developers and DevOps engineers, including support for GitOps practices and OpenAPI.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI---Twitter.png","twitter_title":null,"authors":[{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"IT operations teams aren’t the only ones who need an efficient, secure,\neasy-to-use application networking layer. Developers, architects, and DevOps\npros number among Traefik’s most enthusiastic users.\n\nCloud-native methods – including containerization, REST APIs, and microservices\n– have brought networking front and center in modern software delivery. As a\nresult, application developers need tools that give them greater control over\nnetwork infrastructure, and the team at Traefik Labs is always working to see\nthat their needs are met.\n\nTraefik Enterprise 2.3, the latest version of the commercially supported,\nproduction-grade edition of Traefik, includes two new features aimed squarely at\ndevelopers and DevOps engineers. The first is support for GitOps practices when\ndeploying Traefik, while the second leverages the OpenAPI standard to make\nservice discovery and integration easier. Let’s take a look at each.\n\nInfrastructure Automation with GitOps\nBriefly, GitOps [https://www.gitops.tech/] is a method of implementing\ncontinuous delivery (CD) for cloud-native applications that uses Git\nrepositories as the source of truth. The technique was originally developed at\nWeaveworks for use with Kubernetes but has since been adapted to other\nenvironments. The central idea is to make developers comfortable when operating\ninfrastructure by allowing them to do it using tools with which they are already\nfamiliar.\n\nIn the past, much of infrastructure configuration relied on command-line tools,\nand this was true of Traefik Enterprise, as well. It supplied the teectl tool,\nwhich eliminates some of the drudgework of configuration and installation, but\nthis approach isn’t well-suited to CD pipelines.\n\nTraefik Enterprise 2.3 introduces a new internal service to further streamline\nthe process for a GitOps flow for Kubernetes. The procedure is as simple as\nspecifying your Traefik Enterprise license in a Kubernetes Secret, creating a\nConfigMap with your static configuration, and querying the service via HTTP to\ngenerate your installation manifest, like so:\n\ncurl \"https://install.enterprise.traefik.io/v2.3\" --output manifest.yaml\n\nOnce you’ve reviewed the manifest and made any necessary modifications, you can\nstore it in a Git repository in the appropriate directory structure, and then\nintegrate it with GitOps tools such as Argo CD\n[https://argoproj.github.io/argo-cd/].\n\nThe advantages of this approach are several. For one thing, Git automatically\nkeeps a version history of your config files, so you can easily roll back to an\nearlier version if necessary. Also, Traefik Enterprise’s ability to update the\nstatic configuration without a restart means you can apply updates with minimal\ninterruption of service. To learn more about GitOps-style installation, consult\nthe documentation\n[https://doc.traefik.io/traefik-enterprise/installing/kubernetes/gitops/].\n\nService Visibility with OpenAPI\nAs services proliferate on the network, so do the connections between them. That\nmeans APIs, and lots of them. Staying on top of them all can be challenging for\nany developer, which is why Traefik Enterprise 2.3 incorporates a new API Portal\nbuilt around the OpenAPI specification [https://www.openapis.org/].\n\nOpenAPI (initially known as Swagger) is a language-agnostic interface\ndescription language for REST APIs. The API descriptions themselves are defined\nin JSON files. The idea is to make it easier to auto-generate consistent\nreference documentation for service APIs, no matter who designed and implemented\nthem.\n\nTo use OpenAPI descriptions with Traefik Enterprise, simply enable the new API\nPortal feature by editing the static configuration to include a path (for\nexample, spec.json) to where the JSON files can be found on each service\nentrypoint. From there, anyone with access can browse the catalog of the\nservices and their accompanying APIs from Traefik Enterprise’s internal web UI:\n\nWhat’s more, because the API Portal is just another service managed by Traefik,\nadministrators can choose from the full range of access controls provided by\nTraefik Middlewares, including Traefik Enterprise’s exclusive, enterprise-grade\nauthentication methods.\n\nTo view some examples of how to write API descriptions using OpenAPI, consult\nthe project’s public specification repository\n[https://github.com/OAI/OpenAPI-Specification/tree/master/examples]. More\ninformation on how to use OpenAPI with Traefik Enterprise is available in the \ndocumentation [https://doc.traefik.io/traefik-enterprise/operations/apiportal/].\n\nEmpowering Developers\nThese latest features are just two examples of the ways in which Traefik\nEnterprise helps give developers greater control over the environments where\ntheir apps and services run. As cloud-native architectures continue to encourage\norganizations to adopt methods like DevOps and site reliability engineering\n(SRE), you can expect Traefik Labs to continue to deliver features that support\nthis new model.\n\nOther examples of developer-centric technologies that are baked into Traefik\nEnterprise include support for certificate management using HashiCorp Vault\n[https://traefik.io/blog/lock-down-your-network-with-traefik-enterprise-and-vault/]\n; authentication tools including JWT, LDAP, and OpenID Connect\n[https://traefik.io/blog/unlock-the-potential-of-data-apis-with-strong-authentication-and-traefik-enterprise/]\n; and a service mesh\n[https://doc.traefik.io/traefik-enterprise/features/#service-mesh] layer that\nenables fine-grained control over inter-service communication. \n\nTo learn more about how Traefik Enterprise can help your organization boost\ndeveloper productivity and reduce time-to-delivery, contact Traefik Labs to \nrequest a demo [https://info.traefik.io/en/request-demo-traefik-enterprise]. Or\nbetter yet, sign up for a 30-day free trial\n[https://info.traefik.io/get-traefik-enterprise-free-for-30-days] and explore\nthe features of Traefik Enterprise for yourself.","html":"<figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI.jpg\" class=\"kg-image\" alt=\"Traefik Enterprise 2.3 Adds Support for GitOps and OpenAPI\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI.jpg 1600w, https://containous.ghost.io/content/images/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI.jpg 2400w\" sizes=\"(min-width: 1200px) 1200px\"></figure><p>IT operations teams aren’t the only ones who need an efficient, secure, easy-to-use application networking layer. Developers, architects, and DevOps pros number among Traefik’s most enthusiastic users.</p><p>Cloud-native methods – including containerization, REST APIs, and microservices – have brought networking front and center in modern software delivery. As a result, application developers need tools that give them greater control over network infrastructure, and the team at Traefik Labs is always working to see that their needs are met.</p><p>Traefik Enterprise 2.3, the latest version of the commercially supported, production-grade edition of Traefik, includes two new features aimed squarely at developers and DevOps engineers. The first is support for GitOps practices when deploying Traefik, while the second leverages the OpenAPI standard to make service discovery and integration easier. Let’s take a look at each.</p><h2 id=\"infrastructure-automation-with-gitops\"><strong>Infrastructure Automation with GitOps</strong></h2><!--kg-card-begin: markdown--><p>Briefly, <a href=\"https://www.gitops.tech/\" target=\"_blank\" rel=\"nofollow\">GitOps</a> is a method of implementing continuous delivery (CD) for cloud-native applications that uses Git repositories as the source of truth. The technique was originally developed at Weaveworks for use with Kubernetes but has since been adapted to other environments. The central idea is to make developers comfortable when operating infrastructure by allowing them to do it using tools with which they are already familiar.</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>In the past, much of infrastructure configuration relied on command-line tools, and this was true of Traefik Enterprise, as well. It supplied the <code>teectl</code> tool, which eliminates some of the drudgework of configuration and installation, but this approach isn’t well-suited to CD pipelines.</p>\n<!--kg-card-end: markdown--><p>Traefik Enterprise 2.3 introduces a new internal service to further streamline the process for a GitOps flow for Kubernetes. The procedure is as simple as specifying your Traefik Enterprise license in a Kubernetes Secret, creating a ConfigMap with your static configuration, and querying the service via HTTP to generate your installation manifest, like so:</p><!--kg-card-begin: markdown--><p><code>curl &quot;https://install.enterprise.traefik.io/v2.3&quot; --output manifest.yaml</code></p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>Once you’ve reviewed the manifest and made any necessary modifications, you can store it in a Git repository in the appropriate directory structure, and then integrate it with GitOps tools such as <a href=\"https://argoproj.github.io/argo-cd/\" target=\"_blank\" rel=\"nofollow\">Argo CD</a>.</p>\n<!--kg-card-end: markdown--><p>The advantages of this approach are several. For one thing, Git automatically keeps a version history of your config files, so you can easily roll back to an earlier version if necessary. Also, Traefik Enterprise’s ability to update the static configuration without a restart means you can apply updates with minimal interruption of service. To learn more about GitOps-style installation, <a href=\"https://doc.traefik.io/traefik-enterprise/installing/kubernetes/gitops/\">consult the documentation</a>.</p><h2 id=\"service-visibility-with-openapi\"><strong>Service Visibility with OpenAPI</strong></h2><!--kg-card-begin: markdown--><p>As services proliferate on the network, so do the connections between them. That means APIs, and lots of them. Staying on top of them all can be challenging for any developer, which is why Traefik Enterprise 2.3 incorporates a new API Portal built around the <a href=\"https://www.openapis.org/\" target=\"_blank\" rel=\"nofollow\">OpenAPI specification</a>.</p>\n<!--kg-card-end: markdown--><p>OpenAPI (initially known as Swagger) is a language-agnostic interface description language for REST APIs. The API descriptions themselves are defined in JSON files. The idea is to make it easier to auto-generate consistent reference documentation for service APIs, no matter who designed and implemented them.</p><!--kg-card-begin: markdown--><p>To use OpenAPI descriptions with Traefik Enterprise, simply enable the new API Portal feature by editing the static configuration to include a path (for example, <code>spec.json</code>) to where the JSON files can be found on each service entrypoint. From there, anyone with access can browse the catalog of the services and their accompanying APIs from Traefik Enterprise’s internal web UI:</p>\n<!--kg-card-end: markdown--><figure class=\"kg-card kg-image-card\"><img src=\"https://lh6.googleusercontent.com/9GR3S1hfXIGNjLLMwppW07wlFXhiFFxkcS-QffLpLO2UHNnoTSufM1Czo8fpseTBFc8UsxnjD88_fAH0hZ4-ltylQRSDgCZJ4BrnK_m6P61aVlol2m_R2Pak4jZIYbU1GGZHr8tU\" class=\"kg-image\" alt=\"API Portal page\"></figure><p>What’s more, because the API Portal is just another service managed by Traefik, administrators can choose from the full range of access controls provided by Traefik Middlewares, including Traefik Enterprise’s exclusive, enterprise-grade authentication methods.</p><!--kg-card-begin: markdown--><p>To view some examples of how to write API descriptions using OpenAPI, consult the project’s <a href=\"https://github.com/OAI/OpenAPI-Specification/tree/master/examples\" target=\"_blank\" rel=\"nofollow\">public specification repository</a>. More information on how to use OpenAPI with Traefik Enterprise is available in the <a href=\"https://doc.traefik.io/traefik-enterprise/operations/apiportal/\">documentation</a>.</p>\n<!--kg-card-end: markdown--><h2 id=\"empowering-developers\"><strong>Empowering Developers</strong></h2><p>These latest features are just two examples of the ways in which Traefik Enterprise helps give developers greater control over the environments where their apps and services run. As cloud-native architectures continue to encourage organizations to adopt methods like DevOps and site reliability engineering (SRE), you can expect Traefik Labs to continue to deliver features that support this new model.</p><p>Other examples of developer-centric technologies that are baked into Traefik Enterprise include support for <a href=\"https://traefik.io/blog/lock-down-your-network-with-traefik-enterprise-and-vault/\">certificate management using HashiCorp Vault</a>; authentication tools including JWT, LDAP, and <a href=\"https://traefik.io/blog/unlock-the-potential-of-data-apis-with-strong-authentication-and-traefik-enterprise/\">OpenID Connect</a>; and a <a href=\"https://doc.traefik.io/traefik-enterprise/features/#service-mesh\">service mesh</a> layer that enables fine-grained control over inter-service communication. </p><p>To learn more about how Traefik Enterprise can help your organization boost developer productivity and reduce time-to-delivery, contact Traefik Labs to <a href=\"https://info.traefik.io/en/request-demo-traefik-enterprise\">request a demo</a>. Or better yet, sign up for a <a href=\"https://info.traefik.io/get-traefik-enterprise-free-for-30-days\">30-day free trial</a>  and explore the features of Traefik Enterprise for yourself.</p>","url":"https://containous.ghost.io/blog/traefik-enterprise-adds-support-for-gitops-and-openapi/","canonical_url":null,"uuid":"94d5a7d5-71c0-4669-8fa2-bd171b77bb02","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5fd92aa6255eda00390e23da","reading_time":3}},{"node":{"id":"Ghost__Post__5fd818d9255eda00390e23b8","title":"Unleash the Power of Traefik for High Availability Load Balancing","slug":"unleash-the-power-of-traefik-for-high-availability-load-balancing","featured":true,"feature_image":"https://containous.ghost.io/content/images/2020/12/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/fd6eab4e395f0b7b79b73f0551450d37/47498/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing-1.jpg","srcSet":"/static/fd6eab4e395f0b7b79b73f0551450d37/9dc27/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing-1.jpg 300w,\n/static/fd6eab4e395f0b7b79b73f0551450d37/4fe8c/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing-1.jpg 600w,\n/static/fd6eab4e395f0b7b79b73f0551450d37/47498/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing-1.jpg 1200w,\n/static/fd6eab4e395f0b7b79b73f0551450d37/52258/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing-1.jpg 1800w,\n/static/fd6eab4e395f0b7b79b73f0551450d37/a41d1/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"What if it was possible to achieve true high availability using only Traefik Proxy, Traefik Enterprise, and a few other, easy-to-deploy open-source networking tools?","custom_excerpt":"What if it was possible to achieve true high availability using only Traefik Proxy, Traefik Enterprise, and a few other, easy-to-deploy open-source networking tools?","visibility":"public","created_at_pretty":"15 December, 2020","published_at_pretty":"December 15, 2020","updated_at_pretty":"15 December, 2020","created_at":"2020-12-15T02:00:57.000+00:00","published_at":"2020-12-15T06:42:35.000+00:00","updated_at":"2020-12-15T06:42:35.000+00:00","meta_title":"Unleash the Power of Traefik for High Availability Load Balancing","meta_description":"What if it was possible to achieve true high availability using only Traefik and a few other, easy-to-deploy open-source networking tools?","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/12/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing---Twitter.png","twitter_title":null,"authors":[{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"How To","slug":"how-to","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Every Traefik user knows that it makes the job of application networking easier.\nAt Traefik Labs, we like to say Traefik “makes networking boring.” And yet,\nbecause Traefik is so easy to use, it’s also easy to overlook how powerful it\nis.\n\nTraefik has earned a strong following among organizations that develop\ncloud-native applications, due to how effortlessly it integrates with\ntechnologies like Docker and Kubernetes. But the same capabilities that allow it\nto network containers can also help solve bigger networking challenges.\n\nOne use case for which there is growing demand is high availability (HA). With\nthe proliferation of the managed SaaS application delivery model, ensuring\nmaximum uptime and consistent quality of service is more important than ever.\nAchieving this for a global market remains a challenge.\n\nHome-Grown HA\nFor organizations that want to achieve true cloud-scale high availability, the\nsolution is often to turn to proprietary cloud-based solutions or to deploy\ndedicated hardware load balancers. Yet these approaches don't mesh well with\nmodern, cloud-native application development methods. Not only does it increase\ncosts and time-to-delivery, but it takes network configuration out of the hands\nof developers, making it harder to employ practices like agile development,\nDevOps, and site reliability engineering (SRE).\n\nBut what if there was a different approach? What if it was possible to achieve\ntrue high availability using only Traefik Proxy, Traefik Enterprise, and a few\nother, easy-to-deploy open-source networking tools? We recently published a new \nExpert Guide [https://info.traefik.io/request-technical-paper-traefik-ha] that\nexplains how to do just that.\n\nIn the paper, you’ll explore three scenarios designed to increase total traffic\ncapacity and uptime without resorting to complex or proprietary systems:\n\nCase 1: Active/Passive Nodes\nIn this first case, you’ll learn how to set up a two-node cluster of Traefik\ninstances, where one of them is active at any given time. Should the active\ninstance fail, the other instance automatically takes over.\n\nCase 2: Kubernetes Ingress\nBuilding on the first case, you’ll see how to use Traefik Enterprise as a\nmulti-node Kubernetes Ingress controller, complete with SSL termination and a\nrate-limiting feature to prevent network congestion from excessive requests.\n\nCase 3: Cloud-Scale Load Balancing\nFinally, you’ll use Traefik Enterprise and additional open source tools to build\na truly enterprise-grade network environment that’s capable of scaling to handle\nmassive amounts of requests.\n\nSounds interesting, how can I learn more?\nIf any of this sounds like an itch you’ve been eager to scratch within your own\norganization, download the paper\n[https://info.traefik.io/request-technical-paper-traefik-ha] and dive right in.\nYou’ll receive a link to the Expert Guide, which includes instructions on how to\ndownload the accompanying configuration files for the walk-through.Also, if you\nwant to begin building hands-on experience with Traefik Enterprise, there are\ntwo great ways to explore the high availability features it has to offer. The\nfirst is to contact Traefik Labs and request a guided demo\n[https://info.traefik.io/en/request-demo-traefik-enterprise] that will help you\nunderstand how Traefik Enterprise can benefit your organization. Or, if you’re\nready to roll up your sleeves, sign up for a 30-day free trial\n[https://info.traefik.io/get-traefik-enterprise-free-for-30-days] and see for\nyourself how easy it is to get started.","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/12/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing.jpg\" class=\"kg-image\" alt=\"Unleash the Power of Traefik for High Availability Load Balancing\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/12/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/12/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/12/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing.jpg 1600w, https://containous.ghost.io/content/images/2020/12/Unleash-the-Power-of-Traefik-for-High-Availability-Load-Balancing.jpg 2400w\" sizes=\"(min-width: 720px) 720px\"></figure><p>Every Traefik user knows that it makes the job of application networking easier. At Traefik Labs, we like to say Traefik “makes networking boring.” And yet, because Traefik is so easy to use, it’s also easy to overlook how powerful it is.</p><p>Traefik has earned a strong following among organizations that develop cloud-native applications, due to how effortlessly it integrates with technologies like Docker and Kubernetes. But the same capabilities that allow it to network containers can also help solve bigger networking challenges.</p><p>One use case for which there is growing demand is high availability (HA). With the proliferation of the managed SaaS application delivery model, ensuring maximum uptime and consistent quality of service is more important than ever. Achieving this for a global market remains a challenge.</p><h2 id=\"home-grown-ha\"><strong>Home-Grown HA</strong></h2><p>For organizations that want to achieve true cloud-scale high availability, the solution is often to turn to proprietary cloud-based solutions or to deploy dedicated hardware load balancers. Yet these approaches don't mesh well with modern, cloud-native application development methods. Not only does it increase costs and time-to-delivery, but it takes network configuration out of the hands of developers, making it harder to employ practices like agile development, DevOps, and site reliability engineering (SRE).</p><p>But what if there was a different approach? What if it was possible to achieve true high availability using only Traefik Proxy, Traefik Enterprise, and a few other, easy-to-deploy open-source networking tools? We recently published a new <a href=\"https://info.traefik.io/request-technical-paper-traefik-ha\">Expert Guide</a> that explains how to do just that.</p><p>In the paper, you’ll explore three scenarios designed to increase total traffic capacity and uptime without resorting to complex or proprietary systems:</p><h2 id=\"case-1-active-passive-nodes\"><strong>Case 1: Active/Passive Nodes</strong></h2><p>In this first case, you’ll learn how to set up a two-node cluster of Traefik instances, where one of them is active at any given time. Should the active instance fail, the other instance automatically takes over.</p><h2 id=\"case-2-kubernetes-ingress\"><strong>Case 2: Kubernetes Ingress</strong></h2><p>Building on the first case, you’ll see how to use Traefik Enterprise as a multi-node Kubernetes Ingress controller, complete with SSL termination and a rate-limiting feature to prevent network congestion from excessive requests.</p><h2 id=\"case-3-cloud-scale-load-balancing\"><strong>Case 3: Cloud-Scale Load Balancing</strong></h2><p>Finally, you’ll use Traefik Enterprise and additional open source tools to build a truly enterprise-grade network environment that’s capable of scaling to handle massive amounts of requests.</p><h2 id=\"sounds-interesting-how-can-i-learn-more\">Sounds interesting, how can I learn more?</h2><p>If any of this sounds like an itch you’ve been eager to scratch within your own organization, <a href=\"https://info.traefik.io/request-technical-paper-traefik-ha\">download the paper</a> and dive right in. You’ll receive a link to the Expert Guide, which includes instructions on how to download the accompanying configuration files for the walk-through.Also, if you want to begin building hands-on experience with Traefik Enterprise, there are two great ways to explore the high availability features it has to offer. The first is to contact Traefik Labs and<a href=\"https://info.traefik.io/en/request-demo-traefik-enterprise\"> request a guided demo</a> that will help you understand how Traefik Enterprise can benefit your organization. Or, if you’re ready to roll up your sleeves, sign up for a<a href=\"https://info.traefik.io/get-traefik-enterprise-free-for-30-days\"> 30-day free trial</a> and see for yourself how easy it is to get started.</p>","url":"https://containous.ghost.io/blog/unleash-the-power-of-traefik-for-high-availability-load-balancing/","canonical_url":null,"uuid":"fabc68fa-2cb9-48c4-a81e-09eca13390ff","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5fd818d9255eda00390e23b8","reading_time":2}},{"node":{"id":"Ghost__Post__5fb312644a99b50039ce6d0d","title":"Lock Down Your Network with Traefik Enterprise and Vault","slug":"lock-down-your-network-with-traefik-enterprise-and-vault","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/467c1cae57eb781022dd88370e8e23bb/47498/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg","srcSet":"/static/467c1cae57eb781022dd88370e8e23bb/9dc27/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg 300w,\n/static/467c1cae57eb781022dd88370e8e23bb/4fe8c/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg 600w,\n/static/467c1cae57eb781022dd88370e8e23bb/47498/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg 1200w,\n/static/467c1cae57eb781022dd88370e8e23bb/52258/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg 1800w,\n/static/467c1cae57eb781022dd88370e8e23bb/a41d1/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Traefik Enterprise 2.3 now supports Vault for certificate management in two ways: as a key-value store for certificates, and as a certificate resolver.","custom_excerpt":"Traefik Enterprise 2.3 now supports Vault for certificate management in two ways: as a key-value store for certificates, and as a certificate resolver.","visibility":"public","created_at_pretty":"16 November, 2020","published_at_pretty":"November 17, 2020","updated_at_pretty":"08 December, 2020","created_at":"2020-11-16T23:59:32.000+00:00","published_at":"2020-11-17T05:26:08.000+00:00","updated_at":"2020-12-08T16:11:14.000+00:00","meta_title":"Lock Down Your Network with Traefik Enterprise and Vault","meta_description":"Traefik Enterprise 2.3 now supports Vault for certificate management in two ways: as a key-value store for certificates, and as a certificate resolver.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.png","twitter_title":null,"authors":[{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"#api-gateway-related-resource","slug":"hash-api-gateway-related-resource","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"internal"}],"plaintext":"Every organization has secrets. Likewise, every application and service must\nmanage sensitive information – such as usernames and passwords, license keys,\ndatabase credentials, and so on – that should be kept away from prying eyes.\n\nAmong the most important secrets that modern apps must maintain are the TLS\ncertificates [https://en.wikipedia.org/wiki/Transport_Layer_Security] that make\nencrypted HTTPS communications possible. The good news for Traefik Enterprise\nusers is that handling these secrets is now easier than ever, thanks to support\nfor Vault in Traefik Enterprise 2.3.\n\nVault [https://www.vaultproject.io/] is an open source\n[https://github.com/hashicorp/vault] tool developed and maintained by HashiCorp\nthat provides a secure and encrypted central data store for secrets. Traefik\nEnterprise 2.3 can use Vault for certificate management in two ways. First, it\ncan use Vault as a key-value store for certificates. Second, it can enlist Vault\nas a certificate resolver, allowing it to dynamically generate certificates on\nthe fly. Let’s examine both use cases.\n\nUsing Vault as a Key-Value Store for Certificates\nTraefik has long been able to discover and connect with a variety of key-value\nstores, such as Consul, etcd, and ZooKeeper. The Vault provider for Traefik\nEnterprise 2.3 and later can connect to Vault in a similar way, using it as a\nkey-value store for storing and retrieving TLS certificates.\n\nThe first step is to setup the Vault secrets engine for use with Traefik\nEnterprise. As of now, Traefik Enterprise supports the KV Secrets Engine –\nVersion 2 [https://www.vaultproject.io/docs/secrets/kv/kv-v2], which is\ncurrently the default and is easily enabled from the command line. It’s a good\nidea to use a dedicated KV store for TLS certificates, and bear in mind that all\ncertificates must be base64-encoded and stored in the root of the KV secrets\nengine.\n\nFrom there, it’s a straightforward matter of enabling the Vault Provider in\nTraefik Enterprise’s static configuration. This takes just a few lines of code,\nand a typical example (in YAML) might look like this:\n\nproviders:\n  plugin:\n    vault:\n      url: \"http://127.0.0.1:8200\"\n      token: \"s.CUDDqqjiIFXF60KVSeJOxeb5\"\n      enginePath: \"secret\"\n      syncInterval: \"5s\"\n      rescanInterval: \"60s\"\n\n\nThis snippet points to the URL of the Vault server and supplies the token that’s\nneeded to authenticate with it. (The Vault Provider only supports token\nauthentication at this time.) It also specifies how often the provider will pull\ndata from the Vault KV store.\n\nThat’s it! Once configured, Traefik Enterprise will detect certificates in the\nstore to serve them. And, as usual for Traefik Enterprise, the configuration\nrefreshes automatically whenever you insert or delete certificates from the\nVault store.\n\nIf you’d like to learn more about how to setup and configure the Vault Provider\nfor Traefik Enterprise, check out the documentation\n[https://doc.traefik.io/traefik-enterprise/providers/vault-kv/].\n\nUsing Vault as a Certificate Resolver for PKI\nExperienced Traefik users will be familiar with its support for automatic\ncertificate generation using the ACME protocol and compatible service providers,\nsuch as Let’s Encrypt [https://doc.traefik.io/traefik-enterprise/tls/acme/].\nTraefik Enterprise 2.3 adds a new, additional means of automating certificate\ngeneration in the form of support for Vault Public Key Infrastructure (PKI)\n[https://www.hashicorp.com/products/vault/pki-with-vault].\n\nThe Vault PKI secrets engine includes built-in authentication and authorization\nfunctions that make it possible to generate certificates on the fly, without\ngetting bogged down in the traditional, manual process of generating keys and\nsubmitting to a certificate authority (CA).\n\nThis automation is especially valuable in dynamic, microservices-based\nenvironments, where services tend to be short-lived and container instances are\nrapidly created and destroyed, according to demand.\n\nSetting up Vault as a certificate resolver\n[https://doc.traefik.io/traefik/https/acme/#certificate-resolvers] is almost as\neasy as configuring the Vault Provider, as discussed earlier. Once Vault is\ninstalled with the PKI secrets engine enabled, configuring the feature requires\nadding just a few lines to Traefik Enterprise’s static configuration. For\nexample:\n\ncertificatesResolvers:\n  resolverName:\n\tvault:\n  \turl: \"http://127.0.0.1:8200\"\n  \ttoken: \"s.CUDDqqjiIFXF60KVSeJOxeb5\" # Your Vault auth token goes here\n  \tenginePath: \"pki\"\n  \trole: \"vault-role\"\n\n\nOnce the certificate resolver is configured, assigning it to routes in Traefik\nEnterprise will trigger Vault to generate certificates for requests that match\nthe appropriate patterns. To read more about how this works, consult the \ndocumentation [https://doc.traefik.io/traefik-enterprise/tls/vault-pki/].\nThere’s also a handy user guide\n[https://doc.traefik.io/traefik-enterprise/operations/vault-pki-guide/] \navailable that walks through the process of deploying a simple TLS-enabled\nservice with Vault on Kubernetes.\n\nGet Secure with Traefik Enterprise\nTraefik Labs is pleased to offer support for Vault in Traefik Enterprise as\nfurther proof of our commitment to provide best-of-breed features that\nsecurity-conscious enterprises demand. Using Vault to manage secrets is a step\nforward in securing your network; using Vault with Traefik Enterprise makes\ntaking that step even easier. If you’d like to learn more about these and other\nadvanced features of Traefik Enterprise, the best way is to try them out for\nyourself. Sign up for a 30-day free trial\n[https://info.traefik.io/get-traefik-enterprise-free-for-30-days] and explore\nhow Traefik Enterprise can help make your infrastructure more nimble, reliable,\nand secure.","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault.jpg\" class=\"kg-image\" alt=\"Lock Down Your Network with Traefik Enterprise and Vault\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault.jpg 1600w, https://containous.ghost.io/content/images/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault.jpg 2400w\" sizes=\"(min-width: 720px) 720px\"></figure><p>Every organization has secrets. Likewise, every application and service must manage sensitive information – such as usernames and passwords, license keys, database credentials, and so on – that should be kept away from prying eyes.</p><!--kg-card-begin: markdown--><p>Among the most important secrets that modern apps must maintain are the <a href=\"https://en.wikipedia.org/wiki/Transport_Layer_Security\" target=\"_blank\" rel=\"nofollow\">TLS certificates</a> that make encrypted HTTPS communications possible. The good news for Traefik Enterprise users is that handling these secrets is now easier than ever, thanks to support for Vault in Traefik Enterprise 2.3.</p>\n<p><a href=\"https://www.vaultproject.io/\" target=\"_blank\" rel=\"nofollow\">Vault</a> is an <a href=\"https://github.com/hashicorp/vault\" target=\"_blank\" rel=\"nofollow\">open source</a> tool developed and maintained by HashiCorp that provides a secure and encrypted central data store for secrets. Traefik Enterprise 2.3 can use Vault for certificate management in two ways. First, it can use Vault as a key-value store for certificates. Second, it can enlist Vault as a certificate resolver, allowing it to dynamically generate certificates on the fly. Let’s examine both use cases.</p>\n<!--kg-card-end: markdown--><h2 id=\"using-vault-as-a-key-value-store-for-certificates\"><strong>Using Vault as a Key-Value Store for Certificates</strong></h2><p>Traefik has long been able to discover and connect with a variety of key-value stores, such as Consul, etcd, and ZooKeeper. The Vault provider for Traefik Enterprise 2.3 and later can connect to Vault in a similar way, using it as a key-value store for storing and retrieving TLS certificates.</p><!--kg-card-begin: markdown--><p>The first step is to setup the Vault secrets engine for use with Traefik Enterprise. As of now, Traefik Enterprise supports the <a href=\"https://www.vaultproject.io/docs/secrets/kv/kv-v2\" target=\"_blank\" rel=\"nofollow\">KV Secrets Engine – Version 2</a>, which is currently the default and is easily enabled from the command line. It’s a good idea to use a dedicated KV store for TLS certificates, and bear in mind that all certificates must be base64-encoded and stored in the root of the KV secrets engine.</p>\n<!--kg-card-end: markdown--><p>From there, it’s a straightforward matter of enabling the Vault Provider in Traefik Enterprise’s static configuration. This takes just a few lines of code, and a typical example (in YAML) might look like this:</p><!--kg-card-begin: markdown--><pre><code class=\"language-yaml\">providers:\n  plugin:\n    vault:\n      url: &quot;http://127.0.0.1:8200&quot;\n      token: &quot;s.CUDDqqjiIFXF60KVSeJOxeb5&quot;\n      enginePath: &quot;secret&quot;\n      syncInterval: &quot;5s&quot;\n      rescanInterval: &quot;60s&quot;\n</code></pre>\n<!--kg-card-end: markdown--><p>This snippet points to the URL of the Vault server and supplies the token that’s needed to authenticate with it. (The Vault Provider only supports token authentication at this time.) It also specifies how often the provider will pull data from the Vault KV store.</p><p>That’s it! Once configured, Traefik Enterprise will detect certificates in the store to serve them. And, as usual for Traefik Enterprise, the configuration refreshes automatically whenever you insert or delete certificates from the Vault store.</p><p>If you’d like to learn more about how to setup and configure the Vault Provider for Traefik Enterprise, check out the <a href=\"https://doc.traefik.io/traefik-enterprise/providers/vault-kv/\">documentation</a>.</p><h2 id=\"using-vault-as-a-certificate-resolver-for-pki\"><strong>Using Vault as a Certificate Resolver for PKI</strong></h2><!--kg-card-begin: markdown--><p>Experienced Traefik users will be familiar with its support for automatic certificate generation using the ACME protocol and compatible service providers, such as <a href=\"https://doc.traefik.io/traefik-enterprise/tls/acme/\">Let’s Encrypt</a>. Traefik Enterprise 2.3 adds a new, additional means of automating certificate generation in the form of support for <a href=\"https://www.hashicorp.com/products/vault/pki-with-vault\" target=\"_blank\" rel=\"nofollow\">Vault Public Key Infrastructure (PKI)</a>.</p>\n<!--kg-card-end: markdown--><p>The Vault PKI secrets engine includes built-in authentication and authorization functions that make it possible to generate certificates on the fly, without getting bogged down in the traditional, manual process of generating keys and submitting to a certificate authority (CA).</p><p>This automation is especially valuable in dynamic, microservices-based environments, where services tend to be short-lived and container instances are rapidly created and destroyed, according to demand.</p><p>Setting up Vault as a <a href=\"https://doc.traefik.io/traefik/https/acme/#certificate-resolvers\">certificate resolver</a> is almost as easy as configuring the Vault Provider, as discussed earlier. Once Vault is installed with the PKI secrets engine enabled, configuring the feature requires adding just a few lines to Traefik Enterprise’s static configuration. For example:</p><!--kg-card-begin: markdown--><pre><code>certificatesResolvers:\n  resolverName:\n\tvault:\n  \turl: &quot;http://127.0.0.1:8200&quot;\n  \ttoken: &quot;s.CUDDqqjiIFXF60KVSeJOxeb5&quot; # Your Vault auth token goes here\n  \tenginePath: &quot;pki&quot;\n  \trole: &quot;vault-role&quot;\n</code></pre>\n<!--kg-card-end: markdown--><p>Once the certificate resolver is configured, assigning it to routes in Traefik Enterprise will trigger Vault to generate certificates for requests that match the appropriate patterns. To read more about how this works, consult the <a href=\"https://doc.traefik.io/traefik-enterprise/tls/vault-pki/\">documentation</a>. There’s also a handy <a href=\"https://doc.traefik.io/traefik-enterprise/operations/vault-pki-guide/\">user guide</a> available that walks through the process of deploying a simple TLS-enabled service with Vault on Kubernetes.</p><h2 id=\"get-secure-with-traefik-enterprise\"><strong>Get Secure with Traefik Enterprise</strong></h2><p>Traefik Labs is pleased to offer support for Vault in Traefik Enterprise as further proof of our commitment to provide best-of-breed features that security-conscious enterprises demand. Using Vault to manage secrets is a step forward in securing your network; using Vault with Traefik Enterprise makes taking that step even easier. If you’d like to learn more about these and other advanced features of Traefik Enterprise, the best way is to try them out for yourself. Sign up for a <a href=\"https://info.traefik.io/get-traefik-enterprise-free-for-30-days\">30-day free trial</a> and explore how Traefik Enterprise can help make your infrastructure more nimble, reliable, and secure.</p>","url":"https://containous.ghost.io/blog/lock-down-your-network-with-traefik-enterprise-and-vault/","canonical_url":null,"uuid":"5d85e5ae-9959-4084-b85e-794ac0801881","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5fb312644a99b50039ce6d0d","reading_time":3}},{"node":{"id":"Ghost__Post__5f97b3e69895340039a5049a","title":"How Vaudoise Insurance Deployed Traefik Enterprise to Successfully Modernize with Microservices","slug":"how-vaudoise-insurance-deployed-traefik-enterprise-to-successfully-modernize-with-microservices","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/10/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/2a1ae030bfab70f582e8aa01d0400eb8/f3583/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise.png","srcSet":"/static/2a1ae030bfab70f582e8aa01d0400eb8/630fb/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise.png 300w,\n/static/2a1ae030bfab70f582e8aa01d0400eb8/2a4de/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise.png 600w,\n/static/2a1ae030bfab70f582e8aa01d0400eb8/f3583/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise.png 1200w,\n/static/2a1ae030bfab70f582e8aa01d0400eb8/bbee5/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise.png 1800w,\n/static/2a1ae030bfab70f582e8aa01d0400eb8/0ef64/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise.png 2400w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"As an insurance company, security and service uptime are two of Vaudoise's highest requirements. Traefik Enterprise provides high availability and encryption capabilities necessary for Vaudoise, in a single, easy-to-use solution.","custom_excerpt":"As an insurance company, security and service uptime are two of Vaudoise's highest requirements. Traefik Enterprise provides high availability and encryption capabilities necessary for Vaudoise, in a single, easy-to-use solution.","visibility":"public","created_at_pretty":"27 October, 2020","published_at_pretty":"October 27, 2020","updated_at_pretty":"17 November, 2020","created_at":"2020-10-27T05:45:10.000+00:00","published_at":"2020-10-27T06:05:22.000+00:00","updated_at":"2020-11-17T05:26:20.000+00:00","meta_title":"How Vaudoise Deployed Traefik Enterprise to Modernize w/ Microservices","meta_description":"Traefik Enterprise provides high availability and encryption capabilities necessary for Vaudoise, in a single, easy-to-use solution.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/10/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise---Twitter.png","twitter_title":"How Vaudoise Insurance Deployed Traefik Enterprise to Successfully Modernize with Microservices","authors":[{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Case Studies","slug":"case-studies","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":"Learn from our users and customers why they choose Traefik and TraefikEE as a modern load balancer to manage network traffic.","meta_title":"Case studies | Containous","visibility":"public"}],"plaintext":"About Vaudoise Insurance\nVaudoise Insurance [https://www.vaudoise.ch] is the only independent private\ninsurance company with a decision-making center in French-speaking Switzerland.\nFounded in 1895, it is one of the ten largest private insurers in the Swiss\nmarket. Vaudoise provides individuals and SMEs with high-level advice and\nsolutions in all areas of insurance and pension provision. Through its network\nof around 100 branches across Switzerland, it offers its customers local\nservice, in terms of both advice and claims settlement. The Group employs\nroughly 1,550 people, including around 100 apprentices.\n\nOverview\nHow do you modernize a company with 125 years of history? Vaudoise Insurance\nentered the digital age decades ago, yet the technical debt incurred by years of\nlegacy computing was becoming too much to manage. Its monolithic systems were\nburdensome to upgrade and rolling out new features required coordination from\nmultiple teams. The pace of change was too slow.\n\nVaudoise’s technical teams needed to become more agile to match the pace of\ntoday’s business environment. Its 150-200 IT staffers shared the task of\nmanaging some 300 applications, and too many of these were silos. What the\ncompany’s development teams wanted was to expose more of its internal data via\nAPIs, making it easier to build new, lightweight applications based on\nmicroservices.\n\nComplicating matters was the fact that insurance is a highly regulated industry,\nparticularly when it comes to data privacy. That meant Vaudoise would need to\ncontinue to host and manage some of its applications on premises, and any new\ntechnologies introduced could not significantly add to the existing management\nburden.\n\nChallenge\nVaudoise’s strategy was to begin developing new applications as Docker\ncontainers, while simultaneously modernizing its monolithic, legacy applications\nby decomposing them into containerized services. The intent was that this would\nnot only speed time-to-delivery for new applications, but it would also allow\ndevelopment teams to experiment with new technologies (such as NoSQL databases)\nthat simply weren’t available to their legacy systems.\n\nDamien Desvignes and Patrick Monbaron, application lifecycle management (ALM)\nengineer and system engineer at Vaudoise, belong to the multidisciplinary team\nresponsible for the Docker platform. The company chose Docker Enterprise as its\ncontainer platform, both because of its proven technology and because its Docker\nSwarm mode orchestration layer was significantly less complicated to deploy than\nalternatives (such as Kubernetes).\n\nStill this left Damien and Patrick’s team with another problem. Now that it had\ndecided how it would host its containers and services, how would it publish\nthem?\n\n> \"We needed a tool that would allow us to dynamically publish new services, or\nchange the configuration of existing services, that was simple to handle and\nthat did not need a restart, unlike the usual nginx-based tools.” Patrick\nMonbaron, system engineer at Vaudoise\n> “As an insurance company, security and service uptime are two of our highest\nrequirements. Traefik Enterprise provides high availability and encryption\ncapabilities necessary for Vaudoise, in a single, easy-to-use solution.” Patrick\nMonbaron, system engineer at Vaudoise\nSolution\nPrior to the company initiative, Damien had successfully used Traefik for over 3\nyears and was confident that its ease-of-use, versatile feature set, and broad\necosystem made it the right choice for application networking with containers.\n\nAs Vaudoise started this new containerized application strategy, Damien\nimmediately sought out Traefik Enterprise\n[https://traefik.io/traefik-enterprise/] to help satisfy the company’s\nproduction networking requirements. Traefik Enterprise provides out-of-the-box\nhigh availability (HA) and security features that are essential for a business\noperating in the insurance industry. For example, Traefik Enterprise can\ninterface with the Docker Universal Control Plane (UCP) to enable role-based\naccess control (RBAC) on the cluster. Additionally, Traefik Enterprise includes\nfast, responsive enterprise support from Traefik Labs, giving Vaudoise the peace\nof mind of having a partner to rely on.\n\nFrom an operations perspective, Patrick and his infrastructure team benefited\nfrom using Traefik Enterprise by securing and managing Docker Swarm ingress\ntraffic, making it faster and easier to deploy new services. Even HTTPS\nencryption is now centrally managed by the infrastructure team, leaving\ndevelopers free to concentrate on software delivery, without a lot of cross-team\ncoordination.\n\n> “Developers are a lot more autonomous than before. Dev teams can manage the\nrewrite rules on their own, for example, which was not possible before.” Patrick\nMonbaron, system engineer at Vaudoise\nBottom Line\nVaudoise Insurance is only at the beginning of its journey with containers and\nTraefik Enterprise. Damien and Patrick are looking forward to working with\nfeatures introduced in recent versions of Traefik, including the ability to\nsupport applications that use the TCP and UDP protocols, in addition to HTTP.\nEmerging technologies such as service mesh – a feature offered by Traefik\nEnterprise 2.2 – are also under consideration.\n\nDown the road, Vaudoise may even consider moving from Docker Swarm to a more\nfull-featured container orchestrator, such as Kubernetes, confident that Traefik\nEnterprise will continue to support that new environment.\n\nAlready, however, the features of Traefik Enterprise – including enterprise\nsupport from Containous – have been instrumental in Vaudoise’s IT modernization\njourney. Traefik’s vibrant and active ecosystem, coupled with the enterprise\nfeatures and evolving technology roadmap of Traefik Enterprise, allow Vaudoise\nto proceed with confidence, knowing it will be well-positioned for continued\nsuccess as it moves into the next phase of its long history\n\nWhat’s Next?\n * Discover Traefik Enterprise [https://traefik.io/traefik-enterprise/], and \n   request your demo\n   [https://info.traefik.io/en/request-demo-traefik-enterprise].","html":"<figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2020/10/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise-2.jpg\" class=\"kg-image\" alt=\"How Vaudoise Insurance Deployed Traefik Enterprise to Successfully Modernize with Microservices\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/10/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise-2.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/10/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise-2.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/10/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise-2.jpg 1600w, https://containous.ghost.io/content/images/2020/10/How-Vaudoise-Insurance-Deployed-Traefik-Enterprise-2.jpg 2400w\" sizes=\"(min-width: 1200px) 1200px\"></figure><h2 id=\"about-vaudoise-insurance\"><strong>About Vaudoise Insurance</strong></h2><!--kg-card-begin: markdown--><p><a href=\"https://www.vaudoise.ch\" target=\"_blank\" rel=\"nofollow\">Vaudoise Insurance</a> is the only independent private insurance company with a decision-making center in French-speaking Switzerland. Founded in 1895, it is one of the ten largest private insurers in the Swiss market. Vaudoise provides individuals and SMEs with high-level advice and solutions in all areas of insurance and pension provision. Through its network of around 100 branches across Switzerland, it offers its customers local service, in terms of both advice and claims settlement. The Group employs roughly 1,550 people, including around 100 apprentices.</p>\n<!--kg-card-end: markdown--><h2 id=\"overview\"><strong>Overview</strong></h2><p>How do you modernize a company with 125 years of history? Vaudoise Insurance entered the digital age decades ago, yet the technical debt incurred by years of legacy computing was becoming too much to manage. Its monolithic systems were burdensome to upgrade and rolling out new features required coordination from multiple teams. The pace of change was too slow.</p><p>Vaudoise’s technical teams needed to become more agile to match the pace of today’s business environment. Its 150-200 IT staffers shared the task of managing some 300 applications, and too many of these were silos. What the company’s development teams wanted was to expose more of its internal data via APIs, making it easier to build new, lightweight applications based on microservices.</p><p>Complicating matters was the fact that insurance is a highly regulated industry, particularly when it comes to data privacy. That meant Vaudoise would need to continue to host and manage some of its applications on premises, and any new technologies introduced could not significantly add to the existing management burden.</p><h2 id=\"challenge\"><strong>Challenge</strong></h2><p>Vaudoise’s strategy was to begin developing new applications as Docker containers, while simultaneously modernizing its monolithic, legacy applications by decomposing them into containerized services. The intent was that this would not only speed time-to-delivery for new applications, but it would also allow development teams to experiment with new technologies (such as NoSQL databases) that simply weren’t available to their legacy systems.</p><p>Damien Desvignes and Patrick Monbaron, application lifecycle management (ALM) engineer and system engineer at Vaudoise, belong to the multidisciplinary team responsible for the Docker platform. The company chose Docker Enterprise as its container platform, both because of its proven technology and because its Docker Swarm mode orchestration layer was significantly less complicated to deploy than alternatives (such as Kubernetes).</p><p>Still this left Damien and Patrick’s team with another problem. Now that it had decided how it would host its containers and services, how would it publish them?</p><blockquote>\"We needed a tool that would allow us to dynamically publish new services, or change the configuration of existing services, that was simple to handle and that did not need a restart, unlike the usual nginx-based tools.”<strong> </strong>Patrick Monbaron, system engineer at Vaudoise</blockquote><blockquote>“As an insurance company, security and service uptime are two of our highest requirements. Traefik Enterprise provides high availability and encryption capabilities necessary for Vaudoise, in a single, easy-to-use solution.”<strong> </strong>Patrick Monbaron, system engineer at Vaudoise</blockquote><h2 id=\"solution\"><strong>Solution</strong></h2><p>Prior to the company initiative, Damien had successfully used Traefik for over 3 years and was confident that its ease-of-use, versatile feature set, and broad ecosystem made it the right choice for application networking with containers.</p><p>As Vaudoise started this new containerized application strategy, Damien immediately sought out <a href=\"https://traefik.io/traefik-enterprise/\">Traefik Enterprise</a> to help satisfy the company’s production networking requirements. Traefik Enterprise provides out-of-the-box high availability (HA) and security features that are essential for a business operating in the insurance industry. For example, Traefik Enterprise can interface with the Docker Universal Control Plane (UCP) to enable role-based access control (RBAC) on the cluster. Additionally, Traefik Enterprise includes fast, responsive enterprise support from Traefik Labs, giving Vaudoise the peace of mind of having a partner to rely on.</p><p>From an operations perspective, Patrick and his infrastructure team benefited from using Traefik Enterprise by securing and managing Docker Swarm ingress traffic, making it faster and easier to deploy new services. Even HTTPS encryption is now centrally managed by the infrastructure team, leaving developers free to concentrate on software delivery, without a lot of cross-team coordination.</p><blockquote>“Developers are a lot more autonomous than before. Dev teams can manage the rewrite rules on their own, for example, which was not possible before.” Patrick Monbaron, system engineer at Vaudoise</blockquote><h2 id=\"bottom-line\"><strong>Bottom Line</strong></h2><p>Vaudoise Insurance is only at the beginning of its journey with containers and Traefik Enterprise. Damien and Patrick are looking forward to working with features introduced in recent versions of Traefik, including the ability to support applications that use the TCP and UDP protocols, in addition to HTTP. Emerging technologies such as service mesh – a feature offered by Traefik Enterprise 2.2 – are also under consideration.</p><p>Down the road, Vaudoise may even consider moving from Docker Swarm to a more full-featured container orchestrator, such as Kubernetes, confident that Traefik Enterprise will continue to support that new environment.</p><p>Already, however, the features of Traefik Enterprise – including enterprise support from Containous – have been instrumental in Vaudoise’s IT modernization journey. Traefik’s vibrant and active ecosystem, coupled with the enterprise features and evolving technology roadmap of Traefik Enterprise, allow Vaudoise to proceed with confidence, knowing it will be well-positioned for continued success as it moves into the next phase of its long history</p><h2 id=\"what-s-next\">What’s Next?</h2><ul><li>Discover <a href=\"https://traefik.io/traefik-enterprise/\">Traefik Enterprise</a>, and <a href=\"https://info.traefik.io/en/request-demo-traefik-enterprise\">request your demo</a>.</li></ul>","url":"https://containous.ghost.io/blog/how-vaudoise-insurance-deployed-traefik-enterprise-to-successfully-modernize-with-microservices/","canonical_url":null,"uuid":"0d4cadb3-fdb1-455e-bb85-9e0f8e4cb840","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f97b3e69895340039a5049a","reading_time":4}},{"node":{"id":"Ghost__Post__5f5970b6ff947b00398fd523","title":"Achieve zero-downtime deployments with Traefik and Kubernetes","slug":"achieve-zero-downtime-deployments-with-traefik-and-kubernetes","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/09/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/bb8460cc002da7893c5dd6af9f4fc7a0/47498/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes-1.jpg","srcSet":"/static/bb8460cc002da7893c5dd6af9f4fc7a0/9dc27/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes-1.jpg 300w,\n/static/bb8460cc002da7893c5dd6af9f4fc7a0/4fe8c/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes-1.jpg 600w,\n/static/bb8460cc002da7893c5dd6af9f4fc7a0/47498/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes-1.jpg 1200w,\n/static/bb8460cc002da7893c5dd6af9f4fc7a0/52258/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes-1.jpg 1800w,\n/static/bb8460cc002da7893c5dd6af9f4fc7a0/a41d1/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Containers and Kubernetes have revolutionized software delivery. Releasing apps and services as stateless container images makes it easy to create and destroy container instances as demand requires.","custom_excerpt":"Containers and Kubernetes have revolutionized software delivery. Releasing apps and services as stateless container images makes it easy to create and destroy container instances as demand requires.","visibility":"public","created_at_pretty":"10 September, 2020","published_at_pretty":"September 10, 2020","updated_at_pretty":"12 October, 2020","created_at":"2020-09-10T00:17:58.000+00:00","published_at":"2020-09-10T14:18:42.000+00:00","updated_at":"2020-10-12T23:57:15.000+00:00","meta_title":"Achieve zero-downtime deployments with Traefik and Kubernetes","meta_description":"Blue-green deployments, canary releases, and A/B testing are three popular network-centric approaches to software testing and deployment.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/09/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes---Twitter.png","twitter_title":null,"authors":[{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Kubernetes","slug":"kubernetes","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Rapid release cycles are the hallmark of modern software development. The\ncloud-native ecosystem tooling includes containers, Kubernetes, microservices,\nand agile development methods, all of which support and encourage frequent\ndelivery and deployment. The hidden downside, however, is that every change to\nproduction is another chance for something to go wrong.\n\nIn the worst-case scenario, that \"something\" means downtime.\n\nTesting is always the first line of defense against service disruption.\nUnfortunately, cloud-native application architectures can be surprisingly\ncomplex, and the full extent of the interactions between APIs and services can\nbe hard to map and predict. Because of this, the traditional testing march from\ndevelopment through staging is unlikely to catch every issue before new code\nreaches production.\n\nToday’s network-centric applications call for new, network-centric approaches to\nsoftware testing and deployment. As a modern, cloud-native edge router, Traefik\nis ready to help.\n\nRouting around downtime\nContainers and Kubernetes have revolutionized software delivery. Releasing apps\nand services as stateless container images makes it easy to create and destroy\ncontainer instances as demand requires. Is an application experiencing a traffic\nspike? Operators may add additional instances to the cluster and use a load\nbalancer to distribute requests accordingly.\n\nThis model gets really interesting, however, when instances of more than one\nversion of the same software serve requests within the same cluster. Mixing old\nand new versions like this makes it possible to configure routing rules to test\nthe production environment's latest version. More importantly, the new version\ncan be released gradually – and even withdrawn, should problems arise – all with\nvirtually no downtime.\n\nThree popular variations on this idea are blue-green deployments, canary\nreleases, and A/B testing. Although all three are related, each is also\ndistinct.\n\nBlue-green deployments\nIn this pattern, “green” refers to the current, stable version of the software,\nwhile “blue” refers to an upcoming release that introduces new features and\nfixes. Instances of both versions operate simultaneously in the same production\nenvironment. Concurrently, a proxy router (such as Traefik) ensures that only\nrequests sent to a private address can reach the blue instances.\n\nThere are two ways to test such a setup. The first is to run synthetic tests\nagainst the blue instances, confident that they are being staged in an\nenvironment that matches production exactly. A more ambitious method involves \ntraffic mirroring, in which the green instances handle incoming requests, but a\nduplicate of every request is also sent to the blue instances. Although this can\nbe resource intensive, it creates an accurate simulation of what would happen if\nthe blue instances were running the show.\n\nOnce all test cases and integrations are satisfied, switching over from the\ngreen to the blue version is as simple as updating the routing rules. In effect,\nblue becomes green, and eventually the next iteration of the software is\ndeployed as the new blue. Equally important, it’s just as easy to revert the\nrouting rules and roll back to the earlier green version, should some\nlast-minute catastrophe occur.\n\nCanary releases\nThe canary release model takes blue-green testing a step further by deploying\nnew features and patches into active production, albeit in a measured way. The\nrouter is configured such that the current, stable version of the software\nhandles most requests, but a limited percentage of requests route to instances\nof the new, “canary” version.\n\nTrue to the “canary in a coal mine” metaphor, if instances of the canary release\nstart dropping dead (or exhibiting problems in some way), they can be withdrawn\nfor bug fixes while the stable release carries on as before. If things go\nsmoothly, on the other hand, the proportion of requests handled by the canary\nrelease can be gradually increased until it reaches 100 percent.\n\nThis model breaks down quickly, however, when the canary release is too large\nand introduces too many changes at once. It works best for microservice\narchitectures, where features or fixes can be released incrementally and\nevaluated on their particular merits.\n\nA/B testing\nThis technique is sometimes confused with the previous two, but it has its own\npurpose, which is to evaluate two distinct versions of an upcoming release to\nsee which will be more successful. This tactic is common for UI development. For\nexample, suppose a new feature will soon roll out to an application, but it’s\nunclear how best to expose it to users. To find out, two versions of the UI\nincluding the the feature, run in tandem – Version A and Version B – and the\nproxy router sends a limited number of requests to each one.\n\nFrom there, metrics can help determine which version is the better choice. Does\nVersion A do a better job of convincing users to try the new feature? Do users\ncomplete the UI sequence faster using Version B, or do they tend to cancel\nbefore the end? Each version of the new UI can be trialed with a small number of\nusers while routing rules ensure that the stable version continues to serve the\nmajority of requests.\n\nNetwork effects\nThese techniques can be invaluable for testing modern, cloud-native software\narchitectures, especially when compared to traditional waterfall-style\ndeployment models. When used correctly, they can help spot unforeseen\nregressions, integration failures, performance bottlenecks, and usability issues\nwithin the production environment, but before new code graduates to a stable,\nproduction release.\n\nWhat all three approaches share in common is that they rely on the ease of\ndeployment afforded by containers and Kubernetes, coupled with cloud-native\nnetworking techniques, to route requests to testable deployments while\nminimizing disruptions to production code. That’s a powerful combination – one\nthat’s squarely within Traefik’s wheelhouse – and if employed judiciously, it\ncan effectively bring overall application downtime to zero. \n\nClick here [https://containo.us/solutions/kubernetes-ingress/] to learn more\nabout Traefik, a centralized routing solution for any Kubernetes cluster, that\nenables better application uptime.","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/09/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes.jpg\" class=\"kg-image\" alt=\"Achieve zero-downtime deployments with Traefik and Kubernetes\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/09/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes.jpg 1600w, https://containous.ghost.io/content/images/2020/09/Achieve-zero-downtime-deployments-with-Traefik-and-Kubernetes.jpg 2400w\" sizes=\"(min-width: 720px) 720px\"></figure><p>Rapid release cycles are the hallmark of modern software development. The cloud-native ecosystem tooling includes containers, Kubernetes, microservices, and agile development methods, all of which support and encourage frequent delivery and deployment. The hidden downside, however, is that every change to production is another chance for something to go wrong.</p><p>In the worst-case scenario, that \"something\" means downtime.</p><p>Testing is always the first line of defense against service disruption. Unfortunately, cloud-native application architectures can be surprisingly complex, and the full extent of the interactions between APIs and services can be hard to map and predict. Because of this, the traditional testing march from development through staging is unlikely to catch every issue before new code reaches production.</p><p>Today’s network-centric applications call for new, network-centric approaches to software testing and deployment. As a modern, cloud-native edge router, Traefik is ready to help.</p><h2 id=\"routing-around-downtime\"><strong>Routing around downtime</strong></h2><p>Containers and Kubernetes have revolutionized software delivery. Releasing apps and services as stateless container images makes it easy to create and destroy container instances as demand requires. Is an application experiencing a traffic spike? Operators may add additional instances to the cluster and use a load balancer to distribute requests accordingly.</p><p>This model gets really interesting, however, when instances of more than one version of the same software serve requests within the same cluster. Mixing old and new versions like this makes it possible to configure routing rules to test the production environment's latest version. More importantly, the new version can be released gradually – and even withdrawn, should problems arise – all with virtually no downtime.</p><p>Three popular variations on this idea are <strong>blue-green deployments</strong>, <strong>canary releases</strong>, and <strong>A/B testing</strong>. Although all three are related, each is also distinct.</p><h3 id=\"blue-green-deployments\"><strong>Blue-green deployments</strong></h3><p>In this pattern, “green” refers to the current, stable version of the software, while “blue” refers to an upcoming release that introduces new features and fixes. Instances of both versions operate simultaneously in the same production environment. Concurrently, a proxy router (such as Traefik) ensures that only requests sent to a private address can reach the blue instances.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/09/Diagram-Blue-green-deployments.png\" class=\"kg-image\" alt=\"Blue-green deployment\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/Diagram-Blue-green-deployments.png 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/Diagram-Blue-green-deployments.png 1000w, https://containous.ghost.io/content/images/size/w1600/2020/09/Diagram-Blue-green-deployments.png 1600w, https://containous.ghost.io/content/images/2020/09/Diagram-Blue-green-deployments.png 1695w\" sizes=\"(min-width: 720px) 720px\"></figure><p>There are two ways to test such a setup. The first is to run synthetic tests against the blue instances, confident that they are being staged in an environment that matches production exactly. A more ambitious method involves <em>traffic mirroring</em>, in which the green instances handle incoming requests, but a duplicate of every request is also sent to the blue instances. Although this can be resource intensive, it creates an accurate simulation of what would happen if the blue instances were running the show.</p><p>Once all test cases and integrations are satisfied, switching over from the green to the blue version is as simple as updating the routing rules. In effect, blue becomes green, and eventually the next iteration of the software is deployed as the new blue. Equally important, it’s just as easy to revert the routing rules and roll back to the earlier green version, should some last-minute catastrophe occur.</p><h3 id=\"canary-releases\"><strong>Canary releases</strong></h3><p>The canary release model takes blue-green testing a step further by deploying new features and patches into active production, albeit in a measured way. The router is configured such that the current, stable version of the software handles most requests, but a limited percentage of requests route to instances of the new, “canary” version.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/09/Diagram-canary-releases.png\" class=\"kg-image\" alt=\"Canary release model\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/Diagram-canary-releases.png 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/Diagram-canary-releases.png 1000w, https://containous.ghost.io/content/images/size/w1600/2020/09/Diagram-canary-releases.png 1600w, https://containous.ghost.io/content/images/2020/09/Diagram-canary-releases.png 1695w\" sizes=\"(min-width: 720px) 720px\"></figure><p>True to the “canary in a coal mine” metaphor, if instances of the canary release start dropping dead (or exhibiting problems in some way), they can be withdrawn for bug fixes while the stable release carries on as before. If things go smoothly, on the other hand, the proportion of requests handled by the canary release can be gradually increased until it reaches 100 percent.</p><p>This model breaks down quickly, however, when the canary release is too large and introduces too many changes at once. It works best for microservice architectures, where features or fixes can be released incrementally and evaluated on their particular merits.</p><h3 id=\"a-b-testing\"><strong>A/B testing</strong></h3><p>This technique is sometimes confused with the previous two, but it has its own purpose, which is to evaluate two distinct versions of an upcoming release to see which will be more successful. This tactic is common for UI development. For example, suppose a new feature will soon roll out to an application, but it’s unclear how best to expose it to users. To find out, two versions of the UI including the the feature, run in tandem – Version A and Version B – and the proxy router sends a limited number of requests to each one.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/09/Diagram-A-B-Testing.png\" class=\"kg-image\" alt=\"A/B testing\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/Diagram-A-B-Testing.png 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/Diagram-A-B-Testing.png 1000w, https://containous.ghost.io/content/images/size/w1600/2020/09/Diagram-A-B-Testing.png 1600w, https://containous.ghost.io/content/images/2020/09/Diagram-A-B-Testing.png 1695w\" sizes=\"(min-width: 720px) 720px\"></figure><p>From there, metrics can help determine which version is the better choice. Does Version A do a better job of convincing users to try the new feature? Do users complete the UI sequence faster using Version B, or do they tend to cancel before the end? Each version of the new UI can be trialed with a small number of users while routing rules ensure that the stable version continues to serve the majority of requests.</p><h2 id=\"network-effects\"><strong>Network effects</strong></h2><p>These techniques can be invaluable for testing modern, cloud-native software architectures, especially when compared to traditional waterfall-style deployment models. When used correctly, they can help spot unforeseen regressions, integration failures, performance bottlenecks, and usability issues within the production environment, but before new code graduates to a stable, production release.</p><p>What all three approaches share in common is that they rely on the ease of deployment afforded by containers and Kubernetes, coupled with cloud-native networking techniques, to route requests to testable deployments while minimizing disruptions to production code. That’s a powerful combination – one that’s squarely within Traefik’s wheelhouse – and if employed judiciously, it can effectively bring overall application downtime to zero. </p><p><a href=\"https://containo.us/solutions/kubernetes-ingress/\">Click here</a> to learn more about Traefik, a centralized routing solution for any Kubernetes cluster, that enables better application uptime. </p>","url":"https://containous.ghost.io/blog/achieve-zero-downtime-deployments-with-traefik-and-kubernetes/","canonical_url":null,"uuid":"a656bf3f-d4a9-4122-9793-2487b9b1d472","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f5970b6ff947b00398fd523","reading_time":4}},{"node":{"id":"Ghost__Post__5f4ee6313a6f7f00398c1198","title":"Unlock the potential of data APIs with strong authentication and Traefik Enterprise","slug":"unlock-the-potential-of-data-apis-with-strong-authentication-and-traefik-enterprise","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/09/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/cfaeda0f50c979152fc15e686c80b150/47498/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise-1.jpg","srcSet":"/static/cfaeda0f50c979152fc15e686c80b150/9dc27/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise-1.jpg 300w,\n/static/cfaeda0f50c979152fc15e686c80b150/4fe8c/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise-1.jpg 600w,\n/static/cfaeda0f50c979152fc15e686c80b150/47498/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise-1.jpg 1200w,\n/static/cfaeda0f50c979152fc15e686c80b150/52258/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise-1.jpg 1800w,\n/static/cfaeda0f50c979152fc15e686c80b150/a41d1/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"One of the top goals for enterprises today is to open up the data held within legacy systems and expose it through APIs, microservices, and other modern means.","custom_excerpt":"One of the top goals for enterprises today is to open up the data held within legacy systems and expose it through APIs, microservices, and other modern means.","visibility":"public","created_at_pretty":"02 September, 2020","published_at_pretty":"September 2, 2020","updated_at_pretty":"23 September, 2020","created_at":"2020-09-02T00:24:17.000+00:00","published_at":"2020-09-02T14:30:58.000+00:00","updated_at":"2020-09-23T12:31:19.000+00:00","meta_title":"Unlock the potential of data APIs with strong authentication & Traefik","meta_description":"One of the top goals for enterprises today is to open up data held within legacy systems and expose it through APIs, microservices, and other modern means","og_description":null,"og_image":null,"og_title":null,"twitter_description":"One of the top goals for enterprises today is to open up the data held within legacy systems and expose it through APIs, microservices, and other modern means.","twitter_image":"https://containous.ghost.io/content/images/2020/09/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise---Twitter.png","twitter_title":"Unlock the potential of data APIs with strong authentication and Traefik Enterprise","authors":[{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"How To","slug":"how-to","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"#api-gateway-related-resource","slug":"hash-api-gateway-related-resource","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"internal"}],"plaintext":"When it comes to enterprise IT infrastructure, security is of paramount\nimportance. Between the need for data protection and privacy, regulatory\nrequirements, and the constant threat of bad actors on the network, there is\nlittle room for error when designing and maintaining enterprise systems.\n\nBecause of this, strong authentication is a critical component of any IT\nmodernization project. One of the top goals for enterprises today is to open up\nthe data held within legacy systems and expose it through APIs, microservices,\nand other modern means. And yet, while this data represents untapped business\nvalue, it’s essential to only expose it in controlled ways by using\nauthentication to ensure each request’s validity.\n\nTraefik can help. As a modern, cloud-native edge router, Traefik’s goal is to\ndirect valid requests from the external network to applications and services,\nwhile minimizing the risk posed by malformed, malicious, or fraudulent requests.\nOne way it can do this is by acting as an intermediary to ensure that\ntransactions are authorized. What’s more, Traefik Enterprise (TraefikEE) bundles\nadditional, exclusive features to provide enterprise-grade authentication –\nincluding, most recently, support for OpenID Connect.\n\nWho goes there?\nOne of Traefik’s key concepts is its use of middlewares\n[https://docs.traefik.io/v2.2/middlewares/overview/], which are pluggable\ncomponents that provide conditional controls over network traffic. These\ncontrols can take various forms, including enabling security features such as\nrate limiting, restricting requests by IP address, and authentication.\n\nTraefikEE’s enterprise authentication middlewares work by referencing external \nauthentication sources. For example, the LDAP middleware connects to an LDAP\nserver to verify credentials. In this way, Traefik can act as a gatekeeper at\nthe edge of the internal network by intercepting incoming requests and\nauthenticating them against the external source before forwarding them to the\nappropriate applications.\n\nThis model can be particularly critical for legacy modernization projects\nbecause it allows authentication to occur externally to the application. One\nbenefit of this is that it makes it possible to add modern authentication\nmethods to legacy applications to satisfy the latest security requirements,\nwithout making any direct modifications to legacy code.\n\nEnterprise options\nIn addition to LDAP, Traefik Enterprise offers several other middlewares for\nenterprise authentication, and the collection continues to grow. Among the\nmethods that TraefikEE supports are:\n\nHMAC\nHash-based message authentication codes (HMAC\n[https://docs.containo.us/middlewares/hmac/]) is a method of using cryptographic\nhash functions with a shared secret (also known as a symmetric key) to ensure\nthe content delivered in an HTTP request is valid and genuine. Like digital\nsignatures, HMAC can verify a message sender’s identity and that the message’s\ncontent is unaltered from the moment of the HMAC’s  creation. The technique can\nbe used to secure file transfers, API calls, and other machine-to-machine\ninteractions.\n\nJWT\nJSON web tokens (JWT [https://docs.containo.us/middlewares/jwt/]) is another\npopular tool used to authenticate API calls and SSO applications. It’s a method\nof digitally signing information as a JSON object. The JWT includes a set of\n“claims,” which typically describe the things that an authenticated user is\nallowed to do. TraefikEE”s JWT middleware also includes support for JSON web key\nsets.\n\nOpenID Connect\nTraefikEE also includes support for OpenID Connect\n[https://docs.containo.us/middlewares/oidc/], an authentication layer built on\ntop of the OAuth 2.0 protocol. OpenID Connect allows an application to obtain\nuser login information by exchanging cryptographic tokens with an identity\nprovider, and is often used to implement federated single sign-on (SSO) between\nmultiple applications.\n\nOpenID Connect has become a popular option for enterprises because it allows\noperators to self-host their on-premises identity provider or choose from a\ngrowing number of third-party options. Okta\n[https://www.okta.com/openid-connect/], for example, is a cloud-hosted\nenterprise identity platform that supports authentication via OpenID Connect.\nSeveral public options are also available, allowing users to authenticate based\non their logins for services such as Google\n[https://developers.google.com/identity/protocols/oauth2/openid-connect] and \nPaypal [https://developer.paypal.com/docs/connect-with-paypal/].If full\nauthentication isn’t needed, TraefikEE also supplies a middleware for verifying\nthe authorization of requests via the OAuth 2.0 token introspection\n[https://docs.containo.us/middlewares/oauth-intro/] method.\n\nAuthentication the easy way\nThe best thing about implementing enterprise authentication using TraefikEE,\nhowever, is how easy it is to do. Enabling any of the authentication middleware\nmentioned here is generally as simple as adding a few lines to your Traefik\nconfiguration to supply the necessary credentials and point the middleware to\nyour authentication source.\n\nThe authentication options available in TraefikEE today offer a powerful range\nof options for exposing enterprise applications and data securely, without\nrequiring extensive and risky legacy code changes. You can expect other such\nfeatures to be included over time, as we continue our commitment to ensure\nTraefikEE is a premier tool for enterprise application networking.To learn more\nabout how Traefik and Traefik Enterprise can help you lock down enterprise data\nwith secure authentication, watch our recent webinar, “Enterprise best\npractices\nto expose and secure microservices and APIs\n[https://info.containo.us/webinar-recording-enterprise-best-practices-to-expose-and-secure-microservices-apis]\n”. We’ll discuss deploying OAuth and OpenID Connect with Okta to secure user\nlogins, and we’ll also walk through enabling mutual TLS (mTLS) for secure\nmachine-to-machine communications.","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/09/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise.jpg\" class=\"kg-image\" alt=\"Unlock the potential of data APIs with strong authentication and Traefik\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/09/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise.jpg 1600w, https://containous.ghost.io/content/images/2020/09/Unlock-the-potential-of-data-APIs-with-strong-authentication-and-Traefik-Enterprise.jpg 2400w\" sizes=\"(min-width: 720px) 720px\"></figure><p>When it comes to enterprise IT infrastructure, security is of paramount importance. Between the need for data protection and privacy, regulatory requirements, and the constant threat of bad actors on the network, there is little room for error when designing and maintaining enterprise systems.</p><p>Because of this, strong authentication is a critical component of any IT modernization project. One of the top goals for enterprises today is to open up the data held within legacy systems and expose it through APIs, microservices, and other modern means. And yet, while this data represents untapped business value, it’s essential to only expose it in controlled ways by using authentication to ensure each request’s validity.</p><p>Traefik can help. As a modern, cloud-native edge router, Traefik’s goal is to direct valid requests from the external network to applications and services, while minimizing the risk posed by malformed, malicious, or fraudulent requests. One way it can do this is by acting as an intermediary to ensure that transactions are authorized. What’s more, Traefik Enterprise (TraefikEE) bundles additional, exclusive features to provide enterprise-grade authentication – including, most recently, support for OpenID Connect.</p><h2 id=\"who-goes-there\">Who goes there?</h2><p>One of Traefik’s key concepts is its use of<a href=\"https://docs.traefik.io/v2.2/middlewares/overview/\"> <em>middlewares</em></a>, which are pluggable components that provide conditional controls over network traffic. These controls can take various forms, including enabling security features such as rate limiting, restricting requests by IP address, and authentication.</p><p>TraefikEE’s enterprise authentication middlewares work by referencing external <em>authentication sources</em>. For example, the LDAP middleware connects to an LDAP server to verify credentials. In this way, Traefik can act as a gatekeeper at the edge of the internal network by intercepting incoming requests and authenticating them against the external source before forwarding them to the appropriate applications.</p><p>This model can be particularly critical for legacy modernization projects because it allows authentication to occur externally to the application. One benefit of this is that it makes it possible to add modern authentication methods to legacy applications to satisfy the latest security requirements, without making any direct modifications to legacy code.</p><h2 id=\"enterprise-options\"><strong>Enterprise options</strong></h2><p>In addition to LDAP, Traefik Enterprise offers several other middlewares for enterprise authentication, and the collection continues to grow. Among the methods that TraefikEE supports are:</p><h3 id=\"hmac\"><strong>HMAC</strong></h3><p>Hash-based message authentication codes (<a href=\"https://docs.containo.us/middlewares/hmac/\">HMAC</a>) is a method of using cryptographic hash functions with a shared secret (also known as a symmetric key) to ensure the content delivered in an HTTP request is valid and genuine. Like digital signatures, HMAC can verify a message sender’s identity and that the message’s content is unaltered from the moment of the HMAC’s  creation. The technique can be used to secure file transfers, API calls, and other machine-to-machine interactions.</p><h3 id=\"jwt\"><strong>JWT</strong></h3><p>JSON web tokens (<a href=\"https://docs.containo.us/middlewares/jwt/\">JWT</a>) is another popular tool used to authenticate API calls and SSO applications. It’s a method of digitally signing information as a JSON object. The JWT includes a set of “claims,” which typically describe the things that an authenticated user is allowed to do. TraefikEE”s JWT middleware also includes support for JSON web key sets.</p><h3 id=\"openid-connect\"><strong>OpenID Connect</strong></h3><p>TraefikEE also includes<a href=\"https://docs.containo.us/middlewares/oidc/\"> support for OpenID Connect</a>, an authentication layer built on top of the OAuth 2.0 protocol. OpenID Connect allows an application to obtain user login information by exchanging cryptographic tokens with an identity provider, and is often used to implement federated single sign-on (SSO) between multiple applications.</p><!--kg-card-begin: markdown--><p>OpenID Connect has become a popular option for enterprises because it allows operators to self-host their on-premises identity provider or choose from a growing number of third-party options. <a href=\"https://www.okta.com/openid-connect/\" target=\"_blank\" rel=\"nofollow\">Okta</a>, for example, is a cloud-hosted enterprise identity platform that supports authentication via OpenID Connect. Several public options are also available, allowing users to authenticate based on their logins for services such as <a href=\"https://developers.google.com/identity/protocols/oauth2/openid-connect\" target=\"_blank\" rel=\"nofollow\">Google</a> and <a href=\"https://developer.paypal.com/docs/connect-with-paypal/\" target=\"_blank\" rel=\"nofollow\">Paypal</a>.If full authentication isn’t needed, TraefikEE also supplies a middleware for verifying the authorization of requests via the <a href=\"https://docs.containo.us/middlewares/oauth-intro/\">OAuth 2.0 token introspection</a> method.</p>\n<!--kg-card-end: markdown--><h2 id=\"authentication-the-easy-way\"><strong>Authentication the easy way</strong></h2><p>The best thing about implementing enterprise authentication using TraefikEE, however, is how easy it is to do. Enabling any of the authentication middleware mentioned here is generally as simple as adding a few lines to your Traefik configuration to supply the necessary credentials and point the middleware to your authentication source.</p><p>The authentication options available in TraefikEE today offer a powerful range of options for exposing enterprise applications and data securely, without requiring extensive and risky legacy code changes. You can expect other such features to be included over time, as we continue our commitment to ensure TraefikEE is a premier tool for enterprise application networking.To learn more about how Traefik and Traefik Enterprise can help you lock down enterprise data with secure authentication, watch our recent webinar, “<a href=\"https://info.containo.us/webinar-recording-enterprise-best-practices-to-expose-and-secure-microservices-apis\">Enterprise best practices to expose and secure microservices and APIs</a>”. We’ll discuss deploying OAuth and OpenID Connect with Okta to secure user logins, and we’ll also walk through enabling mutual TLS (mTLS) for secure machine-to-machine communications.</p>","url":"https://containous.ghost.io/blog/unlock-the-potential-of-data-apis-with-strong-authentication-and-traefik-enterprise/","canonical_url":null,"uuid":"b5745b78-cc68-4b41-ae52-2ec9bec07a62","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f4ee6313a6f7f00398c1198","reading_time":3}},{"node":{"id":"Ghost__Post__5f3b0d665751e70039ad7abe","title":"Unleash custom networking logic with Traefik Plugins","slug":"unleash-custom-networking-logic-with-traefik-plugins","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/0d60ce787ca95ce21c1cef9ebdcf1b51/47498/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg","srcSet":"/static/0d60ce787ca95ce21c1cef9ebdcf1b51/9dc27/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg 300w,\n/static/0d60ce787ca95ce21c1cef9ebdcf1b51/4fe8c/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg 600w,\n/static/0d60ce787ca95ce21c1cef9ebdcf1b51/47498/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg 1200w,\n/static/0d60ce787ca95ce21c1cef9ebdcf1b51/52258/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg 1800w,\n/static/0d60ce787ca95ce21c1cef9ebdcf1b51/a41d1/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"With Traefik plugins, you can now easily build, use, and share your own custom extensions to Traefik’s functionality, with minimal development overhead.","custom_excerpt":"With Traefik plugins, you can now easily build, use, and share your own custom extensions to Traefik’s functionality, with minimal development overhead.","visibility":"public","created_at_pretty":"17 August, 2020","published_at_pretty":"August 19, 2020","updated_at_pretty":"10 September, 2020","created_at":"2020-08-17T23:06:14.000+00:00","published_at":"2020-08-19T15:32:38.000+00:00","updated_at":"2020-09-10T14:19:52.000+00:00","meta_title":"Unleash custom networking logic with Traefik Plugins","meta_description":"With Traefik plugins, you can now easily build, use, and share your own custom extensions to Traefik’s functionality, with minimal development overhead.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Twitter.png","twitter_title":null,"authors":[{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"#pilot-related-resource","slug":"hash-pilot-related-resource","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"internal"}],"plaintext":"Traefik is built to handle the application networking functions that are\nessential to modern IT. In today’s cloud-native environments, containerized\napplications and microservices must be in constant communication across\nnetworks. Functions like load balancing, inbound traffic management, and network\nsecurity are more critical than ever. Fortunately, Traefik addresses these needs\nelegantly and reliably.\n\nAlmost inevitably, however, situations arise that can't easily be handled using\nstandard features and methods. Perhaps an unusual application design requires\nunorthodox routing, or abnormal traffic conditions call for a novel, short-term\nfix. Ideally, you should be able to deploy custom logic to handle such niche\ncases.\n\nThat’s precisely the goal of Traefik plugins, which were introduced in the\nrelease-candidate builds of Traefik 2.3. Traefik has always been modular and\nextensible, and its feature set has grown with the addition of each new provider\n[https://docs.traefik.io/providers/overview/] and middleware\n[https://docs.traefik.io/middlewares/overview/]. With the addition of plugins,\nhowever, you can now easily build, use, and share their own custom extensions to\nTraefik’s functionality, with minimal development overhead.\n\nExtensibility for everyone\nApplication plugins themselves are nothing new. Monolithic desktop apps from the\nlikes of Adobe and Microsoft were among the first to introduce extension\nmechanisms, and web browsers weren’t far behind. But the earliest plugins\nshipped as prebuilt binaries, like the applications themselves. That meant they\nwere often quirky to use, difficult to develop, and incompatible across\nplatforms or even application versions.\n\nAs web browsers evolved into the most-used software in the world, however, they\nalso blazed the path for how plugins should be built. As a result of work by\nGoogle, Mozilla, and others, creating extensions for today’s web browsers is\nboth simpler and more open than in the past, thanks to key characteristics of\ntheir second-generation plugin model:\n\n * Modern browser extensions are written in JavaScript, a language that’s\n   familiar to browser users and anyone involved with web development.\n * They are simple to develop and test, requiring no elaborate toolchains or\n   build processes.\n * They are shared and distributed securely via a centralized, online\n   marketplace.\n\nTraefik the way you want it\nTraefik’s new plugins take cues from modern browser extensions, with the aim of\nmaking it as easy to extend Traefik as it is to extend your browser. While\ntraditional Traefik middlewares resemble the older style of binary plugins,\nTraefik’s new plugin mechanism follows the pattern set by the likes of Chrome\nand Firefox:\n\n * Traefik plugins are written in Go [https://golang.org/], the language used to\n   develop Docker, Kubernetes, the Traefik family of projects, and other\n   cloud-native infrastructure software.\n * Traefik’s embedded Yaegi interpreter [/blog/announcing-yaegi-263a1e2d070a/] \n   makes plugin development and testing easy. No code needs to be compiled or\n   linked, making this the first true interpreted Go language plugin\n   mechanism.Plugins are distributed and shared online via an open marketplace\n   that integrates with Traefik Pilot\n   [/blog/introducing-traefik-pilot-a-first-look-at-our-new-saas-control-platform-for-traefik/]\n   , the new SaaS control plane for Traefik.\n\nNaturally, in designing an extension mechanism for Traefik, security is a top\nconcern. Hosting plugins in the centralized Traefik Pilot hub makes it possible\nto block plugins containing malicious or malformed code for all Traefik users,\nprotecting the entire community. Only open source plugins are allowed, so that\ntheir code can be reviewed and inspected for potential defects. And Traefik\noperators have ultimate control over which plugins are installed and allowed to\nrun in their Traefik instances, as plugins can only be loaded and activated from\nTraefik’s static configuration at startup.\n\nPlugins utilize the Go module downloading and verification system to protect\nusers from unauthorized changes to code. We'll share more in-depth details on\nthis and the security features of the runtime interpreter in a later post.\n\nPlugging in\nBecause Traefik’s plugin mechanism follows industry best practices, working with\nTraefik plugins is almost as easy as working with browser extensions. To get up\nand running with your first plugin involves four key steps:\n\n1. Register your Traefik instances\nPlugins are only available to Traefik instances that are registered with the\nTraefik Pilot SaaS service. Registering is as easy aa logging into your Pilot\naccount [https://pilot.traefik.io/] and clicking a button to request a token.\nOnce you add that token to your Traefik instance’s static configuration, you’re\nready to begin working with plugins from the catalog\n[https://pilot.traefik.io/plugins] or to create your own. You’ll also gain the\nbenefits of health monitoring and security vulnerability updates for your\nregistered instances.\n\n2. Develop your plugin\nTraefik’s embedded Yaegi interpreter can handle virtually any Go code you throw\nat it. A good way to start is to read the documentation\n[https://github.com/containous/plugindemo] and review the source code of the\nDemo plugin that’s provided with Traefik Pilot. You can gain further inspiration\nby browsing the source code of contributed plugins in their own repositories\n[https://github.com/topics/traefik-plugin].\n\n3. Host your plugin on GitHub\nMost developers will already be familiar with GitHub as a way to share code with\nthe community. Every 30 minutes, Traefik Pilot polls GitHub, looking for\nrepositories hosting plugins to add to the public catalog. For your plugin to be\nrecognized, you need only set the topic `traefik-plugin` on your repo and\ninclude a manifest, as described in the developer documentation\n[https://github.com/containous/plugindemo/blob/master/readme.md].\n\n4. Load and activate your plugin\nOnce your plugin is available in the Traefik Pilot catalog, it’s ready for use\nin your Traefik instances. As mentioned earlier, for security reasons, plugin\nactivation code must be included in an instance’s static configuration. No\nplugins can be installed or modified while Traefik is running. Some plugins may\nalso need to have options set in the dynamic configuration. Clicking the\n“Install Plugin” button from the plugin’s page in the Traefik Pilot catalog\nsupplies cut-and-paste templates of the code you’ll need for both the static and\ndynamic configurations.\n\nMore to come\nThis first iteration of the Traefik plugin interface gives you what you need to\nstart building and deploying plugins that enable custom routing behaviors, like\nTraefik middlewares. You can expect forthcoming releases to make plugins even\nmore powerful. For example, future plugins will be able to act as providers,\nmaking it possible to use these techniques to extend Traefik’s auto-discovery\ncapabilities to include new orchestrators, cloud providers, key-value stores,\nand other infrastructure components.\n\nFor now, we hope you’ll take this opportunity to explore how plugins expand the\npossibilities of Traefik. Join the Traefik community forums\n[https://community.containo.us/c/traefik/5] to continue the discussion and help\nmake Traefik the most powerful, versatile, and extensible tool for your\napplication networking needs.","html":"<figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog.jpg\" class=\"kg-image\" alt=\"Unleash custom networking logic with Traefik Plugins\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog.jpg 1600w, https://containous.ghost.io/content/images/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog.jpg 2400w\" sizes=\"(min-width: 1200px) 1200px\"></figure><p>Traefik is built to handle the application networking functions that are essential to modern IT. In today’s cloud-native environments, containerized applications and microservices must be in constant communication across networks. Functions like load balancing, inbound traffic management, and network security are more critical than ever. Fortunately, Traefik addresses these needs elegantly and reliably.</p><p>Almost inevitably, however, situations arise that can't easily be handled using standard features and methods. Perhaps an unusual application design requires unorthodox routing, or abnormal traffic conditions call for a novel, short-term fix. Ideally, you should be able to deploy custom logic to handle such niche cases.</p><p>That’s precisely the goal of Traefik plugins, which were introduced in the release-candidate builds of Traefik 2.3. Traefik has always been modular and extensible, and its feature set has grown with the addition of each new <a href=\"https://docs.traefik.io/providers/overview/\">provider</a> and <a href=\"https://docs.traefik.io/middlewares/overview/\">middleware</a>. With the addition of plugins, however, you can now easily build, use, and share their own custom extensions to Traefik’s functionality, with minimal development overhead.</p><h2 id=\"extensibility-for-everyone\"><strong>Extensibility for everyone</strong></h2><p>Application plugins themselves are nothing new. Monolithic desktop apps from the likes of Adobe and Microsoft were among the first to introduce extension mechanisms, and web browsers weren’t far behind. But the earliest plugins shipped as prebuilt binaries, like the applications themselves. That meant they were often quirky to use, difficult to develop, and incompatible across platforms or even application versions.</p><p>As web browsers evolved into the most-used software in the world, however, they also blazed the path for how plugins should be built. As a result of work by Google, Mozilla, and others, creating extensions for today’s web browsers is both simpler and more open than in the past, thanks to key characteristics of their second-generation plugin model:</p><ul><li>Modern browser extensions are written in JavaScript, a language that’s familiar to browser users and anyone involved with web development.</li><li>They are simple to develop and test, requiring no elaborate toolchains or build processes.</li><li>They are shared and distributed securely via a centralized, online marketplace.</li></ul><h2 id=\"traefik-the-way-you-want-it\"><strong>Traefik the way you want it</strong></h2><p>Traefik’s new plugins take cues from modern browser extensions, with the aim of making it as easy to extend Traefik as it is to extend your browser. While traditional Traefik middlewares resemble the older style of binary plugins, Traefik’s new plugin mechanism follows the pattern set by the likes of Chrome and Firefox:</p><ul><li>Traefik plugins are written in <a href=\"https://golang.org/\">Go</a>, the language used to develop Docker, Kubernetes, the Traefik family of projects, and other cloud-native infrastructure software.</li><li>Traefik’s embedded <a href=\"https://containous.ghost.io/blog/announcing-yaegi-263a1e2d070a/\">Yaegi interpreter</a> makes plugin development and testing easy. No code needs to be compiled or linked, making this the first true interpreted Go language plugin mechanism.Plugins are distributed and shared online via an open marketplace that integrates with <a href=\"https://containous.ghost.io/blog/introducing-traefik-pilot-a-first-look-at-our-new-saas-control-platform-for-traefik/\">Traefik Pilot</a>, the new SaaS control plane for Traefik.</li></ul><figure class=\"kg-card kg-image-card\"><img src=\"https://lh4.googleusercontent.com/By5DYG5wjOdErYmc54JCuNGPw3M8ICAULWs-1xD9BlCrzm5CpfS6ob2Kx71PKY5xBw8slQQzvbNuxbZqD8SDJiAQChSQYxr0YCoxqdO6MrxhK62exH5MPHpITuxLbiZTE96KA2U\" class=\"kg-image\" alt=\"Traefik Pilot Plugins page\"></figure><p>Naturally, in designing an extension mechanism for Traefik, security is a top concern. Hosting plugins in the centralized Traefik Pilot hub makes it possible to block plugins containing malicious or malformed code for all Traefik users, protecting the entire community. Only open source plugins are allowed, so that their code can be reviewed and inspected for potential defects. And Traefik operators have ultimate control over which plugins are installed and allowed to run in their Traefik instances, as plugins can only be loaded and activated from Traefik’s static configuration at startup.</p><p>Plugins utilize the Go module downloading and verification system to protect users from unauthorized changes to code. We'll share more in-depth details on this and the security features of the runtime interpreter in a later post.</p><h2 id=\"plugging-in\"><strong>Plugging in</strong></h2><p>Because Traefik’s plugin mechanism follows industry best practices, working with Traefik plugins is almost as easy as working with browser extensions. To get up and running with your first plugin involves four key steps:</p><h3 id=\"1-register-your-traefik-instances\"><strong>1. Register your Traefik instances</strong></h3><p>Plugins are only available to Traefik instances that are registered with the Traefik Pilot SaaS service. Registering is as easy aa <a href=\"https://pilot.traefik.io/\">logging into your Pilot account</a> and clicking a button to request a token. Once you add that token to your Traefik instance’s static configuration, you’re ready to begin working with <a href=\"https://pilot.traefik.io/plugins\">plugins from the catalog</a> or to create your own. You’ll also gain the benefits of health monitoring and security vulnerability updates for your registered instances.</p><h3 id=\"2-develop-your-plugin\"><strong>2. Develop your plugin</strong></h3><p>Traefik’s embedded Yaegi interpreter can handle virtually any Go code you throw at it. A good way to start is to read the <a href=\"https://github.com/containous/plugindemo\">documentation</a> and review the source code of the Demo plugin that’s provided with Traefik Pilot. You can gain further inspiration by browsing the source code of contributed plugins in <a href=\"https://github.com/topics/traefik-plugin\">their own repositories</a>.</p><h3 id=\"3-host-your-plugin-on-github\"><strong>3. Host your plugin on GitHub</strong></h3><p>Most developers will already be familiar with GitHub as a way to share code with the community. Every 30 minutes, Traefik Pilot polls GitHub, looking for repositories hosting plugins to add to the public catalog. For your plugin to be recognized, you need only set the topic `traefik-plugin` on your repo and include a manifest, as described in the <a href=\"https://github.com/containous/plugindemo/blob/master/readme.md\">developer documentation</a>.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh6.googleusercontent.com/g8H6MFQddfIOzxLGl7xfgtTztNPaS-iE6cAE3tR6sJWnRHbCUUny1u_mGf1skj3aZCj3JSdD_F5RJ23Q7WlxlRyBy1neUSg9gHV63UaGP7KctsJrMkt2acXy3Z5B9cOFJfmitwg\" class=\"kg-image\" alt=\"How to install a plugin in Traefik\"></figure><h3 id=\"4-load-and-activate-your-plugin\"><strong>4. Load and activate your plugin</strong></h3><p>Once your plugin is available in the Traefik Pilot catalog, it’s ready for use in your Traefik instances. As mentioned earlier, for security reasons, plugin activation code must be included in an instance’s static configuration. No plugins can be installed or modified while Traefik is running. Some plugins may also need to have options set in the dynamic configuration. Clicking the “Install Plugin” button from the plugin’s page in the Traefik Pilot catalog supplies cut-and-paste templates of the code you’ll need for both the static and dynamic configurations.</p><h2 id=\"more-to-come\"><strong>More to come</strong></h2><p>This first iteration of the Traefik plugin interface gives you what you need to start building and deploying plugins that enable custom routing behaviors, like Traefik middlewares. You can expect forthcoming releases to make plugins even more powerful. For example, future plugins will be able to act as <em>providers</em>, making it possible to use these techniques to extend Traefik’s auto-discovery capabilities to include new orchestrators, cloud providers, key-value stores, and other infrastructure components.</p><p>For now, we hope you’ll take this opportunity to explore how plugins expand the possibilities of Traefik. Join the <a href=\"https://community.containo.us/c/traefik/5\">Traefik community forums</a> to continue the discussion and help make Traefik the most powerful, versatile, and extensible tool for your application networking needs.</p>","url":"https://containous.ghost.io/blog/unleash-custom-networking-logic-with-traefik-plugins/","canonical_url":null,"uuid":"6da65ef9-cc77-4eef-8199-620264e72c38","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f3b0d665751e70039ad7abe","reading_time":5}},{"node":{"id":"Ghost__Post__5f161889d90a6e003946cbaa","title":"Simplified security for Kubernetes with Traefik and Let’s Encrypt","slug":"simplified-security-for-kubernetes-with-traefik-and-lets-encrypt","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/07/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/b529a4995103e2123aa83cf7cf178170/47498/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt.jpg","srcSet":"/static/b529a4995103e2123aa83cf7cf178170/9dc27/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt.jpg 300w,\n/static/b529a4995103e2123aa83cf7cf178170/4fe8c/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt.jpg 600w,\n/static/b529a4995103e2123aa83cf7cf178170/47498/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt.jpg 1200w,\n/static/b529a4995103e2123aa83cf7cf178170/52258/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt.jpg 1800w,\n/static/b529a4995103e2123aa83cf7cf178170/a41d1/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Encryption for network security is a non-trivial matter, particularly in complex environments. Traefik and Let’s Encrypt can make the process of securing Kubernetes clusters simpler, speedier, and more resilient.","custom_excerpt":"Encryption for network security is a non-trivial matter, particularly in complex environments. Traefik and Let’s Encrypt can make the process of securing Kubernetes clusters simpler, speedier, and more resilient.","visibility":"public","created_at_pretty":"20 July, 2020","published_at_pretty":"July 21, 2020","updated_at_pretty":"11 August, 2020","created_at":"2020-07-20T22:19:53.000+00:00","published_at":"2020-07-21T13:58:29.000+00:00","updated_at":"2020-08-11T15:37:49.000+00:00","meta_title":"Simplified security for Kubernetes with Traefik & Let’s Encrypt","meta_description":"Traefik and Let’s Encrypt can make the process of securing Kubernetes clusters simpler, speedier, and more resilient.","og_description":null,"og_image":null,"og_title":null,"twitter_description":"Traefik and Let’s Encrypt can make the process of securing Kubernetes clusters simpler, speedier, and more resilient.","twitter_image":"https://containous.ghost.io/content/images/2020/07/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt---Twitter.png","twitter_title":"Simplified security for Kubernetes with Traefik and Let’s Encrypt","authors":[{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Kubernetes","slug":"kubernetes","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Network encryption – also known as transport layer security (TLS) – is a must\nfor today’s online apps and services. Beyond the obvious need to prevent data\nbreaches and other malicious attacks, there are also regulatory concerns to\nconsider. Network encryption can be an important step in proving GDPR\n[https://gdpr.eu/] compliance, passing a financial audit, or complying with\ndomain-specific regulations such as HIPAA\n[https://www.hhs.gov/hipaa/for-professionals/security/laws-regulations/index.html] \nor PCI DSS [https://www.pcisecuritystandards.org/], to name just a few examples.\n\nUnfortunately, getting encryption right is a non-trivial matter, and throwing\ncontainers and Kubernetes into the mix only compounds the issue. The distributed\nnature of Kubernetes environments and the often-brief lifecycles of\ncontainerized workloads both multiply the challenges of network security.\n\nStill, there’s hope. Newer tools and services – including Traefik and Let’s\nEncrypt [https://letsencrypt.org/] – can make the process of securing Kubernetes\nclusters simpler, speedier, and more resilient.\n\nLowering barriers to encryption\nHistorically, network encryption has been both laborious and costly. By some\nestimates, managing a typical certificate and private key can take four hours\nper year. That may not sound like much, but when multiplied by the requirements\nof a large infrastructure, this essential maintenance can quickly become\nburdensome, particularly given the current push by Apple and other vendors to\nlimit the validity of certificates to no more than 398 days\n[https://support.apple.com/en-us/HT211025].\n\nThe alternative, however, is even worse. Expired or invalid certificates can\nlead to outages and reduced service, resulting in untold losses in productivity\nand revenue [https://www.google.com/search?q=post-mortem+ssl+cert+expired].\n\nLet’s Encrypt was founded to address these issues. A project of the Internet\nSecurity Research Group [https://www.abetterinternet.org/], Let’s Encrypt is a\nfree, nonprofit, automated, and open certificate authority (CA), created with\nthe goal of promoting universal internet security and data privacy through\nencryption. Its sponsors include some of the largest software vendors and online\nservices in the industry.\n\nLet’s Encrypt will issue an unlimited number of domain-validated\n[https://casecurity.org/2013/08/07/what-are-the-different-types-of-ssl-certificates/] \ncertificates with 90-day validity to the owner of any domain name, free of\ncharge. As of this writing, the project has issued more than 1 billion\ncertificates and it counts some 200 million websites as its clients.\n\nAutomation: Let’s Encrypt’s secret sauce\nCost reduction is of course welcome, but the most important benefit of Let’s\nEncrypt is labor reduction via automation. For Kubernetes operators, automation\nis a way of life. Let’s Encrypt brings that spirit to the world of network\nsecurity.Central to how Let’s Encrypt works is the ACME (Automated Certificate\nManagement Environment) protocol, which was made an IETF standard\n[https://tools.ietf.org/html/rfc8555] in 2019. It defines a method whereby a\ncomputing service and a CA (typically Let’s Encrypt itself) can complete the\nprocess of requesting, issuing, and verifying certificates without manual\nintervention.\n\n7 Steps to Automated Domain Validation with Let’s EncryptThe ACME domain validation process [https://letsencrypt.org/how-it-works/] \nrelies on public key cryptography to establish trust. ACME client software\n[https://letsencrypt.org/docs/client-options/], also known as a certificate\nmanagement agent, generates a public-private key pair and presents it to a\nserver on the CA’s end, along with a domain name. The server then asks the\nclient to prove that it controls the domain in question by satisfying one or\nmore challenges [https://letsencrypt.org/docs/challenge-types/]. If the client\ncompletes the challenges and signs some temporary data (a “nonce”) with its\nprivate key, the server gives the client’s key pair its stamp of approval.\n\nOnce the client has an authorized key pair, it can use it to request, renew, or\nrevoke certificates from the CA, as long as the keys remain valid. Automating\nthese tasks can eliminate as much as 95% of the labor involved in managing TLS\nencryption.\n\nACME and Traefik\nSo how to get this level of automated certificate management for a Kubernetes\ncluster? One of the easier ways is to deploy the open source Traefik [/traefik/] \nedge router as a Kubernetes Ingress controller\n[https://docs.traefik.io/providers/kubernetes-ingress/]. Traefik includes a \nbuilt-in ACME client [https://docs.traefik.io/https/acme/], so no additional\nsoftware is needed to begin working with Let’s Encrypt.\n\nWhen used as an Ingress controller, Traefik ferries requests from the external\nnetwork to services running within the Kubernetes cluster, using routes defined\nby Kubernetes Ingress resources\n[https://kubernetes.io/docs/concepts/services-networking/ingress/]. Traefik’s\nACME client can automatically request and provision certificates for any domain\nassigned to the cluster, making it possible to add TLS-encrypted routes.\n\nTraefik aims to reduce setup times by automatically discovering the right\nconfiguration for a given infrastructure, so putting the pieces in place is\nstraightforward. Instructions on how to install Traefik into a Kubernetes\ncluster and enable Let’s Encrypt are available in the official documentation\n[https://docs.traefik.io/user-guides/crd-acme/].\n\nA secure starting point\nTraefik and Let’s Encrypt together offer to set up basic TLS routing for\nKubernetes. As mentioned earlier, however, encryption for network security is a\nnon-trivial matter, particularly in more complex environments. Just for\nstarters, you’ll need genuine domain names that point to servers that are\naccessible by the public internet for Let’s Encrypt’s domain-validation\nchallenge process to work.\n\nFurther challenges arise when you want to run more than one instance of Traefik,\nto ensure high availability. It’s currently not possible to run more than one\ninstance of the community-maintained version of Traefik on a cluster with Let’s\nEncrypt enabled, because there’s no guarantee that any request will be handled\nby the correct instance of Traefik. One way to address this is to use the\ncommercial Traefik Enterprise Edition (TraefikEE) [/traefikee/] product, which\noffers distributed Let’s Encrypt as a supported feature.\n\nOrganizations with more specific needs – such as interfacing with enterprise\nvault providers – and who aren’t afraid to take a hands-on, DIY approach may\nneed to install additional, dedicated certificate management software. One such\noption that’s proven popular is cert-manager [https://cert-manager.io/docs/],\nwhich can work in tandem with both Traefik and TraefikEE.\n\nThe key point, however, is that TLS encryption should be everywhere, and today\nit can be. The ACME protocol, Let’s Encrypt, and self-configuring software like\nTraefik can automate away much of the hard work that was once involved with\ncertificate management and secure request routing. In turn, that frees you to\nconcentrate on what really matters, which is how to deliver the most value with\nyour services, rather than how to secure them.\n\nYou can try out the features of TraefikEE, including distributed Let’s Encrypt,\nby starting a 30-day free trial\n[https://info.containo.us/get-traefik-enterprise-edition-free-for-30-days].","html":"<figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2020/07/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt-1.jpg\" class=\"kg-image\" alt=\"Simplified security for Kubernetes with Traefik and Let's Encrypt\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/07/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt-1.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/07/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt-1.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/07/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt-1.jpg 1600w, https://containous.ghost.io/content/images/2020/07/Simplified-security-for-Kubernetes-with-Traefik-and-Lets-Encrypt-1.jpg 2400w\" sizes=\"(min-width: 1200px) 1200px\"></figure><!--kg-card-begin: markdown--><p>Network encryption – also known as transport layer security (TLS) – is a must for today’s online apps and services. Beyond the obvious need to prevent data breaches and other malicious attacks, there are also regulatory concerns to consider. Network encryption can be an important step in proving <a href=\"https://gdpr.eu/\" target=\"_blank\" rel=\"nofollow\">GDPR</a> compliance, passing a financial audit, or complying with domain-specific regulations such as <a href=\"https://www.hhs.gov/hipaa/for-professionals/security/laws-regulations/index.html\" target=\"_blank\" rel=\"nofollow\">HIPAA</a> or <a href=\"https://www.pcisecuritystandards.org/\" target=\"_blank\" rel=\"nofollow\">PCI DSS</a>, to name just a few examples.</p>\n<!--kg-card-end: markdown--><p>Unfortunately, getting encryption right is a non-trivial matter, and throwing containers and Kubernetes into the mix only compounds the issue. The distributed nature of Kubernetes environments and the often-brief lifecycles of containerized workloads both multiply the challenges of network security.</p><!--kg-card-begin: markdown--><p>Still, there’s hope. Newer tools and services – including Traefik and <a href=\"https://letsencrypt.org/\" target=\"_blank\" rel=\"nofollow\">Let’s Encrypt</a> – can make the process of securing Kubernetes clusters simpler, speedier, and more resilient.</p>\n<!--kg-card-end: markdown--><h2 id=\"lowering-barriers-to-encryption\"><strong>Lowering barriers to encryption</strong></h2><!--kg-card-begin: markdown--><p>Historically, network encryption has been both laborious and costly. By some estimates, managing a typical certificate and private key can take four hours per year. That may not sound like much, but when multiplied by the requirements of a large infrastructure, this essential maintenance can quickly become burdensome, particularly given the current push by Apple and other vendors to limit the validity of certificates to <a href=\"https://support.apple.com/en-us/HT211025\" target=\"_blank\" rel=\"nofollow\">no more than 398 days</a>.</p>\n<p>The alternative, however, is even worse. Expired or invalid certificates can lead to outages and reduced service, resulting in untold <a href=\"https://www.google.com/search?q=post-mortem+ssl+cert+expired\" target=\"_blank\" rel=\"nofollow\">losses in productivity and revenue</a>.</p>\n<p>Let’s Encrypt was founded to address these issues. A project of the <a href=\"https://www.abetterinternet.org/\" target=\"_blank\" rel=\"nofollow\">Internet Security Research Group</a>, Let’s Encrypt is a free, nonprofit, automated, and open certificate authority (CA), created with the goal of promoting universal internet security and data privacy through encryption. Its sponsors include some of the largest software vendors and online services in the industry.</p>\n<p>Let’s Encrypt will issue an unlimited number of <a href=\"https://casecurity.org/2013/08/07/what-are-the-different-types-of-ssl-certificates/\" target=\"_blank\" rel=\"nofollow\">domain-validated</a> certificates with 90-day validity to the owner of any domain name, free of charge. As of this writing, the project has issued more than 1 billion certificates and it counts some 200 million websites as its clients.</p>\n<!--kg-card-end: markdown--><h2 id=\"automation-let-s-encrypt-s-secret-sauce\"><strong>Automation: Let’s Encrypt’s secret sauce</strong></h2><!--kg-card-begin: markdown--><p>Cost reduction is of course welcome, but the most important benefit of Let’s Encrypt is labor reduction via automation. For Kubernetes operators, automation is a way of life. Let’s Encrypt brings that spirit to the world of network security.Central to how Let’s Encrypt works is the ACME (Automated Certificate Management Environment) protocol, which was made an <a href=\"https://tools.ietf.org/html/rfc8555\" target=\"_blank\" rel=\"nofollow\">IETF standard</a> in 2019. It defines a method whereby a computing service and a CA (typically Let’s Encrypt itself) can complete the process of requesting, issuing, and verifying certificates without manual intervention.</p>\n<!--kg-card-end: markdown--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://containous.ghost.io/content/images/2020/07/7-Steps-to-Automated-Domain-Validation-with-Lets-Encrypt.png\" class=\"kg-image\" alt=\"7 Steps to Automated Domain Validation with Let’s Encrypt\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/07/7-Steps-to-Automated-Domain-Validation-with-Lets-Encrypt.png 600w, https://containous.ghost.io/content/images/size/w1000/2020/07/7-Steps-to-Automated-Domain-Validation-with-Lets-Encrypt.png 1000w, https://containous.ghost.io/content/images/2020/07/7-Steps-to-Automated-Domain-Validation-with-Lets-Encrypt.png 1050w\" sizes=\"(min-width: 720px) 720px\"><figcaption><strong>7 Steps to Automated Domain Validation with Let’s Encrypt</strong></figcaption></figure><!--kg-card-begin: markdown--><p>The ACME <a href=\"https://letsencrypt.org/how-it-works/\" target=\"_blank\" rel=\"nofollow\">domain validation process</a> relies on public key cryptography to establish trust. <a href=\"https://letsencrypt.org/docs/client-options/\" target=\"_blank\" rel=\"nofollow\">ACME client software</a>, also known as a certificate management agent, generates a public-private key pair and presents it to a server on the CA’s end, along with a domain name. The server then asks the client to prove that it controls the domain in question by satisfying <a href=\"https://letsencrypt.org/docs/challenge-types/\" target=\"_blank\" rel=\"nofollow\">one or more challenges</a>. If the client completes the challenges and signs some temporary data (a “nonce”) with its private key, the server gives the client’s key pair its stamp of approval.</p>\n<!--kg-card-end: markdown--><p>Once the client has an authorized key pair, it can use it to request, renew, or revoke certificates from the CA, as long as the keys remain valid. Automating these tasks can eliminate as much as 95% of the labor involved in managing TLS encryption.</p><h2 id=\"acme-and-traefik\"><strong>ACME and Traefik</strong></h2><p>So how to get this level of automated certificate management for a Kubernetes cluster? One of the easier ways is to deploy the open source<a href=\"https://containous.ghost.io/traefik/\"> Traefik</a> edge router as a<a href=\"https://docs.traefik.io/providers/kubernetes-ingress/\"> Kubernetes Ingress controller</a>. Traefik includes a<a href=\"https://docs.traefik.io/https/acme/\"> built-in ACME client</a>, so no additional software is needed to begin working with Let’s Encrypt.</p><p>When used as an Ingress controller, Traefik ferries requests from the external network to services running within the Kubernetes cluster, using routes defined by Kubernetes<a href=\"https://kubernetes.io/docs/concepts/services-networking/ingress/\"> Ingress resources</a>. Traefik’s ACME client can automatically request and provision certificates for any domain assigned to the cluster, making it possible to add TLS-encrypted routes.</p><p>Traefik aims to reduce setup times by automatically discovering the right configuration for a given infrastructure, so putting the pieces in place is straightforward. Instructions on how to install Traefik into a Kubernetes cluster and enable Let’s Encrypt are available in the<a href=\"https://docs.traefik.io/user-guides/crd-acme/\"> official documentation</a>.</p><h2 id=\"a-secure-starting-point\"><strong>A secure starting point</strong></h2><p>Traefik and Let’s Encrypt together offer to set up basic TLS routing for Kubernetes. As mentioned earlier, however, encryption for network security is a non-trivial matter, particularly in more complex environments. Just for starters, you’ll need genuine domain names that point to servers that are accessible by the public internet for Let’s Encrypt’s domain-validation challenge process to work.</p><p>Further challenges arise when you want to run more than one instance of Traefik, to ensure high availability. It’s currently not possible to run more than one instance of the community-maintained version of Traefik on a cluster with Let’s Encrypt enabled, because there’s no guarantee that any request will be handled by the correct instance of Traefik. One way to address this is to use the commercial<a href=\"https://containous.ghost.io/traefikee/\"> Traefik Enterprise Edition (TraefikEE)</a> product, which offers distributed Let’s Encrypt as a supported feature.</p><!--kg-card-begin: markdown--><p>Organizations with more specific needs – such as interfacing with enterprise vault providers – and who aren’t afraid to take a hands-on, DIY approach may need to install additional, dedicated certificate management software. One such option that’s proven popular is <a href=\"https://cert-manager.io/docs/\" target=\"_blank\" rel=\"nofollow\">cert-manager</a>, which can work in tandem with both Traefik and TraefikEE.</p>\n<!--kg-card-end: markdown--><p>The key point, however, is that TLS encryption should be everywhere, and today it can be. The ACME protocol, Let’s Encrypt, and self-configuring software like Traefik can automate away much of the hard work that was once involved with certificate management and secure request routing. In turn, that frees you to concentrate on what really matters, which is how to deliver the most value with your services, rather than how to secure them.</p><p>You can try out the features of TraefikEE, including distributed Let’s Encrypt, by starting a <a href=\"https://info.containo.us/get-traefik-enterprise-edition-free-for-30-days\">30-day free trial</a>.</p>","url":"https://containous.ghost.io/blog/simplified-security-for-kubernetes-with-traefik-and-lets-encrypt/","canonical_url":null,"uuid":"45235829-73db-4937-a45e-83147ba3995b","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f161889d90a6e003946cbaa","reading_time":4}},{"node":{"id":"Ghost__Post__5f0dd2aeda8b5600395a511a","title":"Traefik and Docker Swarm: A Dynamic Duo for Cloud-Native Container Networking","slug":"traefik-and-docker-swarm-a-dynamic-duo-for-cloud-native-container-networking","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/07/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/18df5978b96c83450e231d3c075238b8/47498/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking-1.jpg","srcSet":"/static/18df5978b96c83450e231d3c075238b8/9dc27/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking-1.jpg 300w,\n/static/18df5978b96c83450e231d3c075238b8/4fe8c/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking-1.jpg 600w,\n/static/18df5978b96c83450e231d3c075238b8/47498/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking-1.jpg 1200w,\n/static/18df5978b96c83450e231d3c075238b8/52258/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking-1.jpg 1800w,\n/static/18df5978b96c83450e231d3c075238b8/a41d1/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"External reverse proxy and load balancing software like Traefik offer networking features and control that Docker Swarm cannot provide on its own.","custom_excerpt":"External reverse proxy and load balancing software like Traefik offer networking features and control that Docker Swarm cannot provide on its own.","visibility":"public","created_at_pretty":"14 July, 2020","published_at_pretty":"July 15, 2020","updated_at_pretty":"28 July, 2020","created_at":"2020-07-14T15:43:42.000+00:00","published_at":"2020-07-15T05:37:39.000+00:00","updated_at":"2020-07-28T14:41:45.000+00:00","meta_title":"Traefik and Docker Swarm: A Dynamic Duo for Container Networking","meta_description":"External reverse proxy and load balancing software like Traefik offer networking features and control that Docker Swarm cannot provide on its own.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/07/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking---Twitter@2x.png","twitter_title":null,"authors":[{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Docker","slug":"docker","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Docker didn’t invent application containers, but it put them on the map. Docker\nsoftware helped containers become the most important innovation in application\ndelivery since virtual machines. And with the introduction of Swarm mode, Docker\nadded container orchestration to its toolbox, making it possible to build\ndistributed applications from large collections of containerized microservices.\n\nDocker Swarm has a lot going for it. For starters, it’s built into the Docker\nEngine, so it’s available to anyone who can launch Docker containers. It’s also\neasy to get up and running in a variety of cloud and on-premises environments,\nunlike more complex tools such as Kubernetes and Mesos.\n\nUnfortunately, Swarm alone will only get you partway to production. Its “routing\nmesh” networking model doesn’t supply the availability, security, observability,\nand control that you’ll need when exposing your applications to the open\ninternet, particularly as they scale to more complex usage scenarios.\n\nLoad Balancing and Reverse Proxies\nThe smart way to gain these capabilities is to pair Docker Swarm with external\nreverse proxy and load balancing software. These networking tools act as\nconcierge for requests coming from the external network. They not only route\nrequests to where they need to go (also known as ingress routing), but they also\nhelp ensure that backend applications and services don’t become overwhelmed by\ntraffic spikes.\n\nAt its most basic, this type of routing software handles HTTP requests, which\nsit at Layer 7 of the OSI networking model, known as the application layer. More\nadvanced load balancers extend their capabilities to Layer 4, the transport\nlayer, by also handling TCP requests.\n\nTraefik [/traefik/] is one such offering that’s particularly well-suited for use\nwith Docker Swarm. Like Swarm mode itself, Traefik aims to eliminate much of the\ndrudgery of maintaining containerized environments by automating routine\nconfiguration tasks.Traefik automatically discovers\n[https://docs.traefik.io/providers/docker/] information about the network and\nservices available in a Docker Swarm cluster, dynamically updating its\nconfiguration as the environment changes. This sets it apart from Interlock, the\ningress routing component of the commercial Docker Enterprise product, which can\nbecome unreliable when its configuration is updated. At the same time, Traefik\noffers comprehensive observability into the functioning of the network, so\noperations teams are never left in the dark.\n\nAdvanced Routing\nThe ability to update network routes efficiently is particularly important for\nmicroservices deployments. By their nature, microservices tend to be stateless\nand short-lived. New versions of services are typically deployed frequently and\ninstances are scaled dynamically to meet demand. Because of this, routers and\nload balancers should be able to respond quickly as new container instances\nappear and disappear.\n\nThis capability of external routers also makes it easy to test new fixes and\nfeature upgrades in ways that are not possible with Docker Swarm alone,\nincluding blue-green deployments, canary releases, and similar methods\n[https://www.infoworld.com/article/3565750/4-deployment-strategies-for-resilient-microservices.html]\n. By crafting routing rules that split traffic between old and new versions of\nservices in user-defined proportions, it’s possible to roll out updates\ngradually and even roll them back when necessary with zero downtime.\n\nAnother important feature of a reverse proxy is the ability to terminate\nencrypted TLS traffic. Users have come to expect the HTTPS URL and padlock icon\nthat indicate secure connections. In this aspect, Traefik not only supports TLS\nbut – in keeping with the Docker Swarm ethos of easy configuration – it also\nsupports automated certificate management\n[/blog/traefik-2-tls-101-23b4fbee81f1/] via a built-in client for Let's Encrypt\n[http://letsencrypt.org/].\n\nFuture-Proof Your Apps\nSeparating the functions of networking and container orchestration has benefits\nfor application lifecycles, too. As an application scales and evolves,\ninevitably its infrastructure needs will also change. Because Traefik works\nconsistently across on-premises and public cloud environments, it makes it\nsimple to port your Docker Swarm clusters when the time comes, without dramatic\nconfiguration changes.\n\nThe commercial product Traefik Enterprise Edition (TraefikEE) [/traefikee/] also\nincludes features aimed at enterprise deployments. For example, it supports a\nvariety of identity and authentication protocols, including LDAP, JWT, and\nOpenID Connect. It runs as a cluster for high availability, including clustered\nsupport for Let’s Encrypt. And it’s fully compliant with Docker’s Universal\nControl Plane, giving operations teams centralized control of networking as part\nof the underlying infrastructure.\n\nAnd we must not ignore that it may become necessary to move applications away\nfrom Docker Swarm to a more feature-rich orchestrator, such as Kubernetes. A\nTraefik configuration can be ported from Docker Swarm to Kubernetes without\nsignificant changes, meaning the choice you make for routing and load balancing\ntoday will not negatively affect your future plans. By comparison, Interlock\nonly works with Docker Enterprise.\n\nThe Route Forward\nContainers are likely to remain the dominant means of application deployment for\nyears to come, and with good reason. What’s more, as the microservices model of\napplication development gains traction, container orchestration will\nincreasingly become an essential component of IT infrastructure.\n\nNetworking, on the other hand, is essential now and for the future. External\nreverse proxy and load balancing software offer networking features and control\nthat an orchestration layer like Docker Swarm cannot provide on its own. What’s\nmore, the auto-discovery and configuration capabilities of Traefik make it an\nideal partner for Docker Swarm and Kubernetes alike.\n\nTo learn more about using Traefik as an ingress proxy and load balancer for\nDocker Swarm environments, watch our recent webinar, “Application Routing for\nDocker Swarm\n[https://info.containo.us/webinar-recording-powerful-application-routing-for-docker-swarm]\n”.","html":"<figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2020/07/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking.jpg\" class=\"kg-image\" alt=\"Traefik and Docker Swarm: A Dynamic Duo for Cloud-Native Container Networking\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/07/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/07/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/07/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking.jpg 1600w, https://containous.ghost.io/content/images/2020/07/Traefik-and-Docker-Swarm-A-Dynamic-Duo-for-Cloud-Native-Container-Networking.jpg 2400w\" sizes=\"(min-width: 1200px) 1200px\"></figure><p>Docker didn’t invent application containers, but it put them on the map. Docker software helped containers become the most important innovation in application delivery since virtual machines. And with the introduction of Swarm mode, Docker added <em>container orchestration</em> to its toolbox, making it possible to build distributed applications from large collections of containerized microservices.</p><p>Docker Swarm has a lot going for it. For starters, it’s built into the Docker Engine, so it’s available to anyone who can launch Docker containers. It’s also easy to get up and running in a variety of cloud and on-premises environments, unlike more complex tools such as Kubernetes and Mesos.</p><p>Unfortunately, Swarm alone will only get you partway to production. Its “routing mesh” networking model doesn’t supply the availability, security, observability, and control that you’ll need when exposing your applications to the open internet, particularly as they scale to more complex usage scenarios.</p><h2 id=\"load-balancing-and-reverse-proxies\">Load Balancing and Reverse Proxies</h2><p>The smart way to gain these capabilities is to pair Docker Swarm with external reverse proxy and load balancing software. These networking tools act as concierge for requests coming from the external network. They not only route requests to where they need to go (also known as <em>ingress routing</em>), but they also help ensure that backend applications and services don’t become overwhelmed by traffic spikes.</p><p>At its most basic, this type of routing software handles HTTP requests, which sit at Layer 7 of the OSI networking model, known as the <em>application layer</em>. More advanced load balancers extend their capabilities to Layer 4, the <em>transport layer</em>, by also handling TCP requests.</p><p><a href=\"https://containous.ghost.io/traefik/\">Traefik</a> is one such offering that’s particularly well-suited for use with Docker Swarm. Like Swarm mode itself, Traefik aims to eliminate much of the drudgery of maintaining containerized environments by automating routine configuration tasks.Traefik <a href=\"https://docs.traefik.io/providers/docker/\">automatically discovers</a> information about the network and services available in a Docker Swarm cluster, dynamically updating its configuration as the environment changes. This sets it apart from Interlock, the ingress routing component of the commercial Docker Enterprise product, which can become unreliable when its configuration is updated. At the same time, Traefik offers comprehensive observability into the functioning of the network, so operations teams are never left in the dark.</p><h2 id=\"advanced-routing\"><strong>Advanced Routing</strong></h2><p>The ability to update network routes efficiently is particularly important for microservices deployments. By their nature, microservices tend to be stateless and short-lived. New versions of services are typically deployed frequently and instances are scaled dynamically to meet demand. Because of this, routers and load balancers should be able to respond quickly as new container instances appear and disappear.</p><!--kg-card-begin: markdown--><p>This capability of external routers also makes it easy to test new fixes and feature upgrades in ways that are not possible with Docker Swarm alone, including blue-green deployments, canary releases, and <a href=\"https://www.infoworld.com/article/3565750/4-deployment-strategies-for-resilient-microservices.html\" target=\"_blank\" rel=\"nofollow\">similar methods</a>. By crafting routing rules that split traffic between old and new versions of services in user-defined proportions, it’s possible to roll out updates gradually and even roll them back when necessary with zero downtime.</p>\n<p>Another important feature of a reverse proxy is the ability to terminate encrypted TLS traffic. Users have come to expect the HTTPS URL and padlock icon that indicate secure connections. In this aspect, Traefik not only supports TLS but – in keeping with the Docker Swarm ethos of easy configuration – it also supports <a href=\"https://containous.ghost.io/blog/traefik-2-tls-101-23b4fbee81f1/\">automated certificate management</a> via a built-in client for <a href=\"http://letsencrypt.org/\" target=\"_blank\" rel=\"nofollow\">Let's Encrypt</a>.</p>\n<!--kg-card-end: markdown--><h2 id=\"future-proof-your-apps\">Future-Proof Your Apps</h2><p>Separating the functions of networking and container orchestration has benefits for application lifecycles, too. As an application scales and evolves, inevitably its infrastructure needs will also change. Because Traefik works consistently across on-premises and public cloud environments, it makes it simple to port your Docker Swarm clusters when the time comes, without dramatic configuration changes.</p><p>The commercial product <a href=\"https://containous.ghost.io/traefikee/\">Traefik Enterprise Edition (TraefikEE)</a> also includes features aimed at enterprise deployments. For example, it supports a variety of identity and authentication protocols, including LDAP, JWT, and OpenID Connect. It runs as a cluster for high availability, including clustered support for Let’s Encrypt. And it’s fully compliant with Docker’s Universal Control Plane, giving operations teams centralized control of networking as part of the underlying infrastructure.</p><p>And we must not ignore that it may become necessary to move applications away from Docker Swarm to a more feature-rich orchestrator, such as Kubernetes. A Traefik configuration can be ported from Docker Swarm to Kubernetes without significant changes, meaning the choice you make for routing and load balancing today will not negatively affect your future plans. By comparison, Interlock only works with Docker Enterprise.</p><h2 id=\"the-route-forward\"><strong>The Route Forward</strong></h2><p>Containers are likely to remain the dominant means of application deployment for years to come, and with good reason. What’s more, as the microservices model of application development gains traction, container orchestration will increasingly become an essential component of IT infrastructure.</p><p>Networking, on the other hand, is essential now and for the future. External reverse proxy and load balancing software offer networking features and control that an orchestration layer like Docker Swarm cannot provide on its own. What’s more, the auto-discovery and configuration capabilities of Traefik make it an ideal partner for Docker Swarm and Kubernetes alike.</p><p>To learn more about using Traefik as an ingress proxy and load balancer for Docker Swarm environments, watch our recent webinar, “<a href=\"https://info.containo.us/webinar-recording-powerful-application-routing-for-docker-swarm\">Application Routing for Docker Swarm</a>”.<br></p>","url":"https://containous.ghost.io/blog/traefik-and-docker-swarm-a-dynamic-duo-for-cloud-native-container-networking/","canonical_url":null,"uuid":"4e6b82bf-2338-49c7-8188-b8522c5430d8","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f0dd2aeda8b5600395a511a","reading_time":4}}]}},"pageContext":{"slug":"neil","limit":9,"skip":0,"numberOfPages":2,"humanPageNumber":1,"prevPageNumber":null,"nextPageNumber":2,"previousPagePath":null,"nextPagePath":"/author/neil/page/2/"}},"staticQueryHashes":["1274566015","2561578252","2731221146","394248586","4145280475","749840385"]}