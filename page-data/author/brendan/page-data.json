{"componentChunkName":"component---src-templates-author-tsx","path":"/author/brendan/","result":{"data":{"ghostAuthor":{"slug":"brendan","name":"Brendan LE GLAUNEC","bio":null,"cover_image":"https://containous.ghost.io/content/images/2019/11/logoBuilder--1-.png","profile_image":"https://containous.ghost.io/content/images/2019/11/NewAvatar.png","location":"Poznań, Poland","website":"https://github.com/Ullaakut","twitter":null,"facebook":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5dcc44711127150038885824","title":"Traefik Enterprise Edition 1.2 is out!","slug":"traefik-enterprise-edition-1-2-is-out-2ba37e22983c","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/11/traefikee-v1.2.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/cc689a5812614192721fe6084b77347f/f3583/traefikee-v1.2.png","srcSet":"/static/cc689a5812614192721fe6084b77347f/630fb/traefikee-v1.2.png 300w,\n/static/cc689a5812614192721fe6084b77347f/2a4de/traefikee-v1.2.png 600w,\n/static/cc689a5812614192721fe6084b77347f/f3583/traefikee-v1.2.png 1200w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Today, we’re happy to announce the availability of TraefikEE 1.2. This minor version was driven by customers feedback, and keeps improving...","custom_excerpt":"Today, we’re happy to announce the availability of TraefikEE 1.2. This minor version was driven by customers feedback, and keeps improving...","visibility":"public","created_at_pretty":"12 November, 2019","published_at_pretty":"October 15, 2019","updated_at_pretty":"21 May, 2020","created_at":"2019-11-12T20:56:37.000+00:00","published_at":"2019-10-15T20:57:00.000+00:00","updated_at":"2020-05-21T21:40:25.000+00:00","meta_title":"Traefik Enterprise Edition 1.2 is out!","meta_description":"Today, we’re happy to announce the availability of TraefikEE 1.2. This minor version was driven by customers feedback, and keeps improving...","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Brendan LE GLAUNEC","slug":"brendan","bio":null,"profile_image":"https://containous.ghost.io/content/images/2019/11/NewAvatar.png","twitter":null,"facebook":null,"website":"https://github.com/Ullaakut"}],"primary_author":{"name":"Brendan LE GLAUNEC","slug":"brendan","bio":null,"profile_image":"https://containous.ghost.io/content/images/2019/11/NewAvatar.png","twitter":null,"facebook":null,"website":"https://github.com/Ullaakut"},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"With OpenShift compatibility, more distributed features, improved operations,\nand more.\n\nToday, we’re happy to announce the availability of TraefikEE 1.2. This minor\nversion was driven by customers feedback, and keeps improving clustering\nfeatures while adding support for more platforms.\n\n> Traefik Enterprise Edition is a platform built on top of Traefik, designed for\nbusiness-critical deployments. It adds clustering features to satisfy the needs\nof enterprise customers.\nOpenShift Compatibility\nBecause Traefik has always been about compatibility with every platform,\nTraefikEE follows the same path and is now OpenShift\n[https://www.openshift.com/learn/what-is-openshift] ready! We’re also actively\nworking with RedHat on the certification process.\n\nWith this new step, we keep giving our customers more choices for their\ninfrastructure.\n\nDistributed features\nThanks to its clustered architecture, TraefikEE allowed us to provide\ndistributed rate limiting, and 1.2 introduces distributed connection limiting.\n\nThe goal of these distributed features is to keep the configuration simple, yet\nscalable. Whatever the number of data planes you’ve deployed, the configuration\nstays the same — even with hundreds of Traefik instances on your cluster, your\nbackend will only receive the given number of simultaneous requests.\n\nOperations\nACME\nA small tweak that makes administrators’ day easier, the traefikee and \ntraefikeectl CLIs now allow users to list the certificates within their\nclusters, and they’re also able to add ACME accounts directly from TraefikEE\nbackup files.\n\nInstallation on DockerEE\nThe whole installation of TraefikEE can now be done using the traefikeectl tool,\nas opposed to having to manually deploy compose files\n[https://docs.containo.us/installing/advanced/swarm-compose/n-cn/] in the\nversion 1.1. This makes it much more convenient as well as much faster to\ninstall. Take a look at the documentation for more information on DockerEE\ninstalls [https://docs.containo.us/integrating/dockeree/].\n\nWhat’s next?\nThe next logical step will be to integrate Traefik 2.0 into TraefikEE and bring\nwith it every feature… and hopefully much more!\n\nTry it now!\nGet a free one month trial\n[https://info.containo.us/get-traefik-enterprise-edition-free-for-30-days] right\nnow, and install TraefikEE on your favorite environment by following the \ninstallation guides [https://docs.containo.us/v1.2/].","html":"<!--kg-card-begin: html--><p class=\"post-sub-title\">With OpenShift compatibility, more distributed features, improved operations, and more.</p><!--kg-card-end: html--><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-105.png\" class=\"kg-image\"></figure><p>Today, we’re happy to announce the availability of TraefikEE 1.2. This minor version was driven by customers feedback, and keeps improving clustering features while adding support for more platforms.</p><blockquote>Traefik Enterprise Edition is a platform built on top of Traefik, designed for business-critical deployments. It adds clustering features to satisfy the needs of enterprise customers.</blockquote><h2 id=\"openshift-compatibility\">OpenShift Compatibility</h2><p>Because Traefik has always been about compatibility with every platform, TraefikEE follows the same path and is now <a href=\"https://www.openshift.com/learn/what-is-openshift\" rel=\"noopener nofollow\">OpenShift</a> ready! We’re also actively working with RedHat on the certification process.</p><p>With this new step, we keep giving our customers more choices for their infrastructure.</p><h2 id=\"distributed-features\">Distributed features</h2><p>Thanks to its clustered architecture, TraefikEE allowed us to provide distributed rate limiting, and 1.2 introduces distributed connection limiting.</p><p>The goal of these distributed features is to keep the configuration simple, yet scalable. Whatever the number of data planes you’ve deployed, the configuration stays the same — even with hundreds of Traefik instances on your cluster, your backend will only receive the given number of simultaneous requests.</p><h2 id=\"operations\">Operations</h2><h3 id=\"acme\">ACME</h3><p>A small tweak that makes administrators’ day easier, the <code>traefikee</code> and <code>traefikeectl</code> CLIs now allow users to list the certificates within their clusters, and they’re also able to add ACME accounts directly from TraefikEE backup files.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-1.png\" class=\"kg-image\"></figure><h3 id=\"installation-on-dockeree\">Installation on DockerEE</h3><p>The whole installation of TraefikEE can now be done using the <code>traefikeectl</code> tool, as opposed to having to <a href=\"https://docs.containo.us/installing/advanced/swarm-compose/n-cn/\" rel=\"noopener nofollow\">manually deploy compose files</a> in the version 1.1. This makes it much more convenient as well as much faster to install. Take a look at the documentation for <a href=\"https://docs.containo.us/integrating/dockeree/\" rel=\"noopener nofollow\">more information on DockerEE installs</a>.</p><h2 id=\"what-s-next\">What’s next?</h2><p>The next logical step will be to integrate Traefik 2.0 into TraefikEE and bring with it every feature… and hopefully much more!</p><h2 id=\"try-it-now-\">Try it now!</h2><p>Get a <a href=\"https://info.containo.us/get-traefik-enterprise-edition-free-for-30-days\" rel=\"noopener nofollow\">free one month trial</a> right now, and install TraefikEE on your favorite environment by following the <a href=\"https://docs.containo.us/v1.2/\" rel=\"noopener nofollow\">installation guides</a>.</p>","url":"https://containous.ghost.io/blog/traefik-enterprise-edition-1-2-is-out-2ba37e22983c/","canonical_url":null,"uuid":"7e8545e4-254a-4a3d-8dea-98ff4f8dc5dc","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dcb1c8569991550c004b6d3","reading_time":2}},{"node":{"id":"Ghost__Post__5dd55551ec5ed300387889cc","title":"Can We Trust GitHub Stars?","slug":"can-we-trust-github-stars-e8aa8b6b0baa","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/11/1-Tswt2xxYYgoCa0kE-Wirfg.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/365a80dbb25a7f50aeb9b89c4e5d6b7e/f3583/1-Tswt2xxYYgoCa0kE-Wirfg.png","srcSet":"/static/365a80dbb25a7f50aeb9b89c4e5d6b7e/630fb/1-Tswt2xxYYgoCa0kE-Wirfg.png 300w,\n/static/365a80dbb25a7f50aeb9b89c4e5d6b7e/2a4de/1-Tswt2xxYYgoCa0kE-Wirfg.png 600w,\n/static/365a80dbb25a7f50aeb9b89c4e5d6b7e/f3583/1-Tswt2xxYYgoCa0kE-Wirfg.png 1200w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"GitHub stars are an essential growth factor for many open source projects, but they can easily be from bot accounts. How can we trust GitHub stars again?","custom_excerpt":"GitHub stars are an essential growth factor for many open source projects, but they can easily be from bot accounts. How can we trust GitHub stars again?","visibility":"public","created_at_pretty":"20 November, 2019","published_at_pretty":"July 16, 2019","updated_at_pretty":"04 December, 2019","created_at":"2019-11-20T15:01:37.000+00:00","published_at":"2019-07-16T15:01:00.000+00:00","updated_at":"2019-12-04T03:11:09.000+00:00","meta_title":"Can We Trust GitHub Stars?","meta_description":"GitHub stars are an essential growth factor for many open source projects, but they can easily be from bot accounts. ","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Brendan LE GLAUNEC","slug":"brendan","bio":null,"profile_image":"https://containous.ghost.io/content/images/2019/11/NewAvatar.png","twitter":null,"facebook":null,"website":"https://github.com/Ullaakut"}],"primary_author":{"name":"Brendan LE GLAUNEC","slug":"brendan","bio":null,"profile_image":"https://containous.ghost.io/content/images/2019/11/NewAvatar.png","twitter":null,"facebook":null,"website":"https://github.com/Ullaakut"},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Community","slug":"community","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"GitHub stars are an essential growth factor for many open source projects, but\nthey can easily be from bot accounts. How can we trust GitHub stars again?\n\nFor Open Source GitHub projects, stars are a primordial metric. Of course, there\nare ways to abuse this system, as you might have heard recently. As an open\nsource company, we want our community’s legitimacy to be transparent, and we\nwant to help the open source community do the same for other projects.\n\nIn the past, there have been many occurrences of people abusing the GitHub API:\n\n * Gaining followers quickly [https://github.com/andrewsyc/github-follow-bot] by\n   making their account follow thousands of other people, hoping for them to\n   follow back\n * Faking their GitHub contributions to make themselves look like outstanding\n   open source developers\n * Automatically creating bot accounts\n   [https://redmonk.com/jgovernor/2017/10/24/so-where-all-the-github-link-farms-at-astro-turfing-in-software-development/] \n   to star repositories and virtually increase their popularity (Examples: here\n   [https://github.com/ffujiawei/auto-stars/blob/master/auto_stars.py] and here\n   [https://www.zdnet.com/article/researchers-uncover-ring-of-github-accounts-promoting-300-backdoored-apps/] \n   among others)\n\nstarbot is an automated bot account creator which starred repositories (has been\ntaken down)GitHub has taken down several of the repositories responsible for\nsuch abuses, but not all of them. The main reason why it was so simple to write\nthose bots was that creating GitHub accounts did not used to require any kind of\nverification, not even a confirmation link via email.\n\nWhile GitHub recently changed that by including a verification system during\naccount creation, it turns out that the challenge can be switched to an audio\nchallenge, which is significantly weaker than the standard one. Also, many of\nthe bot accounts created for the last few years are still there, from before the\nintroduction of the verification procedures.\n\nThis means that some repositories might have used simple bot creation scripts in\nthe past, or might be currently using more advanced ones, able to bypass the\nverification system. This has serious implications, because of the impact of\nGitHub stars on today’s open source ecosystem.\n\nThe fastest growing repositories in terms of stars are put on the trending page\n[https://github.com/trending], sent in the GitHub daily mailing list\n[https://github.com/trending/go?since=daily] to thousands of users, are shown\nmore frequently in the Explore [https://github.com/explore] tab, and attract\nmore attention in general. It’s also a very well known phenomenon that many\nstartups tend to use technologies based on how many stars they have, as it’s\nusually a good indicator of the size of the community behind a project.\n\nThat’s why we decided to start a side-project, called Astronomer\n[https://github.com/Ullaakut/astronomer], as a reference to analyzing GitHub\nstars and fighting against astro-turfing\n[https://en.wikipedia.org/wiki/Astroturfing].\n\nIt’s an open source tool which leverages the GitHub API to scan GitHub\nstargazers and compute an overall trust level for the repository, based on\nmultiple statistics found within the stargazers. Using Astronomer can help the\nopen source community prove the authenticity of their communities, and stop\naccusing each other based on gut feelings.\n\nAstronomer, scanning itselfAstronomer can also give more detailed statistics for\nan in-depth look at a community. It computes many factors upon which it\ndetermines the trust level:\n\n * Weighted contributions (older contributions being worth more trust)\n * Private contributions (having the lowest weight when computing overall trust)\n * Independent factors for different types of public contributions (Issues\n   created, Pull Requests created, Code reviews, etc.) which helps mitigate the\n   impact potential bots which would have tons of fake code contributions.\n * Account age (older accounts being worth more trust)\n * Amount of owned repositories\n * Every 5th percentile of the weighted contribution score, from 5 to 95\n\nIt scans two sets of stargazers: the first 200 users to have starred the project\n(since they are the most likely to be bots), and random stargazers. It computes\ntwo trust reports and combines them into its final trust report.\n\nAstronomer then sends the trust reports that it generates to the Astrolab\n[https://github.com/Ullaakut/astrolab] server, which serves GitHub badges for\nthe repositories that were scanned by the community. If you want to generate a\nbadge for your repository, all you need is to docker run astronomer right now\nand it will generate it for you.\n\nAs expected, the results of scanning Traefik are very positive, since its\ncommunity tends to contribute to many open source repositories. At the bottom of\nan Astronomer report, the generated GitHub badge URL is displayed, ready to be\ninserted in the repository’s readme file.\n\nThe next step for Astronomer will be to provide a web application to view\ndetailed reports for all scanned repositories.\n\nWe sincerely hope that this tool will help the open source community overall,\nand that it will help in reducing the tension between competing open source\nprojects by removing the source of doubt in their communities and their\nlegitimacies.","html":"<!--kg-card-begin: html--><p class=\"post-sub-title\">GitHub stars are an essential growth factor for many open source projects, but they can easily be from bot accounts. How can we trust GitHub stars again?</p><!--kg-card-end: html--><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-14.png\" class=\"kg-image\"></figure><p>For Open Source GitHub projects, stars are a primordial metric. Of course, there are ways to abuse this system, as you might have heard recently. As an open source company, we want our<strong><strong> community’s legitimacy</strong></strong> to be transparent, and we want to help the open source community do the same for other projects.</p><p>In the past, there have been many occurrences of people abusing the GitHub API:</p><ul><li><a href=\"https://github.com/andrewsyc/github-follow-bot\" rel=\"noopener\">Gaining followers quickly</a> by making their account follow thousands of other people, hoping for them to follow back</li><li>Faking their GitHub contributions to make themselves look like outstanding open source developers</li><li><a href=\"https://redmonk.com/jgovernor/2017/10/24/so-where-all-the-github-link-farms-at-astro-turfing-in-software-development/\" rel=\"noopener\">Automatically creating bot accounts</a> to star repositories and virtually increase their popularity (Examples: <a href=\"https://github.com/ffujiawei/auto-stars/blob/master/auto_stars.py\" rel=\"noopener\">here</a> and <a href=\"https://www.zdnet.com/article/researchers-uncover-ring-of-github-accounts-promoting-300-backdoored-apps/\" rel=\"noopener\">here</a> among others)</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-15.png\" class=\"kg-image\"><figcaption>starbot is an automated bot account creator which starred repositories (has been taken down)</figcaption></figure><p>GitHub has taken down several of the repositories responsible for such abuses, but not all of them. The main reason why it was so simple to write those bots was that creating GitHub accounts did not used to require any kind of verification, not even a confirmation link via email.</p><p>While GitHub recently changed that by including a <strong><strong>verification system</strong></strong> during account creation, it turns out that the challenge can be switched to an audio challenge, which is significantly weaker than the standard one. Also, many of the bot accounts created for the last few years are still there, from before the introduction of the verification procedures.</p><p>This means that some repositories might have used simple bot creation scripts in the past, or might be currently using more advanced ones, able to bypass the verification system. This has serious implications, because of the <strong><strong>impact of GitHub stars</strong></strong> on today’s open source ecosystem.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-16.png\" class=\"kg-image\"></figure><p>The fastest growing repositories in terms of stars are put on the <a href=\"https://github.com/trending\" rel=\"noopener\">trending page</a>, sent in the <a href=\"https://github.com/trending/go?since=daily\" rel=\"noopener\">GitHub daily mailing list</a> to thousands of users, are shown more frequently in the <a href=\"https://github.com/explore\" rel=\"noopener\">Explore</a> tab, and attract more attention in general. It’s also a very well known phenomenon that many startups tend to use technologies based on how many stars they have, as it’s usually a good indicator of the size of the community behind a project.</p><p>That’s why we decided to start a side-project, called <a href=\"https://github.com/Ullaakut/astronomer\" rel=\"noopener\">Astronomer</a>, as a reference to analyzing GitHub stars and fighting against <a href=\"https://en.wikipedia.org/wiki/Astroturfing\" rel=\"noopener\">astro-turfing</a>.</p><p>It’s an open source tool which leverages the GitHub API to <strong><strong>scan GitHub stargazers</strong></strong> and <strong><strong>compute an overall trust level</strong></strong> for the repository, based on multiple statistics found within the stargazers. Using Astronomer can help the open source community prove the authenticity of their communities, and stop accusing each other based on gut feelings.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://containous.ghost.io/content/images/2019/11/astronomer.gif\" class=\"kg-image\"><figcaption>Astronomer, scanning itself</figcaption></figure><p>Astronomer can also give more detailed statistics for an in-depth look at a community. It computes <strong><strong>many factors</strong></strong> upon which it determines the trust level:</p><ul><li>Weighted contributions (older contributions being worth more trust)</li><li>Private contributions (having the lowest weight when computing overall trust)</li><li>Independent factors for different types of public contributions (Issues created, Pull Requests created, Code reviews, etc.) which helps mitigate the impact potential bots which would have tons of fake code contributions.</li><li>Account age (older accounts being worth more trust)</li><li>Amount of owned repositories</li><li>Every 5th percentile of the weighted contribution score, from <code>5</code> to <code>95</code></li></ul><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-18.png\" class=\"kg-image\"></figure><p>It scans two sets of stargazers: the first 200 users to have starred the project (since they are the most likely to be bots), and random stargazers. It computes two trust reports and combines them into its final trust report.</p><p>Astronomer then sends the trust reports that it generates to the <a href=\"https://github.com/Ullaakut/astrolab\" rel=\"noopener\">Astrolab</a> server, which serves GitHub badges for the repositories that were scanned by the community. If you want to generate a badge for your repository, all you need is to <code>docker run</code> astronomer right now and it will generate it for you.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-19.png\" class=\"kg-image\"></figure><p>As expected, the results of scanning Traefik are very positive, since its community tends to contribute to many open source repositories. At the bottom of an Astronomer report, the generated GitHub badge URL is displayed, ready to be inserted in the repository’s readme file.</p><p>The next step for Astronomer will be to provide a web application to view detailed reports for all scanned repositories.</p><p>We sincerely hope that this tool will <strong><strong>help the open source community</strong></strong> overall, and that it will help in reducing the tension between competing open source projects by removing the source of doubt in their communities and their legitimacies.</p>","url":"https://containous.ghost.io/blog/can-we-trust-github-stars-e8aa8b6b0baa/","canonical_url":null,"uuid":"d3839868-063b-4b18-81c2-cb56a157e2f6","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd55551ec5ed300387889cc","reading_time":4}},{"node":{"id":"Ghost__Post__5dd55473ec5ed300387889a5","title":"Announcing TraefikEE v1.1","slug":"announcing-traefikee-v1-1-1338e9b7cd79","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/11/traefikee-v1.1.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/b0a42f21d3fb40cce89db9b6a9378543/f3583/traefikee-v1.1.png","srcSet":"/static/b0a42f21d3fb40cce89db9b6a9378543/630fb/traefikee-v1.1.png 300w,\n/static/b0a42f21d3fb40cce89db9b6a9378543/2a4de/traefikee-v1.1.png 600w,\n/static/b0a42f21d3fb40cce89db9b6a9378543/f3583/traefikee-v1.1.png 1200w,\n/static/b0a42f21d3fb40cce89db9b6a9378543/bbee5/traefikee-v1.1.png 1800w,\n/static/b0a42f21d3fb40cce89db9b6a9378543/ed396/traefikee-v1.1.png 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Traefik Enterprise Edition is a platform built on top of Traefik. Version 1.1 offers Automatic Certificate Management, Distributed Features, and Enhanced...","custom_excerpt":"Traefik Enterprise Edition is a platform built on top of Traefik. Version 1.1 offers Automatic Certificate Management, Distributed Features, and Enhanced...","visibility":"public","created_at_pretty":"20 November, 2019","published_at_pretty":"July 11, 2019","updated_at_pretty":"21 May, 2020","created_at":"2019-11-20T14:57:55.000+00:00","published_at":"2019-07-11T14:57:00.000+00:00","updated_at":"2020-05-21T23:53:47.000+00:00","meta_title":"Announcing TraefikEE v1.1","meta_description":"Traefik Enterprise 1.1 offers Automatic Certificate Management, Distributed Features, and support for Docker Enterprise","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Brendan LE GLAUNEC","slug":"brendan","bio":null,"profile_image":"https://containous.ghost.io/content/images/2019/11/NewAvatar.png","twitter":null,"facebook":null,"website":"https://github.com/Ullaakut"}],"primary_author":{"name":"Brendan LE GLAUNEC","slug":"brendan","bio":null,"profile_image":"https://containous.ghost.io/content/images/2019/11/NewAvatar.png","twitter":null,"facebook":null,"website":"https://github.com/Ullaakut"},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Offers Automatic Certificate Management, Distributed Features, and Enhanced\nSupport for DockerEE\n\nIt’s been two months since the general availability\n[/blog/announcing-general-availability-of-traefik-enterprise-edition-9c9aad363ce/] \nof the 1.0 version of Traefik Enterprise Edition. Encouraged by its successful\nlaunch, and propelled by the immense feedback we received from customers, the\nteam started to work on 1.1 right away.\n\n> Traefik Enterprise Edition [/traefikee/] is a new platform built on top of \nTraefik [/traefik/], the popular open-source cloud-native edge router, designed\nfor business-critical deployments. It adds clustering features to satisfy the\nneeds of enterprise customers. See it in action in the video demonstration\n[https://info.containo.us/request-demo-traefikee]!\nSo, let’s see what’s new in this 1.1 for TraefikEE and traefikeectl, its control\ntool!\n\nACME Account & Certificate Management\nDesigned for users that already leverage Let’s Encrypt and its automatic\ncertificate management, TraefikEE 1.1 allows you to seamlessly import your\ncertificates right into the cluster.\n\ntraefikeectl acme-add-certificate \\\n\t--certfile=\"cert.pem\" \\\n\t--keyfile=\"key.pem\" \\\n\t--accountname=\"my account\"\n\nIn the process, it is now possible to manage ACME accounts within your TraefikEE\ncluster using the traefikee and traefikeectl binaries: ask TraefikEE to create\nACME accounts, or to import your existing accounts.\n\n# Adds your me@containo.us account to your TraefikEE cluster!\ntraefikeectl acme-add-account \\\n  --use \\\n  --caserver=\"https://caserver\" \\\n  --email=\"me@containo.us\" \\\n  --name=\"my account\" \n  --privatekey=\"key.pem\"\n  --uri=\"https://registration_uri.com”\n\nWant to learn more about these features, just check out the operating guide\n[https://docs.containo.us/operating/acme/] about TraefikEE 1.1.\n\nDistributed Rate Limiting\nTraefikEE makes autoscaling easy: deploy more data nodes as the number of\nincoming requests grows. Before 1.1, when you configured rate limiting for your\nunderlying services, each node had its own rate limiting. In 1.1, the control\nplane makes sure the rate limiting is distributed within the cluster.\n\nTraefikEE intercepts the rate limiting configuration and inject its own\ndistributed rate limiting middleware into Traefik.\n\nThe best part? The configuration remains exactly the same!\n\n---\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: myservice\n  namespace: traefikee\n  labels:\n    app: myservice\n  annotations:\n    traefik.ingress.kubernetes.io/rate-limit: |\n      extractorfunc: client.ip\n      rateset:\n        bar:\n          period: 10s\n          average: 10000\n          burst: 10000\n\nThis service for example, has a cluster-wide rate limit set to 10,000 requests\nper client IP within 10 seconds.\n\nNetwork Automatic Discovery\nSome users were leveraging Docker Swarm [https://github.com/docker/swarm] \nnetwork capabilities to improve security on their cluster, making sure each\nservice used its own network.\n\nBefore 1.1, they had no choice but to attach another network to their services\nso that Traefik could reach them (and properly route the requests), or to attach\nthe new networks to TraefikEE itself. Since Traefik has always been about\ndynamic configuration, we weren’t satisfied with this situation.\n\nIn 1.1, TraefikEE (thanks to its redesigned architecture) is now able to\ndiscover the new networks and to reach them automatically.\n\nIt means that you are now able to add new applications from different Docker\nnetworks — and TraefikEE will dynamically update the data plane to join those\nnetworks.\n\nYou can turn this feature on during installation time!\n\ntraefikeectl install \\\n  --swarm \\\n  --swarm.networkautodiscovery \\\n  --licensekey=\"$TRAEFIKEE_LICENSE_KEY\"\n\nDocker Enterprise Edition\nTraefikEE is Docker certified\n[/blog/traefikee-now-dockeree-certified-d926bf7255a4/]! It means that it has\nbeen tested and is supported by Docker Enterprise — It complies with Docker best\npractices guidelines, has proven provenance, and has been scanned for security\nvulnerabilities.\n\nBefore 1.1, TraefikEE needed to install its control plane on the docker manager\nnodes, which could be a limitation.\n\nGood news, TraefikEE 1.1 can now be deployed on the worker nodes (and don’t even\nneed any manager node to fully operate).\n\nOn top of that, it now uses the UCP connector with enhanced security and proper\ncredentials.\n\nWhat’s Next?\nWith TraefikEE 1.1, we’re very proud to have helped our customers take full\nbenefit of Traefik and find ways to make sure every detail was taken care of.\n\nIn 1.2 (yes, there will be a 1.2 before the next big step!) we will keep\nimproving the user experience to make sure that managing a TraefikEE cluster is\nas simple as managing a single instance of Traefik, with extra benefits tailored\nfor the enterprise.\n\nTry it now!\nGet a free one month trial [/traefikee/] right now, and install TraefikEE on\nyour favorite environment by following the installation guides\n[https://docs.containo.us/].\n\nAnd if you want to learn more and see a live demo of TraefikEE 1.1, request a\ndemo [https://info.containo.us/request-demo-traefikee] today.","html":"<!--kg-card-begin: html--><p class=\"post-sub-title\">Offers Automatic Certificate Management, Distributed Features, and Enhanced Support for DockerEE</p><!--kg-card-end: html--><figure class=\"kg-card kg-image-card kg-width-full\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-113.png\" class=\"kg-image\"></figure><p>It’s been two months since the <a href=\"https://containous.ghost.io/blog/announcing-general-availability-of-traefik-enterprise-edition-9c9aad363ce/\">general availability</a> of the 1.0 version of Traefik Enterprise Edition. Encouraged by its successful launch, and propelled by the immense feedback we received from customers, the team started to work on 1.1 right away.</p><blockquote><a href=\"https://containous.ghost.io/traefikee/\" rel=\"noopener\">Traefik Enterprise Edition</a> is a new platform built on top of <a href=\"https://containous.ghost.io/traefik/\">Traefik</a>, the popular open-source cloud-native edge router, designed for business-critical deployments. It adds clustering features to satisfy the needs of enterprise customers. See it in action in the <a href=\"https://info.containo.us/request-demo-traefikee\">video demonstration</a>!</blockquote><p>So, let’s see what’s new in this 1.1 for TraefikEE <em><em>and</em></em> <code>traefikeectl</code>, its control tool!</p><h2 id=\"acme-account-certificate-management\">ACME Account &amp; Certificate Management</h2><p>Designed for users that already leverage Let’s Encrypt and its automatic certificate management, TraefikEE 1.1 allows you to seamlessly import your certificates right into the cluster.</p><pre><code class=\"language-shell\">traefikeectl acme-add-certificate \\\n\t--certfile=\"cert.pem\" \\\n\t--keyfile=\"key.pem\" \\\n\t--accountname=\"my account\"</code></pre><p>In the process, it is now possible to manage ACME accounts within your TraefikEE cluster using the <code>traefikee</code> and <code>traefikeectl</code> binaries: ask TraefikEE to create ACME accounts, or to import your existing accounts.</p><pre><code class=\"language-shell\"># Adds your me@containo.us account to your TraefikEE cluster!\ntraefikeectl acme-add-account \\\n  --use \\\n  --caserver=\"https://caserver\" \\\n  --email=\"me@containo.us\" \\\n  --name=\"my account\" \n  --privatekey=\"key.pem\"\n  --uri=\"https://registration_uri.com”</code></pre><p>Want to learn more about these features, just check out the <a href=\"https://docs.containo.us/operating/acme/\">operating guide</a> about TraefikEE 1.1.</p><h2 id=\"distributed-rate-limiting\">Distributed Rate Limiting</h2><p>TraefikEE makes autoscaling easy: deploy more data nodes as the number of incoming requests grows. Before 1.1, when you configured rate limiting for your underlying services, each node had its own rate limiting. In 1.1, the control plane makes sure the rate limiting is distributed within the cluster.</p><p>TraefikEE intercepts the rate limiting configuration and inject its own distributed rate limiting middleware into Traefik.</p><p>The best part? The configuration remains <strong><strong>exactly the same</strong></strong>!</p><pre><code class=\"language-yaml\">---\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: myservice\n  namespace: traefikee\n  labels:\n    app: myservice\n  annotations:\n    traefik.ingress.kubernetes.io/rate-limit: |\n      extractorfunc: client.ip\n      rateset:\n        bar:\n          period: 10s\n          average: 10000\n          burst: 10000</code></pre><p>This service for example, has a cluster-wide rate limit set to 10,000 requests per client IP within 10 seconds.</p><h2 id=\"network-automatic-discovery\">Network Automatic Discovery</h2><p>Some users were leveraging <a href=\"https://github.com/docker/swarm\" rel=\"noopener\">Docker Swarm</a> network capabilities to improve security on their cluster, making sure each service used its own network.</p><p>Before 1.1, they had no choice but to attach another network to their services so that Traefik could reach them (and properly route the requests), or to attach the new networks to TraefikEE itself. Since Traefik has always been about dynamic configuration, we weren’t satisfied with this situation.</p><p>In 1.1, TraefikEE (thanks to its redesigned architecture) is now able to discover the new networks and to reach them automatically.</p><p>It means that you are now able to add new applications from different Docker networks — and TraefikEE will dynamically update the data plane to join those networks.</p><p>You can turn this feature on during installation time!</p><pre><code class=\"language-shell\">traefikeectl install \\\n  --swarm \\\n  --swarm.networkautodiscovery \\\n  --licensekey=\"$TRAEFIKEE_LICENSE_KEY\"</code></pre><h2 id=\"docker-enterprise-edition\">Docker Enterprise Edition</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/proxy/1*YhmLMOeN6VJwGNqv-H_SiQ.jpeg\" class=\"kg-image\"></figure><p>TraefikEE is <a href=\"https://containous.ghost.io/blog/traefikee-now-dockeree-certified-d926bf7255a4/\">Docker certified</a>! It means that it has been tested and is supported by Docker Enterprise — It complies with Docker best practices guidelines, has proven provenance, and has been scanned for security vulnerabilities.</p><p>Before 1.1, TraefikEE needed to install its control plane on the docker manager nodes, which could be a limitation.</p><p>Good news, TraefikEE 1.1 can now be deployed on the worker nodes (and don’t even need any manager node to fully operate).</p><p>On top of that, it now uses the UCP connector with enhanced security and proper credentials.</p><h2 id=\"what-s-next\">What’s Next?</h2><p>With TraefikEE 1.1, we’re very proud to have helped our customers take full benefit of Traefik and find ways to make sure every detail was taken care of.</p><p>In 1.2 (yes, there will be a 1.2 before the next big step!) we will keep improving the user experience to make sure that managing a TraefikEE cluster is as simple as managing a single instance of Traefik, with extra benefits tailored for the enterprise.</p><h2 id=\"try-it-now-\">Try it now!</h2><p>Get a <a href=\"https://containous.ghost.io/traefikee/\" rel=\"noopener\">free one month trial</a> right now, and install TraefikEE on your favorite environment by following the <a href=\"https://docs.containo.us/\">installation guides</a>.</p><p>And if you want to learn more and see a live demo of TraefikEE 1.1, <a href=\"https://info.containo.us/request-demo-traefikee\">request a demo</a> today.</p>","url":"https://containous.ghost.io/blog/announcing-traefikee-v1-1-1338e9b7cd79/","canonical_url":null,"uuid":"94d88173-729c-4f8d-9108-1443dbfbf758","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd55473ec5ed300387889a5","reading_time":3}}]}},"pageContext":{"slug":"brendan","limit":9,"skip":0,"numberOfPages":1,"humanPageNumber":1,"prevPageNumber":null,"nextPageNumber":null,"previousPagePath":null,"nextPagePath":null}},"staticQueryHashes":["1274566015","2561578252","2731221146","394248586","4145280475","749840385"]}