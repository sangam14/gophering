{"componentChunkName":"component---src-templates-author-tsx","path":"/author/emile/","result":{"data":{"ghostAuthor":{"slug":"emile","name":"Emile Vauge","bio":null,"cover_image":"https://containous.ghost.io/content/images/2019/11/1500x500--4-.jpeg","profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","location":null,"website":null,"twitter":"@emilevauge","facebook":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5f6ab0a66bd3ed003915e68a","title":"Traefik Labs: Incubating the Future of Cloud Native Networking","slug":"traefik-labs-incubating-the-future-of-cloud-native-networking","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/09/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/cb96aa821662fe8a96c37390e3b30e87/47498/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking-1.jpg","srcSet":"/static/cb96aa821662fe8a96c37390e3b30e87/9dc27/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking-1.jpg 300w,\n/static/cb96aa821662fe8a96c37390e3b30e87/4fe8c/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking-1.jpg 600w,\n/static/cb96aa821662fe8a96c37390e3b30e87/47498/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking-1.jpg 1200w,\n/static/cb96aa821662fe8a96c37390e3b30e87/52258/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking-1.jpg 1800w,\n/static/cb96aa821662fe8a96c37390e3b30e87/a41d1/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Today is a big day for Containous and the entire Traefik community! As Traefik crosses yet another major download milestone, we continue on our mission of simplifying cloud-native networking by launching our first cloud offering. ","custom_excerpt":"Today is a big day for Containous and the entire Traefik community! As Traefik crosses yet another major download milestone, we continue on our mission of simplifying cloud-native networking by launching our first cloud offering. ","visibility":"public","created_at_pretty":"23 September, 2020","published_at_pretty":"September 23, 2020","updated_at_pretty":"12 October, 2020","created_at":"2020-09-23T02:19:18.000+00:00","published_at":"2020-09-23T12:30:48.000+00:00","updated_at":"2020-10-12T23:57:34.000+00:00","meta_title":"Traefik Labs: Incubating the Future of Cloud Native Networking","meta_description":"As Traefik crosses yet another major download milestone, we continue on our mission of simplifying cloud-native networking by launching our first cloud offering","og_description":null,"og_image":null,"og_title":null,"twitter_description":"Today is a big day for Containous and the entire Traefik community! As Traefik crosses yet another major download milestone, we continue on our mission of simplifying cloud-native networking by launching our first cloud offering. ","twitter_image":"https://containous.ghost.io/content/images/2020/09/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking---Twitter.png","twitter_title":"Traefik Labs: Incubating the Future of Cloud Native Networking","authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Announcements","slug":"announcements","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"#homepage-featured-post-3","slug":"hash-homepage-featured-post-3","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"internal"}],"plaintext":"Today is a big day for Containous and the entire Traefik community. As we cross\nyet another major download milestone with Traefik, we continue to execute and\ndeliver on our mission of simplifying cloud-native networking by launching a new\nproduct, our first cloud offering. And in recognition of the impact that Traefik\nhas made to enterprise organizations all around the world, we are very proud to\nannounce a refreshed brand and new company name that pays homage to our\nopen-source roots.\n\nFrom Humble Beginnings to Great Success\nIt’s hard to believe, but it was five years ago, in 2015, when I wrote the very\nfirst lines of code for Traefik. I started developing Traefik because of a basic\nneed for an application proxy that was highly automated, open-source, and\ndesigned from the ground up for DevOps organizations and microservices\nplatforms. Following the initial public announcement, a strong community of\npassionate people quickly gathered around the project. Some of these people\neventually contributed code. Some contributed ideas. Countless more used the\nsoftware and provided feedback. At that time, I could never have imagined that\nthis idea would become a huge success.\n\nFast forward to today, Traefik just crossed the 2 billion downloads mark, with\n30,000+ GitHub stars, more than 500 active contributors from all around the\nglobe, and users from the world’s largest companies like Conde Nast, eBay, and\nMailchimp. As a result, Traefik is now one of the most popular open-source\nprojects in the world. Unlike other successful open-source projects, Traefik\ndidn’t emerge from a large establishment like Google, Microsoft or Facebook. It\nwas willed into existence, built by a dedicated community of people who shared a\ncommon need. The success of Traefik is a testament to every single person who\njoined us on this journey.\n\nA Tribute to our Origins\nIn recognition of Traefik’s momentum and its importance to our mission, we felt\nit was an appropriate and opportune time to pay tribute to our “heritage”. Thus,\nwe are officially changing our company name to Traefik Labs and tweaking our\nproduct names to further support the Traefik brand. The product lineup will now\ninclude: Traefik Proxy (the original Traefik), Traefik Enterprise and Traefik\nMesh (formerly Maesh).\n\nYet despite the name change, our organization’s mission remains unchanged. In\nfact, it serves as an opportunity for us to better align our products with the\nbroader cloud-native networking challenges we continue to see plaguing\nenterprises. Traefik is, and will continue to be, the core engine of our product\nstack, even as the company builds new solutions that deliver additional\nfunctionality beyond Traefik. And as we introduce new products and services\ngoing forward, our new company name will better reflect the continued role of\nopen source around a strong community as a foundational pillar in driving\ninnovation.\n\nThe (Cloud-Native Networking) Struggle is Real\nAs companies press forward with their cloud-native strategies, many are facing\nthe harsh realization of just how different it is to run and operate\ncontainerized applications and microservices at scale. Gone are the days where\nyou could deploy and manage applications one-by-one via a manual, almost\nartisanal, process. Simply put, automation is no longer a “nice to have”, but a\nrequirement in order to realize the promised benefits of faster software\nreleases, better reliability, simpler management, and more.\n\nTo address this need, an entire ecosystem of technologies, vendors, and\ncommunities have emerged in recent years to drive the DevOps movement and\nculture, where huge progress has been made in automating compute and storage\ninfrastructure within cloud-native environments. Unfortunately, the same can’t\nbe said for networking, where silos of technologies make integration and\nautomation extremely difficult.\n\nIn my (pre-pandemic) travels around the world, countless enterprises articulated\nthis same networking challenge when deploying applications as microservices in\nproduction. They are investing in container orchestration platforms (on-premises\nand in the public cloud), and investing in DevOps tools. But they are also\ndesperately looking for that same fundamental transformation in networking,\nwhich is becoming increasingly urgent as they accelerate their digital\ntransformation plans due to the pandemic.\n\nBuilding the Traefik Cloud-Native Networking ‘Stack’\nWith that challenge in mind, our strategy at Traefik Labs is clear: we are\ncreating the simplest, most comprehensive cloud-native stack to help enterprises\nmanage their entire network across data centers, on-premises servers and public\nclouds all the way to the edge. We have already revolutionized the application\nnetworking layer with Traefik Proxy, Enterprise and Mesh, bringing open-source\nbased, cloud-native and simple solutions to DevOps organizations. We are now\nreusing this successful pattern to expand to the rest of the networking stack. \n\nWe’re taking a step in this direction today with the official release of Traefik\nPilot. Traefik Pilot is a platform that provides monitoring and control of your\nTraefik Proxy instances through a unified dashboard, serving as the control\ncenter for the entire network stack. It also introduces a new hub for hosting\nuser-created plug-ins built on the open-source Yaegi\n[https://traefik.io/blog/announcing-yaegi-263a1e2d070a/] project we’ve been\nnurturing in the recent years.\n\nThe Traefik Cloud-Native Networking ‘Stack’As a result, Traefik Pilot [https://pilot.traefik.io/] is now a cornerstone\npiece within the Traefik ‘Stack’. By leveraging and integrating our existing\nproducts, Traefik ‘Stack’ represents the single, integrated, networking solution\nenterprises need for cloud-native applications and microservices. As we look\ntoward the future, the Traefik ‘Stack’ will soon encompass edge services like\nWeb Application Firewall, multi-region load balancing and much more, to meet the\nevolving needs of application and operations teams alike.\n\nLastly, it should go without saying, that the core of this new ‘Stack’ will\nforever be open-source. The cloud-native revolution was built on open-source\ntechnologies and strong communities. We will continue to take the same simple,\nopen-source, cloud-native approach we used in building Traefik and apply it to\neverything we do. This is our commitment to our customers and our community,\ntogether we will build the future of cloud-native networking.\n\nWe’ll have a lot more to say about these projects in the upcoming weeks and\nmonths, so watch this space for more details. In the meantime, I want to again\nextend our thanks to everyone who has joined us in our Traefik journey. As\nalways, we’re eager to hear from you and we look forward to shaping the future\nof cloud-native networking together!","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/09/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking.jpg\" class=\"kg-image\" alt=\"Traefik Labs: Incubating the Future of Cloud Native Networking\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/09/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking.jpg 1600w, https://containous.ghost.io/content/images/2020/09/Traefik-Labs---Incubating-the-Future-of-Cloud-Native-Networking.jpg 2400w\" sizes=\"(min-width: 720px) 720px\"></figure><p>Today is a big day for Containous and the entire Traefik community. As we cross yet another major download milestone with Traefik, we continue to execute and deliver on our mission of simplifying cloud-native networking by launching a new product, our first cloud offering. And in recognition of the impact that Traefik has made to enterprise organizations all around the world, we are very proud to announce a refreshed brand and new company name that pays homage to our open-source roots.</p><h2 id=\"from-humble-beginnings-to-great-success\">From Humble Beginnings to Great Success</h2><p>It’s hard to believe, but it was five years ago, in 2015, when I wrote the very first lines of code for Traefik. I started developing Traefik because of a basic need for an application proxy that was highly automated, open-source, and designed from the ground up for DevOps organizations and microservices platforms. Following the initial public announcement, a strong community of passionate people quickly gathered around the project. Some of these people eventually contributed code. Some contributed ideas. Countless more used the software and provided feedback. At that time, I could never have imagined that this idea would become a huge success.</p><p>Fast forward to today, Traefik just crossed the 2 billion downloads mark, with 30,000+ GitHub stars, more than 500 active contributors from all around the globe, and users from the world’s largest companies like Conde Nast, eBay, and Mailchimp. As a result, Traefik is now one of the most popular open-source projects in the world. Unlike other successful open-source projects, Traefik didn’t emerge from a large establishment like Google, Microsoft or Facebook. It was willed into existence, built by a dedicated community of people who shared a common need. The success of Traefik is a testament to every single person who joined us on this journey.</p><h2 id=\"a-tribute-to-our-origins\">A Tribute to our Origins</h2><p>In recognition of Traefik’s momentum and its importance to our mission, we felt it was an appropriate and opportune time to pay tribute to our “heritage”. Thus, we are officially changing our company name to Traefik Labs and tweaking our product names to further support the Traefik brand. The product lineup will now include: Traefik Proxy (the original Traefik), Traefik Enterprise and Traefik Mesh (formerly Maesh).</p><p>Yet despite the name change, our organization’s mission remains unchanged. In fact, it serves as an opportunity for us to better align our products with the broader cloud-native networking challenges we continue to see plaguing enterprises. Traefik is, and will continue to be, the core engine of our product stack, even as the company builds new solutions that deliver additional functionality beyond Traefik. And as we introduce new products and services going forward, our new company name will better reflect the continued role of open source around a strong community as a foundational pillar in driving innovation.</p><h2 id=\"the-cloud-native-networking-struggle-is-real\">The (Cloud-Native Networking) Struggle is Real</h2><p>As companies press forward with their cloud-native strategies, many are facing the harsh realization of just how different it is to run and operate containerized applications and microservices at scale. Gone are the days where you could deploy and manage applications one-by-one via a manual, almost artisanal, process. Simply put, automation is no longer a “nice to have”, but a requirement in order to realize the promised benefits of faster software releases, better reliability, simpler management, and more.</p><p>To address this need, an entire ecosystem of technologies, vendors, and communities have emerged in recent years to drive the DevOps movement and culture, where huge progress has been made in automating compute and storage infrastructure within cloud-native environments. Unfortunately, the same can’t be said for networking, where silos of technologies make integration and automation extremely difficult.</p><p>In my (pre-pandemic) travels around the world, countless enterprises articulated this same networking challenge when deploying applications as microservices in production. They are investing in container orchestration platforms (on-premises and in the public cloud), and investing in DevOps tools. But they are also desperately looking for that same fundamental transformation in networking, which is becoming increasingly urgent as they accelerate their digital transformation plans due to the pandemic.</p><h2 id=\"building-the-traefik-cloud-native-networking-stack-\">Building the Traefik Cloud-Native Networking ‘Stack’</h2><p>With that challenge in mind, our strategy at Traefik Labs is clear: we are creating the simplest, most comprehensive cloud-native stack to help enterprises manage their entire network across data centers, on-premises servers and public clouds all the way to the edge. We have already revolutionized the application networking layer with Traefik Proxy, Enterprise and Mesh, bringing open-source based, cloud-native and simple solutions to DevOps organizations. We are now reusing this successful pattern to expand to the rest of the networking stack. </p><p>We’re taking a step in this direction today with the official release of Traefik Pilot. Traefik Pilot is a platform that provides monitoring and control of your Traefik Proxy instances through a unified dashboard, serving as the control center for the entire network stack. It also introduces a new hub for hosting user-created plug-ins built on the open-source <a href=\"https://traefik.io/blog/announcing-yaegi-263a1e2d070a/\">Yaegi</a> project we’ve been nurturing in the recent years.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://containous.ghost.io/content/images/2020/09/The-Traefik-Cloud-Native-Networking-Stack.png\" class=\"kg-image\" alt=\"The Traefik Cloud-Native Networking ‘Stack’\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/The-Traefik-Cloud-Native-Networking-Stack.png 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/The-Traefik-Cloud-Native-Networking-Stack.png 1000w, https://containous.ghost.io/content/images/size/w1600/2020/09/The-Traefik-Cloud-Native-Networking-Stack.png 1600w, https://containous.ghost.io/content/images/2020/09/The-Traefik-Cloud-Native-Networking-Stack.png 2048w\" sizes=\"(min-width: 720px) 720px\"><figcaption>The Traefik Cloud-Native Networking ‘Stack’</figcaption></figure><p>As a result, <a href=\"https://pilot.traefik.io/\">Traefik Pilot</a> is now a cornerstone piece within the Traefik ‘Stack’. By leveraging and integrating our existing products, Traefik ‘Stack’ represents the single, integrated, networking solution enterprises need for cloud-native applications and microservices. As we look toward the future, the Traefik ‘Stack’ will soon encompass edge services like Web Application Firewall, multi-region load balancing and much more, to meet the evolving needs of application and operations teams alike.</p><p>Lastly, it should go without saying, that the core of this new ‘Stack’ will forever be open-source. The cloud-native revolution was built on open-source technologies and strong communities. We will continue to take the same simple, open-source, cloud-native approach we used in building Traefik and apply it to everything we do. This is our commitment to our customers and our community, together we will build the future of cloud-native networking.</p><p>We’ll have a lot more to say about these projects in the upcoming weeks and months, so watch this space for more details. In the meantime, I want to again extend our thanks to everyone who has joined us in our Traefik journey. As always, we’re eager to hear from you and we look forward to shaping the future of cloud-native networking together!</p>","url":"https://containous.ghost.io/blog/traefik-labs-incubating-the-future-of-cloud-native-networking/","canonical_url":null,"uuid":"5182a941-0774-4d05-9cfa-fee3232d796a","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f6ab0a66bd3ed003915e68a","reading_time":4}},{"node":{"id":"Ghost__Post__5dd6a624b6de2b00381d402a","title":"Announcing General Availability of Traefik Enterprise Edition","slug":"announcing-general-availability-of-traefik-enterprise-edition-9c9aad363ce","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/11/traefikee-1.0.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/f7d078eb75d0acd3d1d4a3a942a97917/f3583/traefikee-1.0.png","srcSet":"/static/f7d078eb75d0acd3d1d4a3a942a97917/630fb/traefikee-1.0.png 300w,\n/static/f7d078eb75d0acd3d1d4a3a942a97917/2a4de/traefikee-1.0.png 600w,\n/static/f7d078eb75d0acd3d1d4a3a942a97917/f3583/traefikee-1.0.png 1200w,\n/static/f7d078eb75d0acd3d1d4a3a942a97917/54967/traefikee-1.0.png 1400w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Containous Inc, the company behind Traefik, is proud to announce the general availability of Traefik Enterprise Edition, a new platform built on top of...","custom_excerpt":"Containous Inc, the company behind Traefik, is proud to announce the general availability of Traefik Enterprise Edition, a new platform built on top of...","visibility":"public","created_at_pretty":"21 November, 2019","published_at_pretty":"April 18, 2019","updated_at_pretty":"21 May, 2020","created_at":"2019-11-21T14:58:44.000+00:00","published_at":"2019-04-18T14:58:00.000+00:00","updated_at":"2020-05-21T23:23:16.000+00:00","meta_title":"Announcing General Availability of Traefik Enterprise Edition","meta_description":"Containous is proud to announce the general availability of Traefik Enterprise, a new platform designed for business-critical deployments.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Announcements","slug":"announcements","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Traefik Made Distributed\n\nContainous Inc [/], the company behind the popular open source cloud native edge\nrouter, Traefik [/traefik/], is proud to announce the general availability of\nTraefik Enterprise Edition, a new platform built on top of Traefik, designed for\nbusiness-critical deployments.\n\nIn just three years, Traefik, the Cloud Native Edge Router, has become a key\nplayer in microservices infrastructures. With more than 21,000 stars on Github\nand 650,000,000 downloads on DockerHub, Traefik is widely used by major\ncompanies in their production environments.\n\nIn the latter part of 2018, Containous released the early access of TraefikEE\n[/blog/introducing-traefik-enterprise-edition-83b78d09efeb/] to a select group\nof users, allowing them to refine the software. Today, Containous is proud to\nannounce that TraefikEE has reached the 1.0 milestone, and is ready for\nproduction.\n\nOverview\nTraefikEE is built on top of Traefik and adds clustering features to satisfy the\nneeds of enterprise customers. All Traefik concepts apply to TraefikEE, so if\nyou’re already a Traefik user, you’re in familiar territory.\n\nIt runs on the edge of your platform to route the traffic to your applications,\nand is composed of two elements:\n\n * The data plane: horizontally scalable nodes, which forwards ingress traffic\n   to your services\n * The control plane: distributed nodes, implementing the raft consensus, which\n   watch your platform and its services, store topology changes, and reconfigure\n   the data plane to adapt ingress routing dynamically\n\nA TraefikEE cluster natively supports raft consensus between control nodes to\nsafely store and replicate configurations. No external Key-Value Store nor\nthird-party tool needed.\n\nThis distributed architecture is the cornerstone of TraefikEE’s strengths:\nnatively highly available, scalable and secure.\n\nHere is a 5 minute introduction video of TraefikEE:\n\nQuickstart\nStart your free trial with TraefikEE today. Visit our website at \nhttps://containo.us/traefikee [/traefikee/], and get your trial license key in\nless than a minute!\n\nOur documentation [https://docs.containo.us/] and our awesome CLI will help you\nbootstrap a TraefikEE cluster within a second. You can even request a demo\n[https://info.containo.us/request-demo-traefikeehttps://info.containo.us/request-demo-traefikee] \non our website to set up a session with the core team.\n\nDon’t hesitate to talk to our sales team\n[https://info.containo.us/contact-sales], they will find the best way to help\nyour company deploying a powerful edge routing solution.\n\nTraefik Stays Open\nTraefikEE is built on top of Traefik, that means that Traefik continues to\nevolve and will stay open source. Nothing changes! We are firm believers in open\nsource, and Traefik will continue to be our main priority and a community-driven\nproject. We are working on significant changes to Traefik, and recently have\nshared details [/blog/back-to-traefik-2-0-2f9aa17be305/] on the Traefik 2.0\nroadmap and released the first alphas\n[https://github.com/containous/traefik/releases/tag/v2.0.0-alpha4]. We won’t lie\nsaying it’s going to be huge.\n\nAbout Containous\nContainous is the company that supports the development of Traefik, the popular\nopen source cloud native edge router. Traefik is widely used around the globe\nwith over 650 million downloads. Containous brings the future of software\narchitecture by offering the most powerful tools to ease the deployment of your\nmodern IT environments.\n\nFind out more about Containous at containo.us [/] and follow @containous\n[https://twitter.com/containous] on Twitter.\n\nWith this new product, Containous continues to innovate and define new ways to\naccess microservice platforms, pushing the limits of automation and scalability.","html":"<!--kg-card-begin: html--><p class=\"post-sub-title\">Traefik Made Distributed</p><!--kg-card-end: html--><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2019/12/image-1.png\" class=\"kg-image\"></figure><p><a href=\"https://containous.ghost.io/\" rel=\"noopener\"><em><em>Containous Inc</em></em></a>, the company behind the popular open source cloud native edge router, <em><em><a href=\"https://containous.ghost.io/traefik/\">Traefik</a></em></em>, is proud to announce the general availability of Traefik Enterprise Edition, a new platform built on top of <em><em>Traefik</em></em>, designed for business-critical deployments.</p><p>In just three years, <em><em>Traefik</em></em>, the Cloud Native Edge Router, has become a key player in microservices infrastructures. With more than 21,000 stars on Github and 650,000,000 downloads on DockerHub, <em><em>Traefik</em></em> is widely used by major companies in their production environments.</p><p>In the latter part of 2018, Containous released <a href=\"https://containous.ghost.io/blog/introducing-traefik-enterprise-edition-83b78d09efeb/\">the early access of TraefikEE</a> to a select group of users, allowing them to refine the software. Today, Containous is proud to announce that TraefikEE has reached the <strong><strong>1.0</strong></strong> milestone, and is <strong><strong>ready for production</strong></strong>.</p><h2 id=\"overview\">Overview</h2><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-25.png\" class=\"kg-image\"></figure><p><em><em>TraefikEE</em></em> is built on top of <em><em>Traefik</em></em> and adds clustering features to satisfy the needs of enterprise customers. All <em><em>Traefik</em></em> concepts apply to <em><em>TraefikEE</em></em>, so if you’re already a <em><em>Traefik</em></em> user, you’re in familiar territory.</p><p>It runs on the edge of your platform to route the traffic to your applications, and is composed of two elements:</p><ul><li><strong><strong>The data plane</strong></strong>: horizontally scalable nodes, which forwards ingress traffic to your services</li><li><strong><strong>The control plane</strong></strong>: distributed nodes, implementing the raft consensus, which watch your platform and its services, store topology changes, and reconfigure the data plane to adapt ingress routing dynamically</li></ul><p>A <em><em>TraefikEE</em></em> cluster natively supports raft consensus between control nodes to safely store and replicate configurations. No external Key-Value Store nor third-party tool needed.</p><p>This distributed architecture is the cornerstone of <em><em>TraefikEE</em></em>’s strengths: natively <strong><strong>highly available</strong></strong>, <strong><strong>scalable</strong></strong> and <strong><strong>secure</strong></strong>.</p><p>Here is a 5 minute introduction video of <em><em>TraefikEE</em></em>:</p><figure class=\"kg-card kg-embed-card\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/znFQLLGCB3U?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><h2 id=\"quickstart\">Quickstart</h2><p>Start your free trial with TraefikEE today. Visit our website at <a href=\"https://containous.ghost.io/traefikee/\">https://containo.us/traefikee</a>, and get your trial license key in less than a minute!</p><p>Our <a href=\"https://docs.containo.us/\" rel=\"noopener\">documentation</a> and our awesome CLI will help you bootstrap a TraefikEE cluster within a second. You can even <a href=\"https://info.containo.us/request-demo-traefikeehttps://info.containo.us/request-demo-traefikee\">request a demo</a> on our website to set up a session with the core team.</p><p>Don’t hesitate to <a href=\"https://info.containo.us/contact-sales\">talk to our sales team</a>, they will find the best way to help your company deploying a powerful edge routing solution.</p><h2 id=\"traefik-stays-open\">Traefik Stays Open</h2><p><em><em>TraefikEE</em></em> is built on top of <em><em>Traefik</em></em>, that means that Traefik continues to evolve and will stay open source. Nothing changes! We are firm believers in open source, and <em><em>Traefik</em></em> will continue to be our main priority and a community-driven project. We are working on significant changes to Traefik, and <a href=\"https://containous.ghost.io/blog/back-to-traefik-2-0-2f9aa17be305/\">recently have shared details</a> on the <em><em>Traefik</em></em> 2.0 roadmap and released <a href=\"https://github.com/containous/traefik/releases/tag/v2.0.0-alpha4\" rel=\"noopener\">the first alphas</a>. We won’t lie saying it’s going to be huge.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-26.png\" class=\"kg-image\"></figure><h2 id=\"about-containous\">About Containous</h2><p>Containous is the company that supports the development of Traefik, the popular open source cloud native edge router. Traefik is widely used around the globe with over 650 million downloads. Containous brings the future of software architecture by offering the most powerful tools to ease the deployment of your modern IT environments.</p><p>Find out more about Containous at <a href=\"https://containous.ghost.io/\">containo.us</a> and follow <a href=\"https://twitter.com/containous\" rel=\"noopener\">@containous</a> on Twitter.</p><p>With this new product, Containous continues to innovate and define new ways to access microservice platforms, pushing the limits of automation and scalability.</p>","url":"https://containous.ghost.io/blog/announcing-general-availability-of-traefik-enterprise-edition-9c9aad363ce/","canonical_url":null,"uuid":"7d8408db-70d8-47e2-be30-abd880f19b93","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd6a624b6de2b00381d402a","reading_time":3}},{"node":{"id":"Ghost__Post__5dd6b3d9b6de2b00381d405f","title":"Back to Traefik 2.0","slug":"back-to-traefik-2-0-2f9aa17be305","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/11/back-traefik-2.0.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/eab1b698154eba0f1712590325d76538/f3583/back-traefik-2.0.png","srcSet":"/static/eab1b698154eba0f1712590325d76538/630fb/back-traefik-2.0.png 300w,\n/static/eab1b698154eba0f1712590325d76538/2a4de/back-traefik-2.0.png 600w,\n/static/eab1b698154eba0f1712590325d76538/f3583/back-traefik-2.0.png 1200w,\n/static/eab1b698154eba0f1712590325d76538/bbee5/back-traefik-2.0.png 1800w,\n/static/eab1b698154eba0f1712590325d76538/ed396/back-traefik-2.0.png 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Today, we’re announcing Traefik 2.0 alpha, the edge router built with the future in mind.\nThe new core is here, help us finalize...","custom_excerpt":"Today, we’re announcing Traefik 2.0 alpha, the edge router built with the future in mind.\nThe new core is here, help us finalize...","visibility":"public","created_at_pretty":"21 November, 2019","published_at_pretty":"March 19, 2019","updated_at_pretty":"22 May, 2020","created_at":"2019-11-21T15:57:13.000+00:00","published_at":"2019-03-19T15:57:00.000+00:00","updated_at":"2020-05-22T00:04:04.000+00:00","meta_title":"Back to Traefik 2.0","meta_description":"Today, we’re announcing Traefik 2.0 alpha, the edge router built with the future in mind.\nThe new core is here, help us finalize...","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Gigawatts of Routing Power\n\nBack in 2015, a revolution was under way. We were moving from manual,\nhandcrafted infrastructures, to container-based, industrial, and human-free\nplatforms. In those dark ages of orchestration, edge traffic was remarkably\ndifficult to manage. On one side, we had traditional reverse-proxies that were\nbuilt for static infrastructures, on the other side, we were building dynamic\nclusters made to deploy and manage thousands of microservices. The idea of\nhaving a simple and automatic edge router, all in one binary, was appealing, but\nalso idealistic. The foundation of Traefik [/traefik/] was laid that year,\npaving the way to building a project with strong values: simplicity of\nconfiguration, modern features, and open to the community. A few years later,\nthe project has reached 21k stars on Github\n[https://github.com/containous/traefik], and more than 600 millions downloads. \nInsane.\n\nSince then, the ecosystem around containers has changed a lot: Docker has become\na de-facto standard, and Kubernetes has shown itself to be the clear winner in\nthe battle for the best orchestration platform. Because of this, the CNCF\nlandscape [https://landscape.cncf.io/] has exploded, with hundreds of components\nto choose from.\n\n> The time has come to work on something new for Traefik.\nFor several months, the maintainer team has been working on a deep refactoring\nof the codebase to provide the firm foundations for the next iteration of\nTraefik, and we are ready to share this vision with you.\n\nToday, we’re announcing Traefik 2.0 alpha, the edge router built with the future\nin mind.\n\nThe new core is here, help us finalize Traefik with the features you want!\n\n\n--------------------------------------------------------------------------------\n\nWe Want Features!\nLet’s see what we have in store.\n\nVocabulary Clarification\nNot a feature per se, but we still wanted to make it easier for newcomers to\nunderstand the core concepts at work in Traefik. We wanted every word to have a\nclear and unique meaning throughout the code and documentation.\n\nWelcome providers, entrypoints, routers, middleware, and services.\n\n * Providers are the cluster technologies you already use (Kubernetes, Docker,\n   Consul, Mesos, Rancher…). Traefik uses your provider’s API to discover the\n   routes to your services.\n * Entrypoints, in their most basic forms, are the open ports where requests\n   will land.\n * Services represent the software hosted on your infrastructure. Traefik knows\n   how to deal with multiple instances of your programs (currently supporting\n   multiple load balancing capabilities), and use the services configuration to\n   determine how to reach the actual program.\n * Routers connect incoming requests to your services. They hold the rules that\n   decide which service handles the request.\n * Finally, pieces of middleware [https://docs.traefik.io/middlewares/overview/] \n    are components that may update the request before it is handled by a\n   service. Out of the box, Traefik comes with middleware to manage\n   authentication, rate limiting, circuit breaker, whitelisting, buffering, and\n   so on.\n\nConfiguration Structure\nDespite our best efforts, and because so many features have been added to\nTraefik since its first launch, we needed to polish things up and make sure\nevery configuration option belonged in its place.\n\nHere, it was a menial job that needed to be done, and we’ll spare you the\ndetails.\n\nLet Us Be Clear … We Want ACTUAL Features!\nSo, let’s remove the mystery, since we’ve teased you enough. Here are the\nfeatures we’ve added!\n\nTCP Support!\nThat’s right! It’s time to say goodbye to Issue #10\n[https://github.com/containous/traefik/issues/10]!\n\nYes, three years later, after a lot of work\n[https://github.com/containous/traefik/pull/4587] (as foretold\n[https://github.com/containous/traefik/issues/10#issuecomment-142835077]), and a\nlot of discussions, Traefik now fully supports the TCP protocol\n[https://docs.traefik.io/routing/routers/#configuring-tcp-routers].\n\nWant to see an example? Let’s use the File Provider, and redirect every request\non port27010 to your database service!\n\n[entrypoints]\n   [entrypoints.web]\n      address = \":80\"\n\n[entrypoints.mongo-port]\n      address = \":27017\"\n\n[tcp] # YAY!\n   [tcp.routers]\n      [tcp.routers.everything-to-mongo]\n         entrypoints = [\"mongo-port\"]\n         rule = \"HostSNI(`*`)\" # Catches every request       \n         service = \"database\"\n\nThe best part? Traefik supports routing based on SNIs\n[https://en.wikipedia.org/wiki/Server_Name_Indication]!\n\n[entrypoints]\n   [entrypoints.web]\n      address = \":80\"\n\n[entrypoints.mongo-port]\n      address = \":27017\"\n\n[tcp] # YAY!\n   [tcp.routers]\n      [tcp.routers.to-db-1]\n         entrypoints = [\"mongo-port\"]\n         rule = \"HostSNI(`db-1.domain`)\"       \n         service = \"db-1\"\n         [tcp.routers.to-db-1.tls] # The route is for TLS requests only\n      \n      [tcp.routers.to-db-2]\n         entrypoints = [\"mongo-port\"]\n         rule = \"HostSNI(`db-2.domain`)\"       \n         service = \"db-2\"\n         [tcp.routers.to-db-2.tls] # The route is for TLS requests only\n\nWhat’s even better? Traefik can go crazy, and support both HTTP and TCP on the \nsame port.\n\n> Yes, multiple protocols on the same entrypoint!\n[entrypoints]\n   [entrypoints.the-one]\n      address = \":443\"\n\n[tcp]\n   [tcp.routers]\n      [tcp.routers.to-db-1]\n         rule = \"HostSNI(`db-1.domain`)\"       \n         service = \"db-1\"\n         [tcp.routers.to-db-1.tls] # The route is for TLS requests only\n\n[http]\n   [http.routers]\n      [http.routers.my-api]\n         rule = \"Host(`api.domain`)\"       \n         service = \"my-api\"\n\nIn its first alpha version, Traefik only enables TCP routes in the File\nProvider, but stay tuned because it will (very) soon be available for other\nproviders!\n\nMiddleware to Update the Requests\nMany features used to be magically embedded in Traefik, with room for\ncustomization but no option for fine-tuning.\n\nMiddlewares fill the gap and give you the possibility to enable/configure any\nfeature you’d like, per router if you wish.\n\nMiddlewares are components that act on the request before it is actually\nforwarded to the services, and can even decide to not forward the request if a\nrequired condition isn’t met.\n\nAt release, Traefik comes with the following middlewares: AddPrefix\n[https://docs.traefik.io/middlewares/addprefix/] (to add a prefix to the request\npath), BasicAuth [https://docs.traefik.io/middlewares/basicauth/] & DigestAuth\n[https://docs.traefik.io/middlewares/digestauth/], ForwardAuth\n[https://docs.traefik.io/middlewares/forwardauth/] (to delegate authentication\nto a third-party service), Buffering\n[https://docs.traefik.io/middlewares/buffering/], Chain\n[https://docs.traefik.io/middlewares/chain/] (to define reusable sets of\nmiddlewares), CircuitBreaker\n[https://docs.traefik.io/middlewares/circuitbreaker/] (to avoid calling broken\nservices), Compress [https://docs.traefik.io/middlewares/compress/], Errors\n[https://docs.traefik.io/middlewares/errorpages/] (to provide custom error\npages), Headers [https://docs.traefik.io/middlewares/headers/], IpWhitelist\n[https://docs.traefik.io/middlewares/ipwhitelist/], MaxConn (to limit the number\nof simultaneous connections to a service), PassTLSClientCert\n[https://docs.traefik.io/middlewares/passtlsclientcert/], RateLimit\n[https://docs.traefik.io/middlewares/ratelimit/] (to limit the number of\nrequests to a service within a given period of time), RedirectRegex\n[https://docs.traefik.io/middlewares/redirectregex/] and RedirectScheme\n[https://docs.traefik.io/middlewares/redirectscheme/], and ReplacePath\n[https://docs.traefik.io/middlewares/replacepath/] (to update the query path\nbefore forwarding it to the service).\n\nAnd more importantly, we’ve re-architectured the code to make it easier to\nprovide additional middlewares in the near future.\n\nKubernetes & CRD\nIn the past two years, the community has been discussing (a lot) around “better\ningress,” and looking at our previous Kubernetes provider, we agreed that there\nwas room for improvement. With v2, it became obvious that if we wanted to let\nour Kubernetes fans benefit from every feature (like TCP and middleware) without\nbeing swarmed by a clutter of annotations, we had to propose an alternative.\n\nAmong the alternatives, CRD\n[https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/]\ns are more and more popular since they solve shortcomings of the ingress\nspecification. Inspired by what Heptio did in Contour with IngressRoute, we\nextended the specification to implement every Traefik feature.\n\nWe firmly believe that a consensus can emerge from those proposals and lead to\nthe next Ingress specification in Kubernetes.\n\nBelow is an example of this specification.\n\napiVersion: traefik.containo.us/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: test.crd\n  namespace: default\nspec:\n  entrypoints:\n    - web\n    - web-secure\n  routes:\n    - match: Host(`traefik.io`) && PathPrefix(`/foo`)\n      kind: Rule\n      services:\n        - name: whoami1\n          port: 80\n          strategy: RoundRobin\n      middlewares:\n        - name: stripprefix\n        - name: addprefix\n          namespace: foo\n    - match: Host(`containo.us`) && Method(`POST`)\n      kind: Rule\n      services:\n        - name: whoami2\n          port: 80\n  tls:\n    secretName: supersecret\n\nNew Expressive Routing Rule Syntax\nTraefik now supports an expressive syntax to define the router rules, with and, \nor, and parenthesis!\n\nThe available matchers [https://docs.traefik.io/routing/routers/#rule] being \nHeaders, HeadersRegexp, Host, HostRegexp, Method, Path, PathPrefix, and Query.\n\nSince TCP is a whole different world, for now, it only supports a dedicated\nmatcher: HostSNI.\n\nWant to see examples?\n\nrule = (Host(`api.domain`) && PathPrefix(`/v2`)) \n  || Host(`api-v2.domain`)\n\nrule = (Method(`DELETE`) || (Method(`POST`) \n  && Query(`action`, `delete`))) && Host('api.domain')\n\nCross-Provider Support\nTraefik has always been compatible with multiple providers, which is one of its\ngreater strengths: whatever your infrastructure is, from bare metal to\norchestrators and clusters, Traefik just works!\n\nBut with v2, we’ve gone a little further and allowed users to declare elements\n(middlewares, services, routers) in a provider, and to use them from a different\none.\n\nLet’s take a look at the following example, that declares an authentication\nmiddleware in a configuration file (the File Provider), which is being used from\na Docker label (the Docker Provider).\n\n# somewhere in a configuration file for the file provider\n[http.middlewares.my-users.basicauth]\n   users = [\"test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/\", \n            \"test2:$apr1$d9hr9HBB$4HxwgUir3HP4EsggP/QNo0\"]\n\n\n--------------------------------------------------------------------------------\n\n# somewhere in a docker compose file\n\nyour-container:\n    image: your-docker-image\n    \n    labels:\n      - \"traefik.http.routers.my-router.middlewares=file.my-users\"\n\nAnd of course, you could declare a router in a provider that points to services\ndeclared by another.\n\nTLS Termination per Route\nWhile adding TCP support to Traefik, we had to re-think almost everything,\nstarting with the entrypoint itself — the very door to your cluster.\n\nOur first idea was to dedicate entrypoints (and as a consequence port numbers)\nto a type of “protocol.” Unfortunately, in some cases, especially when people\nused Traefik to route requests for multiple clusters, we deemed it too\nrestrictive. As a consequence, we allowed multiple protocols per entrypoint.\n\nThen, as debates were still going on, we kept looking for ways to better control\nhow users would configure TLS termination or passthrough. The idea of enabling\nTLS on the Router level won the brainstorming, and then passed the tests of\nproof of concept (we have quite a fan [https://github.com/juliens] of proof of\nconcept branches on the team, to the point it has almost become a meme).\n\nHere is an example with three routers listening on the same entrypoint, the\nfirst router terminates TLS connections (on HTTPS), the second router terminates\nTLS connections (on TCP), and the third router passes through, leaving the\ndetails of the TLS connection to be handled by the service itself.\n\n[entrypoints]\n   [entrypoints.web-secure]\n      address = \":443\"\n\n[http]\n   [http.routers.to-service-1]\n      rule = \"Host(`domain-1`)\"\n      service = \"service-1\"\n      [http.routers.to-service-1.tls]\n         # terminates the tls connection and sends clear data\n         # to service 1\n\n[tcp]\n   [tcp.routers.to-service-2]\n      rule = \"HostSNI(`domain-2`)\"\n      service = \"service-2\"\n      [tcp.routers.to-service-2.tls]\n         # terminates the tls connection and sends clear data\n         # to service 2\n\n[tcp.routers.to-service-3]\n      rule = \"HostSNI(`domain-3`)\"\n      service = \"service-3\"\n      [tcp.routers.to-service-3.tls]\n         passthrough = true # sends encrypted data \"as is\" to service-3\n\nLabels, Key-Value Configuration, Tags, …\nA small tweak on the surface, but quite an impact in the code, we’ve re-written\nthe configuration parser. This new system ensures that every option in Traefik\nhas the same path, whether expressed in TOML [something.that.is.here], a label\nattached to a container something.that.is.there, a key (as in key-value store) \nsomething/that/is/somewhere, or anything that might be available in the future.\n\nRevamped Documentation\nWe’ve updated the documentation [https://docs.traefik.io/] structure to help new\nusers quickly understand how to use and configure Traefik. At the same time, we\ncame up with an outline that mirrored the configuration structure, making it\neasier for expert users to learn more about specific configuration details.\n\n\n--------------------------------------------------------------------------------\n\nThe Road to the Final Version\nYes, more (much more) is on the way, but we were so eager to share the work that\nwe couldn’t wait a minute longer than we already did.\n\n> New WebUI, remaining providers, metrics, UDP, YAML, TLS stores & options,\ncanary, more documentation — everything is possible.\nApart from re-enabling other providers (alpha comes with file, Docker, and k8s\nonly), and enabling TCP for all of them (currently file only), the roadmap is\nfull of features.\n\nFirst, the most visible one, a contributor is actively working on a revamped\nWebUI, and from the mockups we saw, it looks very promising. We expect this new\nUI to help you navigate seamlessly through hundreds of routes.\n\nSecond, we’re working on improvements for TLS configuration, with stores and\noptions, which will deserve its own explanation.\n\nThird, now that we have tried our hand on a new protocol, well, we might as well\nadd others (like UDP).\n\nIf you want to discuss or even help us implementing these features, please join\nus on the community forum [https://community.containo.us/] or on Github\n[https://github.com/containous/traefik], the maintainer team is always open to\nyour contributions.\n\nBut the options don’t stop there — Traefik is a community-driven project, and we\nnever know what is going to happen! We can’t wait to see what you’ll do with\nthis new architecture.\n\n\n--------------------------------------------------------------------------------\n\nTo be continued…\n> The community is at the center of our attention.\nWe’ve scheduled an online meet-up\n[/resources/the-traefik-2-0-online-meetup-100-community-driven/] where the\nmaintainer team will exclusively talk about Traefik v2.0! If you were looking\nfor an opportunity to ask questions or see a live demo, here it is.\n\nProbably the most important, we need your feedback. Tell us what you think,\nvoice your opinion! The alpha stage is the perfect timing to include disruptive\nchanges. Go crazy with pull requests, tests, and ideas.\n\nAnd finally, of course, our goal is to release the final as soon as possible!\n\n> We hope you enjoy Traefik as much as we enjoy building it with you!\n\n--------------------------------------------------------------------------------\n\nGrab the latest binaries\n[https://github.com/containous/traefik/releases/tag/v2.0.0-alpha1] for Linux,\nWindows, and Mac on Github or get the official Docker image!\n\ndocker pull traefik:v2.0.0-alpha1 (or 2.0.0-alpha1, v2.0, 2.0, faisselle)\ndocker pull traefik:v2.0.0-alpha1-alpine\ndocker pull traefik:v2.0.0-alpha1-nanoserver\n\nThe documentation can be found here [https://docs.traefik.io/] and the huge \nchangelog is here\n[https://github.com/containous/traefik/blob/master/CHANGELOG.md#v200-alpha1-2019-03-18]\n.\n\n\n--------------------------------------------------------------------------------\n\nThank you Gérald Croës\n[https://medium.com/u/520ac88c453e?source=post_page-----2f9aa17be305----------------------] \nfor your major contribution on this blog post and congrats to all the team\nmembers that have been working so hard on this alpha release 👏","html":"<!--kg-card-begin: html--><p class=\"post-sub-title\">Gigawatts of Routing Power</p><!--kg-card-end: html--><figure class=\"kg-card kg-image-card kg-width-full\"><img src=\"https://containous.ghost.io/content/images/2019/12/image-6.png\" class=\"kg-image\"></figure><p>Back in 2015, a revolution was under way. We were moving from manual, handcrafted infrastructures, to container-based, industrial, and human-free platforms. In those dark ages of orchestration, edge traffic was remarkably difficult to manage. On one side, we had traditional reverse-proxies that were built for static infrastructures, on the other side, we were building dynamic clusters made to deploy and manage thousands of microservices. The idea of having a simple and automatic edge router, all in one binary, was appealing, but also idealistic. The foundation of <a href=\"https://containous.ghost.io/traefik/\">Traefik</a> was laid that year, paving the way to building a project with strong values: <em><em>simplicity of configuration</em></em>, <em><em>modern features</em></em>, and <em><em>open to the community</em></em>. A few years later, the project has reached <a href=\"https://github.com/containous/traefik\" rel=\"noopener\">21k stars on Github</a>, and more than 600 millions downloads. <em><em>Insane</em></em>.</p><p>Since then, the ecosystem around containers has changed a lot: Docker has become a de-facto standard, and Kubernetes has shown itself to be the clear winner in the battle for the best orchestration platform. Because of this, the <a href=\"https://landscape.cncf.io/\" rel=\"noopener\">CNCF landscape</a> has exploded, with hundreds of components to choose from.</p><blockquote>The time has come to work on something new for Traefik.</blockquote><p>For several months, the maintainer team has been working on a deep refactoring of the codebase to provide the firm foundations for the next iteration of Traefik, and we are ready to share this vision with you.</p><p>Today, we’re announcing Traefik 2.0 alpha, the edge router built with the future in mind.</p><p>The new core is here, help us finalize Traefik with the features you want!</p><hr><h2 id=\"we-want-features-\">We Want Features!</h2><p>Let’s see what we have in store.</p><h3 id=\"vocabulary-clarification\">Vocabulary Clarification</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-27.png\" class=\"kg-image\"></figure><p>Not a feature per se, but we still wanted to make it easier for newcomers to understand the core concepts at work in Traefik. We wanted every word to have a clear and unique meaning throughout the code and documentation.</p><p>Welcome p<em><em>roviders</em></em>, e<em><em>ntrypoints</em></em>, r<em><em>outers</em></em>, m<em><em>iddleware</em></em>, and s<em><em>ervices</em></em>.</p><ul><li><em><em>Providers</em></em> are the cluster technologies you already use (Kubernetes, Docker, Consul, Mesos, Rancher…). Traefik uses your provider’s API to discover the routes to your services.</li><li><em><em>Entrypoints</em></em>, in their most basic forms, are the open ports where requests will land.</li><li><em><em>Services</em></em> represent the software hosted on your infrastructure. Traefik knows how to deal with multiple instances of your programs (currently supporting multiple load balancing capabilities), and use the s<em><em>ervices</em></em> configuration to determine how to reach the actual program.</li><li><em><em>Routers</em></em> connect incoming requests to your s<em><em>ervices. </em></em>They<em><em> </em></em>hold<em><em> </em></em>the rules that decide which service handles the request.</li><li>Finally, pieces of <em><em><a href=\"https://docs.traefik.io/middlewares/overview/\">middleware</a> </em></em>are components that may update the request before it is handled by a service. Out of the box, Traefik comes with middleware to manage authentication, rate limiting, circuit breaker, whitelisting, buffering, and so on.</li></ul><h3 id=\"configuration-structure\">Configuration Structure</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-28.png\" class=\"kg-image\"></figure><p>Despite our best efforts, and because so many features have been added to Traefik since its first launch, we needed to polish things up and make sure every configuration option belonged in its place.</p><p>Here, it was a menial job that needed to be done, and we’ll spare you the details.</p><h2 id=\"let-us-be-clear-we-want-actual-features-\">Let Us Be Clear … We Want ACTUAL Features!</h2><p>So, let’s remove the mystery, since we’ve teased you enough. Here are the features we’ve added!</p><h3 id=\"tcp-support-\">TCP Support!</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-29.png\" class=\"kg-image\"></figure><p>That’s right! It’s time to say goodbye to <a href=\"https://github.com/containous/traefik/issues/10\" rel=\"noopener\">Issue #10</a>!</p><p>Yes, three years later, after <a href=\"https://github.com/containous/traefik/pull/4587\" rel=\"noopener\">a lot of work</a> (<a href=\"https://github.com/containous/traefik/issues/10#issuecomment-142835077\" rel=\"noopener\">as foretold</a>), and a lot of discussions, <a href=\"https://docs.traefik.io/routing/routers/#configuring-tcp-routers\">Traefik now fully supports the TCP protocol</a>.</p><p>Want to see an example? Let’s use the File Provider, and redirect every request on port<code>27010</code> to your database service!</p><pre><code class=\"language-toml\">[entrypoints]\n   [entrypoints.web]\n      address = \":80\"\n\n[entrypoints.mongo-port]\n      address = \":27017\"\n\n[tcp] # YAY!\n   [tcp.routers]\n      [tcp.routers.everything-to-mongo]\n         entrypoints = [\"mongo-port\"]\n         rule = \"HostSNI(`*`)\" # Catches every request       \n         service = \"database\"</code></pre><p>The best part? Traefik supports routing based on <a href=\"https://en.wikipedia.org/wiki/Server_Name_Indication\" rel=\"noopener\">SNIs</a>!</p><pre><code class=\"language-toml\">[entrypoints]\n   [entrypoints.web]\n      address = \":80\"\n\n[entrypoints.mongo-port]\n      address = \":27017\"\n\n[tcp] # YAY!\n   [tcp.routers]\n      [tcp.routers.to-db-1]\n         entrypoints = [\"mongo-port\"]\n         rule = \"HostSNI(`db-1.domain`)\"       \n         service = \"db-1\"\n         [tcp.routers.to-db-1.tls] # The route is for TLS requests only\n      \n      [tcp.routers.to-db-2]\n         entrypoints = [\"mongo-port\"]\n         rule = \"HostSNI(`db-2.domain`)\"       \n         service = \"db-2\"\n         [tcp.routers.to-db-2.tls] # The route is for TLS requests only</code></pre><p>What’s even better? Traefik can go crazy, and support <em><em>both</em></em> HTTP <em><em>and</em></em> TCP on the <em><em>same</em></em> port.</p><blockquote>Yes, multiple protocols on the same entrypoint!</blockquote><pre><code class=\"language-toml\">[entrypoints]\n   [entrypoints.the-one]\n      address = \":443\"\n\n[tcp]\n   [tcp.routers]\n      [tcp.routers.to-db-1]\n         rule = \"HostSNI(`db-1.domain`)\"       \n         service = \"db-1\"\n         [tcp.routers.to-db-1.tls] # The route is for TLS requests only\n\n[http]\n   [http.routers]\n      [http.routers.my-api]\n         rule = \"Host(`api.domain`)\"       \n         service = \"my-api\"</code></pre><p>In its first alpha version, Traefik only enables TCP routes in the File Provider, but stay tuned because it will (very) soon be available for other providers!</p><h3 id=\"middleware-to-update-the-requests\">Middleware to Update the Requests</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-30.png\" class=\"kg-image\"></figure><p>Many features used to be magically embedded in Traefik, with room for customization but no option for fine-tuning.</p><p>Middlewares fill the gap and give you the possibility to enable/configure any feature you’d like, per router if you wish.</p><p>Middlewares are components that act on the request before it is actually forwarded to the services, and can even decide to <em><em>not</em></em> forward the request if a required condition isn’t met.</p><p>At release, Traefik comes with the following middlewares: <a href=\"https://docs.traefik.io/middlewares/addprefix/\">AddPrefix</a> (to add a prefix to the request path), <a href=\"https://docs.traefik.io/middlewares/basicauth/\">BasicAuth</a> &amp; <a href=\"https://docs.traefik.io/middlewares/digestauth/\">DigestAuth</a>, <a href=\"https://docs.traefik.io/middlewares/forwardauth/\">ForwardAuth</a> (to delegate authentication to a third-party service), <a href=\"https://docs.traefik.io/middlewares/buffering/\">Buffering</a>, <a href=\"https://docs.traefik.io/middlewares/chain/\">Chain</a> (to define reusable sets of middlewares), <a href=\"https://docs.traefik.io/middlewares/circuitbreaker/\">CircuitBreaker</a> (to avoid calling broken services), <a href=\"https://docs.traefik.io/middlewares/compress/\">Compress</a>, <a href=\"https://docs.traefik.io/middlewares/errorpages/\">Errors</a> (to provide custom error pages), <a href=\"https://docs.traefik.io/middlewares/headers/\">Headers</a>, <a href=\"https://docs.traefik.io/middlewares/ipwhitelist/\">IpWhitelist</a>, MaxConn (to limit the number of simultaneous connections to a service), <a href=\"https://docs.traefik.io/middlewares/passtlsclientcert/\">PassTLSClientCert</a>, <a href=\"https://docs.traefik.io/middlewares/ratelimit/\">RateLimit</a> (to limit the number of requests to a service within a given period of time), <a href=\"https://docs.traefik.io/middlewares/redirectregex/\">RedirectRegex</a> and <a href=\"https://docs.traefik.io/middlewares/redirectscheme/\">RedirectScheme</a>, and <a href=\"https://docs.traefik.io/middlewares/replacepath/\">ReplacePath</a> (to update the query path before forwarding it to the service).</p><p>And more importantly, we’ve re-architectured the code to make it easier to provide additional middlewares in the near future.</p><h3 id=\"kubernetes-crd\">Kubernetes &amp; CRD</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-31.png\" class=\"kg-image\"></figure><p>In the past two years, the community has been discussing (a lot) around “better ingress,” and looking at our previous Kubernetes provider, we agreed that there was room for improvement. With v2, it became obvious that if we wanted to let our Kubernetes fans benefit from every feature (like TCP and middleware) without being swarmed by a clutter of annotations, we had to propose an alternative.</p><p>Among the alternatives, <a href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/\" rel=\"noopener\">CRD</a>s are more and more popular since they solve shortcomings of the ingress specification. Inspired by what Heptio did in Contour with IngressRoute, we extended the specification to implement every Traefik feature.</p><p>We firmly believe that a consensus can emerge from those proposals and lead to the next Ingress specification in Kubernetes.</p><p>Below is an example of this specification.</p><pre><code class=\"language-yaml\">apiVersion: traefik.containo.us/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: test.crd\n  namespace: default\nspec:\n  entrypoints:\n    - web\n    - web-secure\n  routes:\n    - match: Host(`traefik.io`) &amp;&amp; PathPrefix(`/foo`)\n      kind: Rule\n      services:\n        - name: whoami1\n          port: 80\n          strategy: RoundRobin\n      middlewares:\n        - name: stripprefix\n        - name: addprefix\n          namespace: foo\n    - match: Host(`containo.us`) &amp;&amp; Method(`POST`)\n      kind: Rule\n      services:\n        - name: whoami2\n          port: 80\n  tls:\n    secretName: supersecret</code></pre><h3 id=\"new-expressive-routing-rule-syntax\">New Expressive Routing Rule Syntax</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-32.png\" class=\"kg-image\"></figure><p>Traefik now supports an expressive syntax to define the router rules, with <code>and</code>, <code>or</code>, and <code>parenthesis</code>!</p><p>The available <a href=\"https://docs.traefik.io/routing/routers/#rule\">matchers</a> being <code>Headers</code>, <code>HeadersRegexp</code>, <code>Host</code>, <code>HostRegexp</code>, <code>Method</code>, <code>Path</code>, <code>PathPrefix</code>, and <code>Query</code>.</p><p>Since TCP is a whole different world, for now, it only supports a dedicated matcher: <code>HostSNI</code>.</p><p>Want to see examples?</p><pre><code class=\"language-toml\">rule = (Host(`api.domain`) &amp;&amp; PathPrefix(`/v2`)) \n  || Host(`api-v2.domain`)\n\nrule = (Method(`DELETE`) || (Method(`POST`) \n  &amp;&amp; Query(`action`, `delete`))) &amp;&amp; Host('api.domain')</code></pre><h3 id=\"cross-provider-support\">Cross-Provider Support</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-33.png\" class=\"kg-image\"></figure><p>Traefik has always been compatible with multiple providers, which is one of its greater strengths: whatever your infrastructure is, from bare metal to orchestrators and clusters, Traefik just works!</p><p>But with v2, we’ve gone a little further and allowed users to declare elements (middlewares, services, routers) in a provider, and to use them from a different one.</p><p>Let’s take a look at the following example, that declares an authentication middleware in a configuration file (the File Provider), which is being used from a Docker label (the Docker Provider).</p><pre><code class=\"language-toml\"># somewhere in a configuration file for the file provider\n[http.middlewares.my-users.basicauth]\n   users = [\"test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/\", \n            \"test2:$apr1$d9hr9HBB$4HxwgUir3HP4EsggP/QNo0\"]</code></pre><hr><pre><code class=\"language-yaml\"># somewhere in a docker compose file\n\nyour-container:\n    image: your-docker-image\n    \n    labels:\n      - \"traefik.http.routers.my-router.middlewares=file.my-users\"</code></pre><p>And of course, you could declare a router in a provider that points to services declared by another.</p><h3 id=\"tls-termination-per-route\">TLS Termination per Route</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-34.png\" class=\"kg-image\"></figure><p>While adding TCP support to Traefik, we had to re-think almost everything, starting with the e<em><em>ntrypoint</em></em> itself — the very door to your cluster.</p><p>Our first idea was to dedicate e<em><em>ntrypoints</em></em> (and as a consequence port numbers) to a type of “protocol.” Unfortunately, in some cases, especially when people used Traefik to route requests for multiple clusters, we deemed it too restrictive. As a consequence, we allowed multiple protocols per e<em><em>ntrypoint</em></em>.</p><p>Then, as debates were still going on, we kept looking for ways to better control how users would configure TLS <em><em>termination</em></em> or <em><em>passthrough. </em></em>The idea of enabling TLS on the <em><em>Router</em></em> level won the brainstorming, and then passed the tests of proof of concept (we have <a href=\"https://github.com/juliens\" rel=\"noopener\">quite a fan</a> of proof of concept branches on the team, to the point it has almost become a meme).</p><p>Here is an example with three routers listening on the same e<em><em>ntrypoint</em></em>, the first router terminates TLS connections (on HTTPS), the second router terminates TLS connections (on TCP), and the third router passes through, leaving the details of the TLS connection to be handled by the s<em><em>ervice </em></em>itself.</p><pre><code class=\"language-toml\">[entrypoints]\n   [entrypoints.web-secure]\n      address = \":443\"\n\n[http]\n   [http.routers.to-service-1]\n      rule = \"Host(`domain-1`)\"\n      service = \"service-1\"\n      [http.routers.to-service-1.tls]\n         # terminates the tls connection and sends clear data\n         # to service 1\n\n[tcp]\n   [tcp.routers.to-service-2]\n      rule = \"HostSNI(`domain-2`)\"\n      service = \"service-2\"\n      [tcp.routers.to-service-2.tls]\n         # terminates the tls connection and sends clear data\n         # to service 2\n\n[tcp.routers.to-service-3]\n      rule = \"HostSNI(`domain-3`)\"\n      service = \"service-3\"\n      [tcp.routers.to-service-3.tls]\n         passthrough = true # sends encrypted data \"as is\" to service-3</code></pre><h3 id=\"labels-key-value-configuration-tags-\">Labels, Key-Value Configuration, Tags, …</h3><p>A small tweak on the surface, but quite an impact in the code, we’ve re-written the configuration parser. This new system ensures that every option in Traefik has the same path, whether expressed in TOML <code>[something.that.is.here]</code>, a label attached to a container <code>something.that.is.there</code>, a key (as in key-value store) <code>something/that/is/somewhere</code>, or anything that might be available in the future.</p><h3 id=\"revamped-documentation\">Revamped Documentation</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-35.png\" class=\"kg-image\"></figure><p>We’ve updated the <a href=\"https://docs.traefik.io/\">documentation</a> structure to help new users quickly understand how to use and configure Traefik. At the same time, we came up with an outline that mirrored the configuration structure, making it easier for expert users to learn more about specific configuration details.</p><hr><h2 id=\"the-road-to-the-final-version\">The Road to the Final Version</h2><p>Yes, more (<em><em>much</em></em> more) is on the way, but we were so eager to share the work that we couldn’t wait a minute longer than we already did.</p><blockquote>New WebUI, remaining providers, metrics, UDP, YAML, TLS stores &amp; options, canary, more documentation — everything is possible.</blockquote><p>Apart from re-enabling other providers (alpha comes with file, Docker, and k8s only), and enabling TCP for all of them (currently file only), the roadmap is full of features.</p><p>First, the most visible one, a contributor is actively working on a revamped WebUI, and from the mockups we saw, it looks <em><em>very</em></em> promising. We expect this new UI to help you navigate seamlessly through hundreds of routes.</p><p>Second, we’re working on improvements for TLS configuration, with stores and options, which will deserve its own explanation.</p><p>Third, now that we have tried our hand on a new protocol, well, we might as well add others (like UDP).</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-36.png\" class=\"kg-image\"></figure><p>If you want to discuss or even help us implementing these features, please join us on the <a href=\"https://community.containo.us/\">community forum</a> or on <a href=\"https://github.com/containous/traefik\" rel=\"noopener\">Github</a>, the maintainer team is always open to your contributions.</p><p>But the options don’t stop there — Traefik is a community-driven project, and we never know what is going to happen! We can’t wait to see what you’ll do with this new architecture.</p><hr><h2 id=\"to-be-continued-\">To be continued…</h2><blockquote>The community is at the center of our attention.</blockquote><p>We’ve scheduled <a href=\"https://containous.ghost.io/resources/the-traefik-2-0-online-meetup-100-community-driven/\">an online meet-up</a> where the maintainer team will exclusively talk about Traefik v2.0! If you were looking for an opportunity to ask questions or see a live demo, here it is.</p><p>Probably the most important, we <em><em>need</em></em> your feedback. Tell us what you think, voice your opinion! The alpha stage is the perfect timing to include disruptive changes. Go crazy with pull requests, tests, and ideas.</p><p>And finally, of course, our goal is to release the final as soon as possible!</p><blockquote>We hope you enjoy Traefik as much as we enjoy building it with you!</blockquote><hr><p>Grab the <a href=\"https://github.com/containous/traefik/releases/tag/v2.0.0-alpha1\" rel=\"noopener\">latest binaries</a> for Linux, Windows, and Mac on Github or get the official Docker image!</p><pre><code class=\"language-shell\">docker pull traefik:v2.0.0-alpha1 (or 2.0.0-alpha1, v2.0, 2.0, faisselle)\ndocker pull traefik:v2.0.0-alpha1-alpine\ndocker pull traefik:v2.0.0-alpha1-nanoserver</code></pre><p>The documentation can be found <a href=\"https://docs.traefik.io/\">here</a> and the <em><em>huge</em></em> changelog is <a href=\"https://github.com/containous/traefik/blob/master/CHANGELOG.md#v200-alpha1-2019-03-18\" rel=\"noopener\">here</a>.</p><hr><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-37.png\" class=\"kg-image\"></figure><p><em><em>Thank you </em></em><a href=\"https://medium.com/u/520ac88c453e?source=post_page-----2f9aa17be305----------------------\" rel=\"noopener\"><em><em>Gérald Croës</em></em></a><em><em> for your major contribution on this blog post and congrats to all the team members that have been working so hard on this alpha release 👏</em></em></p>","url":"https://containous.ghost.io/blog/back-to-traefik-2-0-2f9aa17be305/","canonical_url":null,"uuid":"393d57dd-4c65-4b3b-9705-07f64521802c","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd6b3d9b6de2b00381d405f","reading_time":10}},{"node":{"id":"Ghost__Post__5dd7ea61f1db6f0038c74413","title":"Introducing Traefik Enterprise Edition","slug":"introducing-traefik-enterprise-edition-83b78d09efeb","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/11/ee-1.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/6a61f59bb594a837dfeec781fa0238ee/fe3a8/ee-1.png","srcSet":"/static/6a61f59bb594a837dfeec781fa0238ee/630fb/ee-1.png 300w,\n/static/6a61f59bb594a837dfeec781fa0238ee/2a4de/ee-1.png 600w,\n/static/6a61f59bb594a837dfeec781fa0238ee/fe3a8/ee-1.png 1035w","sizes":"(max-width: 1035px) 100vw, 1035px"}}},"excerpt":"Containous, the company behind Traefik, is announcing Traefik Enterprise Edition, a new platform built on top of Traefik, designed for business-critical deployments.","custom_excerpt":"Containous, the company behind Traefik, is announcing Traefik Enterprise Edition, a new platform built on top of Traefik, designed for business-critical deployments.","visibility":"public","created_at_pretty":"22 November, 2019","published_at_pretty":"December 11, 2018","updated_at_pretty":"21 May, 2020","created_at":"2019-11-22T14:02:09.000+00:00","published_at":"2018-12-11T14:02:00.000+00:00","updated_at":"2020-05-21T23:49:46.000+00:00","meta_title":"Introducing Traefik Enterprise Edition","meta_description":"Containous is announcing Traefik Enterprise Edition, a new platform built on top of Traefik, designed for business-critical deployments.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"We Made It Distributed\n\nContainous [/], the company behind Traefik [/traefik/], is announcing Traefik\nEnterprise Edition — TraefikEE — a new platform built on top of Traefik,\ndesigned for business-critical deployments.\n\nIn just three years, Traefik, the Cloud Native Edge Router, has become a key\nplayer in microservices infrastructures. With more than 19,000 stars on Github\nand 400,000,000 downloads on DockerHub, Traefik is widely used by major\ncompanies in their production environments.\n\nToday, we are proud to announce that TraefikEE, our new commercial product, has\nreached public beta. TraefikEE allows you to deploy distributed Traefik\ninstances across your infrastructure, providing a scalable and reliable edge\nrouting platform. Split into a control plane and a data plane, Traefik cluster\nnodes are easily deployed and operated using the TraefikEE CLI. Implementing the\nRaft consensus, TraefikEE can safely store and replicate configurations and TLS\ncertificates across the nodes.\n\nLet’s take a look at how TraefikEE works.\n\nTraefikEE — Overview\nTraefikEE ArchitectureTraefikEE is built on top of Traefik and adds clustering features to satisfy the\nneeds of Enterprise customers. All Traefik concepts apply to TraefikEE, so if\nyou’re already a Traefik user, you’re in familiar territory.\n\nIt runs on the edge of your platform to route the traffic to your applications,\nand is composed of two elements:\n\n * The data plane: horizontally scalable nodes, which forward ingress traffic to\n   your services\n * The control plane: distributed nodes, implementing the raft consensus, which\n   watch your platform and its services, stores topology changes, and\n   reconfigure the data plane to adapt ingress routing dynamically\n\nA TraefikEE cluster natively supports raft consensus between control nodes to\nsafely store and replicate configurations. No external Key-Value Store nor\nthird-party tool needed.\n\nThis distributed architecture is the cornerstone of TraefikEE’s strengths:\nnatively highly available, scalable and secure.\n\nHighly Available\nThe control plane is a key component of TraefikEE. It is responsible for storing\nall cluster data, including events, TLS certificates, and Traefik configuration.\nIt is also in charge of connecting to the orchestrator to generate the data\nplane routing configuration.\n\nSince it is such a critical part of your system, TraefikEE is designed from the\nground up to be fault tolerant: the control plane runs natively in cluster mode\nwithout any extra configuration or external Key Value Store. It ensures your\ndata is always available and safe by using an internal distributed store,\nimplemented with raft.\n\nScalable\nThe data plane is in charge of forwarding the incoming requests to the\napplications. It has been designed to scale horizontally at a glance in order to\nface irregular network loads.\n\nTraefikEE handles high loads in a blink: just add more nodes to the data plane\nto handle the additional requests. When the peak is gone, shrink the number of\nnodes to save resources. Of course, this process can be done automatically using\nauto-scaling tools.\n\nSecure\nBy splitting responsibilities between two components, TraefikEE follows the\nprinciple of “Separation of Concerns.”\n\nTo ensure that sensitive information only runs on a closed and safe environment,\nthe control plane is not exposed to the outside. As a result, any malicious\naction from external traffic will stay stuck in the data plane and your platform\nwill stay safe.\n\nMoreover, TraefikEE only relies on encrypted communications between nodes, to\nadd an extra layer of security.\n\nSmooth Operations\nInstalling and managing a raft based application is usually a painful\nexperience. Since Traefik was made popular thanks to its usability and\nrefreshing user experience, we have extended those benefits to TraefikEE.\n\nFor this reason, TraefikEE comes with an additional CLI that manages to deploy\nand operate a cluster with several nodes in only one command line. Currently,\nKubernetes and Docker Swarm Mode are supported. More platforms will be added\nsoon. Teams will love to use this time-saving tool, traefikeectl (pronounced\n“traefikee-cuddle”).\n\nTraefikEE comes with a dashboard to visualize your cluster nodes configuration\nand status, in addition to aggregated data plane metrics.\n\nCommercial support is bundled with TraefikEE. The Traefik engineering team\nimmediately investigates and resolves any critical issues which may arise.\n\nEarly Access\nTraefikEE is available in early access starting today. The registration process\nis as simple and automated as possible, so don’t fear endless registration forms\nnor crowded waiting queues before trying it out. Visit our website at \nhttps://containo.us/traefikee [/traefikee/] and get your license key in less\nthan a minute!\n\nTraefik Stays Open\nTraefikEE is built on top of Traefik, that means that Traefik continues to\nevolve and will stay open source. Nothing changes! We are firm believers in open\nsource, and Traefik will continue to be our main priority and a community-driven\nproject. We are working on significant changes to Traefik, and recently have\nshared details [/blog/traefik-spoiler-season-episode-1-3dbcb1f5d8b9/] on what we\nhave been doing so far. Please stay tuned for full disclosure.\n\nAbout Containous\nContainous is the company that supports the development of Traefik. We provide\nprofessional services to ensure businesses get the most out of the solution.\n\nWith this new product, Containous continues to innovate and define new ways to\naccess microservice platforms, pushing the limits of automation and scalability.","html":"<!--kg-card-begin: html--><p class=\"post-sub-title\">We Made It Distributed</p><!--kg-card-end: html--><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2019/12/image-12.png\" class=\"kg-image\"></figure><p><em><em><a href=\"https://containous.ghost.io/\">Containous</a></em></em>, the company behind <em><em><a href=\"https://containous.ghost.io/traefik/\">Traefik</a></em></em>, is announcing Traefik Enterprise Edition — <em><em>TraefikEE</em></em> — a new platform built on top of <em><em>Traefik</em></em>, designed for business-critical deployments.</p><p>In just three years, <em><em>Traefik</em></em>, the Cloud Native Edge Router, has become a key player in microservices infrastructures. With more than 19,000 stars on Github and 400,000,000 downloads on DockerHub, <em><em>Traefik</em></em> is widely used by major companies in their production environments.</p><p>Today, we are proud to announce that <em><em>TraefikEE</em></em>, our new commercial product, has reached public beta. <em><em>TraefikEE</em></em> allows you to deploy distributed Traefik instances across your infrastructure, providing a scalable and reliable edge routing platform. Split into a control plane and a data plane, <em><em>Traefik</em></em> cluster nodes are easily deployed and operated using the <em><em>TraefikEE</em></em> CLI. Implementing the Raft consensus, <em><em>TraefikEE</em></em> can safely store and replicate configurations and TLS certificates across the nodes.</p><p>Let’s take a look at how <em><em>TraefikEE</em></em> works.</p><h2 id=\"traefikee-overview\">TraefikEE — Overview</h2><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-54.png\" class=\"kg-image\"><figcaption>TraefikEE Architecture</figcaption></figure><p><em><em>TraefikEE</em></em> is built on top of <em><em>Traefik</em></em> and adds clustering features to satisfy the needs of Enterprise customers. All <em><em>Traefik</em></em> concepts apply to <em><em>TraefikEE</em></em>, so if you’re already a <em><em>Traefik</em></em> user, you’re in familiar territory.</p><p>It runs on the edge of your platform to route the traffic to your applications, and is composed of two elements:</p><ul><li><strong><strong>The data plane</strong></strong>: horizontally scalable nodes, which forward ingress traffic to your services</li><li><strong><strong>The control plane</strong></strong>: distributed nodes, implementing the raft consensus, which watch your platform and its services, stores topology changes, and reconfigure the data plane to adapt ingress routing dynamically</li></ul><p>A <em><em>TraefikEE</em></em> cluster natively supports raft consensus between control nodes to safely store and replicate configurations. No external Key-Value Store nor third-party tool needed.</p><p>This distributed architecture is the cornerstone of <em><em>TraefikEE</em></em>’s strengths: natively <strong><strong>highly available</strong></strong>, <strong><strong>scalable</strong></strong> and <strong><strong>secure</strong></strong>.</p><h2 id=\"highly-available\">Highly Available</h2><figure class=\"kg-card kg-embed-card\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/bsl05RVuMtM?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><p>The control plane is a key component of <em><em>TraefikEE</em></em>. It is responsible for storing all cluster data, including events, TLS certificates, and <em><em>Traefik </em></em>configuration. It is also in charge of connecting to the orchestrator to generate the data plane routing configuration.</p><p>Since it is such a critical part of your system,<em><em> TraefikEE</em></em> is designed from the ground up to be fault tolerant: the control plane runs natively in cluster mode without any extra configuration or external Key Value Store. It ensures your data is always available and safe by using an internal distributed store, implemented with raft.</p><h2 id=\"scalable\">Scalable</h2><figure class=\"kg-card kg-embed-card\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/YNKMcussMrM?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><p>The data plane is in charge of forwarding the incoming requests to the applications. It has been designed to scale horizontally at a glance in order to face irregular network loads.</p><p><em><em>TraefikEE</em></em> handles high loads in a blink: just add more nodes to the data plane to handle the additional requests. When the peak is gone, shrink the number of nodes to save resources. Of course, this process can be done automatically using auto-scaling tools.</p><h2 id=\"secure\">Secure</h2><figure class=\"kg-card kg-embed-card\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/rPAcKSiidUo?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><p>By splitting responsibilities between two components, <em><em>TraefikEE</em></em> follows the principle of “Separation of Concerns.”</p><p>To ensure that sensitive information only runs on a closed and safe environment, the control plane is not exposed to the outside. As a result, any malicious action from external traffic will stay stuck in the data plane and your platform will stay safe.</p><p>Moreover, <em><em>TraefikEE</em></em> only relies on encrypted communications between nodes, to add an extra layer of security.</p><h2 id=\"smooth-operations\">Smooth Operations</h2><p>Installing and managing a raft based application is usually a painful experience. Since <em><em>Traefik</em></em> was made popular thanks to its usability and refreshing user experience, we have extended those benefits to TraefikEE.</p><p>For this reason, <em><em>TraefikEE</em></em> comes with an additional CLI that manages to deploy and operate a cluster with several nodes in only one command line. Currently, Kubernetes and Docker Swarm Mode are supported. More platforms will be added soon. Teams will love to use this time-saving tool, <em><em>traefikeectl</em></em> (pronounced “traefikee-cuddle”).</p><p><em><em>TraefikEE</em></em> comes with a dashboard to visualize your cluster nodes configuration and status, in addition to aggregated data plane metrics.</p><p>Commercial support is bundled with TraefikEE. The Traefik engineering team immediately investigates and resolves any critical issues which may arise.</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-55.png\" class=\"kg-image\"></figure><h2 id=\"early-access\">Early Access</h2><p>TraefikEE is available in early access starting today. The registration process is as simple and automated as possible, so don’t fear endless registration forms nor crowded waiting queues before trying it out. Visit our website at <a href=\"https://containous.ghost.io/traefikee/\">https://containo.us/traefikee</a> and get your license key in less than a minute!</p><h2 id=\"traefik-stays-open\">Traefik Stays Open</h2><p><em><em>TraefikEE</em></em> is built on top of <em><em>Traefik</em></em>, that means that Traefik continues to evolve and will stay open source. Nothing changes! We are firm believers in open source, and <em><em>Traefik</em></em> will continue to be our main priority and a community-driven project. We are working on significant changes to Traefik, and <a href=\"https://containous.ghost.io/blog/traefik-spoiler-season-episode-1-3dbcb1f5d8b9/\">recently have shared details</a> on what we have been doing so far. Please stay tuned for full disclosure.</p><h2 id=\"about-containous\">About Containous</h2><p>Containous is the company that supports the development of Traefik. We provide professional services to ensure businesses get the most out of the solution.</p><p>With this new product, Containous continues to innovate and define new ways to access microservice platforms, pushing the limits of automation and scalability.</p>","url":"https://containous.ghost.io/blog/introducing-traefik-enterprise-edition-83b78d09efeb/","canonical_url":null,"uuid":"dd190b78-8f67-41dd-a7f4-6655c3565988","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd7ea61f1db6f0038c74413","reading_time":4}},{"node":{"id":"Ghost__Post__5dd7ee5df1db6f0038c7449a","title":"Traefik 1.6 — Get Our Latest tetedemoine!","slug":"traefik-1-6-get-our-latest-tetedemoine-1859164bf521","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/12/monkshead.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/3e8dd3b9ae78318437039481a8ed57fb/f3583/monkshead.png","srcSet":"/static/3e8dd3b9ae78318437039481a8ed57fb/630fb/monkshead.png 300w,\n/static/3e8dd3b9ae78318437039481a8ed57fb/2a4de/monkshead.png 600w,\n/static/3e8dd3b9ae78318437039481a8ed57fb/f3583/monkshead.png 1200w,\n/static/3e8dd3b9ae78318437039481a8ed57fb/bbee5/monkshead.png 1800w,\n/static/3e8dd3b9ae78318437039481a8ed57fb/7b560/monkshead.png 1931w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"After 3 months of development, we are thrilled to announce the fresh new release of Traefik: 1.6, codename “tetedemoine”.\n\nWe merged 168 pull requests from...","custom_excerpt":"After 3 months of development, we are thrilled to announce the fresh new release of Traefik: 1.6, codename “tetedemoine”.\n\nWe merged 168 pull requests from...","visibility":"public","created_at_pretty":"22 November, 2019","published_at_pretty":"May 7, 2018","updated_at_pretty":"21 May, 2020","created_at":"2019-11-22T14:19:09.000+00:00","published_at":"2018-05-07T14:18:00.000+00:00","updated_at":"2020-05-21T21:53:58.000+00:00","meta_title":"Traefik 1.6 — Get Our Latest tetedemoine!","meta_description":"After 3 months of development, we are thrilled to announce the fresh new release of Traefik: 1.6, codename “tetedemoine”.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Monk’s head [https://en.wikipedia.org/wiki/T%C3%AAte_de_Moine]After 3 months of\ndevelopment, we are thrilled to announce the fresh new release of Traefik: 1.6,\ncodename “tetedemoine”.\n\nWe merged 168 pull requests from more than 43 contributors! A huge thanks goes\nout to each of you who helped on this new version 😘.\n\nThe full changelog can be found here\n[https://github.com/containous/traefik/releases/tag/v1.6.0] but here are some\nnew features we want to highlight:\n\nLet’s Encrypt Wildcard Certificates\nThis was a long-awaited feature; we are proud to announce that we officially\nsupport Let’s Encrypt wildcard certificates generation, thanks to Nicolas Mengin\n[https://github.com/nmengin] (and thanks to xenolf [https://github.com/xenolf] \nto the initial ACMEv2 support in lego [https://github.com/xenolf/lego]). This\ngreatly simplifies certificate management as it avoids generating multiple\nsub-domains certificates. Now, it’s possible to generate root domain\ncertificates, which will work for every sub-domain.\n\nNote: ACME wildcard certificates can only be generated thanks to a DNS-01 \nchallenge:\n\n[acme]\n# ...\n[[acme.domains]]\n  main = \"*.local1.com\"\n  sans = [\"local1.com\"]\n[[acme.domains]]\n  main = \"*.local2.com\"\n# ...\n\nNo more Let’s Encrypt rate limits [https://letsencrypt.org/docs/rate-limits/] :)\n\nOpen Tracing & Zipkin support\nIn microservice architectures, being able to reconstruct the elaborate journeys\nthat transactions take as they propagate across a distributed system has become\na minimum requirement for effective monitoring.\n\n> OpenTracing allows developers of application code, OSS packages, and OSS\nservices to instrument their own code without binding to any particular tracing\nvendor.\nWe received a wonderful gift from Tristan Colgate-McFarlane\n[https://github.com/tcolgate] (with the help of Michaël Matur\n[https://github.com/containous/traefik/pull/2587]) who implemented Open Tracing\nsupport, right into Traefik. Have a look at the documentation\n[https://docs.traefik.io/v1.6/configuration/tracing/] to get more details.\n\nNew Web UI\nJan Kuri [https://github.com/jkuri] & Ludovic Fernandez\n[https://github.com/ldez] revamped our web UI, and we love how shiny it is.\nAmazing job!\n\nTLS Certificates in Kubernetes Secrets\nAnother awaited feature, gopenguin [https://github.com/gopenguin] added\nKubernetes Secrets support for fetching TLS certificates. This enables Traefik\nto read the Kubernetes secret defined in an ingress resource via the\n[https://docs.traefik.io/v1.6/user-guide/kubernetes/#add-a-tls-certificate-to-the-ingress]\ntls\n[https://docs.traefik.io/v1.6/user-guide/kubernetes/#add-a-tls-certificate-to-the-ingress] \nproperty\n[https://docs.traefik.io/v1.6/user-guide/kubernetes/#add-a-tls-certificate-to-the-ingress]\n:\n\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: traefik-web-ui\n  namespace: kube-system\n  annotations:\n    kubernetes.io/ingress.class: traefik\nspec:\n  rules:\n  - host: traefik-ui.minikube\n    http:\n      paths:\n      - backend:\n          serviceName: traefik-web-ui\n          servicePort: 80\n  tls:\n   - secretName: traefik-ui-tls-cert\n\nAccess Logs Filtering\nWith the GDPR [https://en.wikipedia.org/wiki/General_Data_Protection_Regulation] \nbecoming real in EU, logging and storage of (potentially) personally\nidentifiable information now need to be reduced in many organizations.\n\nAfter a public proposal [https://github.com/containous/traefik/issues/2875], \nMichaël Matur [https://github.com/containous/traefik/pull/2587] implemented a\nway to filter the content of access logs based on simple rules. Your can now \nkeep, dropor redactfields and headers from your access logs. Take a look at our\ndocumentation [https://docs.traefik.io/v1.6/configuration/logs/#access-logs] to\nget a deeper insight.\n\nLabels Homogenization\nProbably one of the biggest refactoring of all time on Traefik, Ludovic\nFernandez [https://github.com/ldez] changed the way we manage labels internally,\nin order to homogenize labels on all providers. We now support all labels on all\nproviders, no more specific code on this part 🎉\n\nThis will make it a lot easier to maintain, and we will be able to ship new\nfeatures faster on all providers.\n\n\n--------------------------------------------------------------------------------\n\nBut that’s not all, check the whole changelog\n[https://github.com/containous/traefik/releases/tag/v1.6.0] to get an idea of\nthe awesome work that has been done on this release. Lots of bugs have been\nfixed and we also have been working on background refactoring tasks that will\nhelp us improving Traefik in future releases.\n\n\n--------------------------------------------------------------------------------\n\nGrab the latest binary for Linux, Windows, Mac on Github or get the official\nDocker image!\n\ndocker pull traefik:v1.6.0 (or 1.6.0, v1.6, 1.6, tetedemoine)\ndocker pull traefik:v1.6.0-alpine (or 1.6.0-alpine, v1.6-alpine, 1.6-alpine, tetedemoine-alpine)\n\nThe versioned documentation can be found on https://docs.traefik.io\n[https://docs.traefik.io/].\n\n\n--------------------------------------------------------------------------------\n\nWe are hiring developers and evangelists, try to solve our\npuzzle:containo.us/#jobs !\n\nTraefik is still growing fast, we almost passed 15k stars on Github and 90M\ndownloads!\n\n\n--------------------------------------------------------------------------------\n\nWe would love to hear your feedback on this new release. Join us on GitHub\n[https://github.com/containous/traefik], Twitter\n[https://twitter.com/traefikproxy] or on the Community Forum\n[https://community.containo.us]!","html":"<figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://miro.medium.com/max/3862/1*FA-ZxO_2HjFO9sJpBE1SEw.png\" class=\"kg-image\"><figcaption><a href=\"https://en.wikipedia.org/wiki/T%C3%AAte_de_Moine\" class=\"bf cn hz ia ib ic\" target=\"_blank\" rel=\"noopener\" style=\"box-sizing: inherit; color: inherit; text-decoration: none; -webkit-tap-highlight-color: transparent; background-repeat: repeat-x; background-image: url(&quot;data:image/svg+xml;utf8,<svg preserveAspectRatio=\\&quot;none\\&quot; viewBox=\\&quot;0 0 1 1\\&quot; xmlns=\\&quot;http://www.w3.org/2000/svg\\&quot;><line x1=\\&quot;0\\&quot; y1=\\&quot;0\\&quot; x2=\\&quot;1\\&quot; y2=\\&quot;1\\&quot; stroke=\\&quot;rgba(0, 0, 0, 0.84)\\&quot; /></svg>&quot;); background-size: 1px 1px; background-position: 0px calc(1em + 1px);\">Monk’s head</a></figcaption></figure><p>After 3 months of development, we are thrilled to announce the fresh new release of Traefik: <em><em>1.6</em></em>, codename “<em><em>tetedemoine”</em></em>.</p><p>We merged 168 pull requests from more than 43 contributors! A huge thanks goes out to each of you who helped on this new version 😘.</p><p>The full changelog can be found <a href=\"https://github.com/containous/traefik/releases/tag/v1.6.0\" rel=\"noopener\">here</a> but here are some new features we want to highlight:</p><h2 id=\"let-s-encrypt-wildcard-certificates\">Let’s Encrypt Wildcard Certificates</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-60.png\" class=\"kg-image\"></figure><p>This was a long-awaited feature; we are proud to announce that we officially support Let’s Encrypt wildcard certificates generation, thanks to <a href=\"https://github.com/nmengin\" rel=\"noopener\">Nicolas Mengin</a> (and thanks to <a href=\"https://github.com/xenolf\" rel=\"noopener\">xenolf</a> to the initial ACMEv2 support in <a href=\"https://github.com/xenolf/lego\" rel=\"noopener\">lego</a>). This greatly simplifies certificate management as it avoids generating multiple sub-domains certificates. Now, it’s possible to generate root domain certificates, which will work for every sub-domain.</p><p>Note: ACME wildcard certificates can only be generated thanks to a <code>DNS-01</code> challenge:</p><pre><code class=\"language-toml\">[acme]\n# ...\n[[acme.domains]]\n  main = \"*.local1.com\"\n  sans = [\"local1.com\"]\n[[acme.domains]]\n  main = \"*.local2.com\"\n# ...</code></pre><p>No more <a href=\"https://letsencrypt.org/docs/rate-limits/\" rel=\"noopener\">Let’s Encrypt rate limits</a> :)</p><h2 id=\"open-tracing-zipkin-support\">Open Tracing &amp; Zipkin support</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-61.png\" class=\"kg-image\"></figure><p>In microservice architectures, being able to reconstruct the elaborate journeys that transactions take as they propagate across a distributed system has become a minimum requirement for effective monitoring.</p><blockquote><em><em>OpenTracing allows developers of application code, OSS packages, and OSS services to instrument their own code without binding to any particular tracing vendor.</em></em></blockquote><p>We received a wonderful gift from <a href=\"https://github.com/tcolgate\" rel=\"noopener\">Tristan Colgate-McFarlane</a> (with the help of <a href=\"https://github.com/containous/traefik/pull/2587\" rel=\"noopener\">Michaël Matur</a>) who implemented Open Tracing support, right into Traefik. Have a look at the <a href=\"https://docs.traefik.io/v1.6/configuration/tracing/\" rel=\"noopener\">documentation</a> to get more details.</p><h2 id=\"new-web-ui\">New Web UI</h2><p><a href=\"https://github.com/jkuri\" rel=\"noopener\">Jan Kuri</a> &amp; <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a> revamped our web UI, and we love how shiny it is. Amazing job!</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-62.png\" class=\"kg-image\"></figure><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-63.png\" class=\"kg-image\"></figure><h2 id=\"tls-certificates-in-kubernetes-secrets\">TLS Certificates in Kubernetes Secrets</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-64.png\" class=\"kg-image\"></figure><p>Another awaited feature, <a href=\"https://github.com/gopenguin\" rel=\"noopener\">gopenguin</a> added Kubernetes Secrets support for fetching TLS certificates. This enables Traefik to read the Kubernetes secret defined in an ingress resource <a href=\"https://docs.traefik.io/v1.6/user-guide/kubernetes/#add-a-tls-certificate-to-the-ingress\" rel=\"noopener\">via the </a><code><a href=\"https://docs.traefik.io/v1.6/user-guide/kubernetes/#add-a-tls-certificate-to-the-ingress\" rel=\"noopener\">tls</a></code><a href=\"https://docs.traefik.io/v1.6/user-guide/kubernetes/#add-a-tls-certificate-to-the-ingress\" rel=\"noopener\"> property</a>:</p><pre><code class=\"language-yaml\">apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: traefik-web-ui\n  namespace: kube-system\n  annotations:\n    kubernetes.io/ingress.class: traefik\nspec:\n  rules:\n  - host: traefik-ui.minikube\n    http:\n      paths:\n      - backend:\n          serviceName: traefik-web-ui\n          servicePort: 80\n  tls:\n   - secretName: traefik-ui-tls-cert</code></pre><h2 id=\"access-logs-filtering\">Access Logs Filtering</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-65.png\" class=\"kg-image\"></figure><p>With the <a href=\"https://en.wikipedia.org/wiki/General_Data_Protection_Regulation\" rel=\"noopener\">GDPR</a> becoming real in EU, logging and storage of (potentially) personally identifiable information now need to be reduced in many organizations.</p><p>After a <a href=\"https://github.com/containous/traefik/issues/2875\" rel=\"noopener\">public proposal</a>, <a href=\"https://github.com/containous/traefik/pull/2587\" rel=\"noopener\">Michaël Matur</a> implemented a way to filter the content of access logs based on simple rules. Your can now <code>keep</code>, <code>drop</code>or <code>redact</code>fields and headers from your access logs. Take a look at <a href=\"https://docs.traefik.io/v1.6/configuration/logs/#access-logs\" rel=\"noopener\">our documentation</a> to get a deeper insight.</p><h2 id=\"labels-homogenization\">Labels Homogenization</h2><p>Probably one of the biggest refactoring of all time on Traefik, <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a> changed the way we manage labels internally, in order to homogenize labels on all providers. We now support all labels on all providers, no more specific code on this part 🎉</p><p>This will make it a lot easier to maintain, and we will be able to ship new features faster on all providers.</p><hr><p>But that’s not all, check the whole <a href=\"https://github.com/containous/traefik/releases/tag/v1.6.0\" rel=\"noopener\">changelog</a> to get an idea of the awesome work that has been done on this release. Lots of bugs have been fixed and we also have been working on background refactoring tasks that will help us improving Traefik in future releases.</p><hr><p>Grab the latest binary for Linux, Windows, Mac on Github or get the official Docker image!</p><pre><code class=\"language-shell\">docker pull traefik:v1.6.0 (or 1.6.0, v1.6, 1.6, tetedemoine)\ndocker pull traefik:v1.6.0-alpine (or 1.6.0-alpine, v1.6-alpine, 1.6-alpine, tetedemoine-alpine)</code></pre><p>The <em><em>versioned</em></em> documentation can be found on <a href=\"https://docs.traefik.io/\" rel=\"noopener\">https://docs.traefik.io</a>.</p><hr><p><strong><strong>We are hiring developers and evangelists, try to solve our puzzle:containo.us/#jobs !</strong></strong></p><p>Traefik is still growing fast, we almost passed <strong><strong>15k stars</strong></strong> on Github and <strong><strong>90M downloads</strong></strong>!</p><hr><p>We would love to hear your feedback on this new release. Join us on <a href=\"https://github.com/containous/traefik\" rel=\"noopener\">GitHub</a>, <a href=\"https://twitter.com/traefikproxy\" rel=\"noopener\">Twitter</a> or on the <a href=\"https://community.containo.us\">Community Forum</a>!</p>","url":"https://containous.ghost.io/blog/traefik-1-6-get-our-latest-tetedemoine-1859164bf521/","canonical_url":null,"uuid":"a95156a1-e434-48e4-bd39-d023e4798bc2","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd7ee5df1db6f0038c7449a","reading_time":4}},{"node":{"id":"Ghost__Post__5dd7f2d9f1db6f0038c744d5","title":"Traefik — Commercial Support Is Coming!","slug":"commercial-support-is-coming-for-traefik-a28a2caf1e91","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/11/commercial-support.jpeg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/aa4feb04945f3c4eeb4dc5ee8a427edf/47498/commercial-support.jpg","srcSet":"/static/aa4feb04945f3c4eeb4dc5ee8a427edf/9dc27/commercial-support.jpg 300w,\n/static/aa4feb04945f3c4eeb4dc5ee8a427edf/4fe8c/commercial-support.jpg 600w,\n/static/aa4feb04945f3c4eeb4dc5ee8a427edf/47498/commercial-support.jpg 1200w,\n/static/aa4feb04945f3c4eeb4dc5ee8a427edf/52258/commercial-support.jpg 1800w,\n/static/aa4feb04945f3c4eeb4dc5ee8a427edf/7e3e6/commercial-support.jpg 1900w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"At Containous, we’re excited to share the news — Starting today, we’ll provide commercial support for Træfik.\nWe’re thrilled because beyond the...","custom_excerpt":"At Containous, we’re excited to share the news — Starting today, we’ll provide commercial support for Træfik.\nWe’re thrilled because beyond the...","visibility":"public","created_at_pretty":"22 November, 2019","published_at_pretty":"April 10, 2018","updated_at_pretty":"22 May, 2020","created_at":"2019-11-22T14:38:17.000+00:00","published_at":"2018-04-10T14:38:00.000+00:00","updated_at":"2020-05-22T00:10:52.000+00:00","meta_title":"Traefik — Commercial Support Is Coming!","meta_description":"At Containous, we’re excited to share the news — Starting today, we’ll provide commercial support for Træfik.\nWe’re thrilled because beyond the...","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Announcements","slug":"announcements","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Season 1, Episode 1\n\nAt Containous, we’re excited to share the news — Starting today, we’ll provide\ncommercial support for Træfik.\n\nWe’re thrilled because beyond the mere satisfaction of helping you, it means\nthat Træfik has reached yet another level of maturity. Not only is Træfik this\neasy-to-set-up full-fledged incredible reverse proxy; it is now a project we\ndeem stable enough (roadmap-wise) to assure our future customers that we’ll be\nable to back them up when they most need it.\n\nMaking sure that every professional can rely on Træfik for their infrastructure\nis our top priority.\n\nWe’ve had lots of discussions about the possible plans we could provide to\ncompanies. The SLAs, the price, the ticket system… so many parameters that have\nstirred the fire of passion in our geek-crowded office.\n\nWe have finally settled on a plan that will fit the needs of most companies that\nalready trust Træfik (or are about to), and that need this supplementary\ninsurance — Yes, our team of experts will now be available to make sure every \nedge case of your specific set-up is handled correctly.\n\nSo, what does this standard plan consist of?\n\n * We will support each major version of Træfik (we use semantic versioning\n   [https://semver.org/]) for a whole year after the next one is released. For\n   example, once 2.0 is released, we will continue to support 1.n for one year\n   (n being the latest minor version in that branch).\n * During a major release cycle, in addition to supporting the current version,\n   we will support the previous one. For example, once 1.8 is released, we will\n   continue to support 1.7 (but will stop supporting 1.6) until 1.9 or 2.0 is\n   released.\n * We will start working on any question you have within 2 hours of you\n   contacting us (business hours, CET).\n\nNow we see your question coming, “What happens to the community support?”\n\nOur answer cannot be simpler — nothing changes.\n\n> Open source drives Træfik, and we will keep doing our best to make Træfik one of\nthe most successful open-source projects ever.\nHave we talked about the price yet?\n\nTræfik‘s success is propelled by its simplicity. Simplicity means that it\nreaches a broad audience, from the most straightforward infrastructure to\nintricate clusters with multiple layers of orchestration.\n\nOur goal with the standard plan is to be able to provide support at an\naffordable price so that everyone can benefit from it.\n\nFor this reason, we concurred on a price that will allow a wide range of\ncompanies to subscribe to the standard support plan (without sacrificing other\ninvestments in their program).\n\nStarting at €1,000 per instance of Træfik, you’ll benefit from our services for\na whole year.\n\nThe standard plan can go as far as five supported instances of Træfik running on\nyour infrastructure.\n\nNeed more support?\n\nIf your business requires a customized support plan, you can contact us to\ndiscuss further how we can help.\n\n\n--------------------------------------------------------------------------------\n\nOh … by the way … you’ll find the form to request support on our new website\n[https://info.containo.us/commercial-services]!\n\nHappy Træfik!\n\n\n--------------------------------------------------------------------------------\n\nContainous is the company that helps Træfik be the successful open-source\nproject it is.\n\nFollow Containous [https://twitter.com/containous] & Træfik\n[https://twitter.com/traefikproxy] on Twitter.\n\nVisit our website. [/]\n\nShare your opinion in the comments section.\n\nAnd don’t forget, you’ll always be welcome on the Community Forum\n[https://community.containo.us]!","html":"<!--kg-card-begin: html--><p class=\"post-sub-title\">Season 1, Episode 1</p><!--kg-card-end: html--><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2019/12/image-17.png\" class=\"kg-image\"></figure><p>At Containous, we’re excited to share the news — Starting today, we’ll provide commercial support for Træfik.</p><p>We’re thrilled because beyond the mere satisfaction of helping you, it means that Træfik has reached yet another level of maturity. Not only is Træfik this easy-to-set-up full-fledged incredible reverse proxy; it is now a project we deem stable enough (roadmap-wise) to assure our future customers that we’ll be able to back them up when they most need it.</p><p><strong><strong>Making sure that every professional can rely on Træfik for their infrastructure is our top priority.</strong></strong></p><p>We’ve had lots of discussions about the possible plans we could provide to companies. The SLAs, the price, the ticket system… so many parameters that have stirred the fire of passion in our geek-crowded office.</p><p>We have finally settled on a plan that will fit the needs of most companies that already trust Træfik (or are about to), and that need this supplementary insurance — Yes, our team of experts will now be available to make sure <em><em>every</em></em> edge case of your specific set-up is handled correctly.</p><p>So, what does this standard plan consist of?</p><ul><li>We will support each major version of Træfik (we use <a href=\"https://semver.org/\" rel=\"noopener\">semantic versioning</a>) for a whole year after the next one is released. For example, once 2.0 is released, we will continue to support 1.n for one year (n being the latest minor version in that branch).</li><li><em><em>During</em></em> a major release cycle, in addition to supporting the current version, we will support the previous one. For example, once 1.8 is released, we will continue to support 1.7 (but will stop supporting 1.6) until 1.9 or 2.0 is released.</li><li>We will start working on any question you have within 2 hours of you contacting us (business hours, CET).</li></ul><p>Now we see your question coming, “What happens to the community support?”</p><p>Our answer cannot be simpler — nothing changes.</p><blockquote>Open source drives Træfik, and we will keep doing our best to make Træfik one of the most successful open-source projects ever.</blockquote><p><strong><strong>Have we talked about the price yet?</strong></strong></p><p>Træfik‘s success is propelled by its simplicity. Simplicity means that it reaches a broad audience, from the most straightforward infrastructure to intricate clusters with multiple layers of orchestration.</p><p>Our goal with the standard plan is to be able to provide support at an affordable price so that everyone can benefit from it.</p><p>For this reason, we concurred on a price that will allow a wide range of companies to subscribe to the standard support plan (without sacrificing other investments in their program).</p><p>Starting at €1,000 per instance of Træfik, you’ll benefit from our services for a whole year.</p><p>The standard plan can go as far as five supported instances of Træfik running on your infrastructure.</p><p><strong><strong>Need more support?</strong></strong></p><p>If your business requires a customized support plan, you can contact us to discuss further how we can help.</p><hr><p>Oh … by the way … you’ll find the form to request support on <a href=\"https://info.containo.us/commercial-services\">our new website</a>!</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-67.png\" class=\"kg-image\"></figure><p>Happy Træfik!</p><hr><p>Containous is the company that helps Træfik be the successful open-source project it is.</p><p>Follow <a href=\"https://twitter.com/containous\" rel=\"noopener\">Containous</a> &amp; <a href=\"https://twitter.com/traefikproxy\" rel=\"noopener\">Træfik</a> on Twitter.</p><p><a href=\"https://containous.ghost.io/\">Visit our website.</a></p><p>Share your opinion in the comments section.</p><p>And don’t forget, you’ll always be welcome on the <a href=\"https://community.containo.us\">Community Forum</a>!</p>","url":"https://containous.ghost.io/blog/commercial-support-is-coming-for-traefik-a28a2caf1e91/","canonical_url":null,"uuid":"a5f429a8-314c-4a41-8a56-729799e565ac","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd7f2d9f1db6f0038c744d5","reading_time":3}},{"node":{"id":"Ghost__Post__5dd7f42ef1db6f0038c744ed","title":"Traefik 1.5 — Cancoillotte Is Here!","slug":"traefik-1-5-cancoillotte-is-here-7bd6713ae135","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/12/cancoillote.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/cf79dd685af4acffdc3844ff6e794442/f3583/cancoillote.png","srcSet":"/static/cf79dd685af4acffdc3844ff6e794442/630fb/cancoillote.png 300w,\n/static/cf79dd685af4acffdc3844ff6e794442/2a4de/cancoillote.png 600w,\n/static/cf79dd685af4acffdc3844ff6e794442/f3583/cancoillote.png 1200w,\n/static/cf79dd685af4acffdc3844ff6e794442/60daf/cancoillote.png 1665w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"After 3 months of development, we are thrilled to announce the fresh new release of Traefik: 1.5, codename cancoillotte.\nWe merged 175 pull requests from...","custom_excerpt":"After 3 months of development, we are thrilled to announce the fresh new release of Traefik: 1.5, codename cancoillotte.\nWe merged 175 pull requests from...","visibility":"public","created_at_pretty":"22 November, 2019","published_at_pretty":"January 24, 2018","updated_at_pretty":"22 May, 2020","created_at":"2019-11-22T14:43:58.000+00:00","published_at":"2018-01-24T14:40:00.000+00:00","updated_at":"2020-05-22T00:35:30.000+00:00","meta_title":"Traefik 1.5 — Cancoillotte Is Here!","meta_description":"After 3 months of development, we are thrilled to announce the fresh new release of Traefik: 1.5, codename cancoillotte.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Try to pronounce it right [https://www.youtube.com/watch?v=kOnUeb1Ck-8] ;)After\n3 months of development, we are thrilled to announce the fresh new release of\nTraefik: 1.5, codename cancoillotte [https://en.wikipedia.org/wiki/Cancoillotte]\n.\n\nWe merged 175 pull requests from more than 67 contributors ! Huge thanks goes to\nall of you who helped on this new version 😘.\n\nThe full changelog can be found here\n[https://github.com/containous/traefik/releases/tag/v1.5.0] but here are some\nnew features we want to highlight:\n\nLet’s Encrypt HTTP Challenge\nOn January the 9th, a little surprise appeared on our Twitter timeline:\n\n2018.01.09 Issue with TLS-SNI-01 and Shared Hosting Infrastructure[Update\n2018-01-18: The most up-to-date summary is at IMPORTANT: What you need to know\nabout TLS-SNI validation issues] At approximately 5 p.m. Pacific time on\nJanuary\n9, 2018, we received a report from Frans Rosén of Detectify outlining a method\nof exploiting some shared hosting infrastructures to…joshLet's Encrypt\nCommunity\nSupport\n[https://community.letsencrypt.org/t/2018-01-09-issue-with-tls-sni-01-and-shared-hosting-infrastructure/49996?source=post_page-----7bd6713ae135----------------------]\nAnd then:\n\n2018.01.11 Update Regarding ACME TLS-SNI and Shared Hosting Infrastructure\n[Update 2018-01-18: The most up-to-date summary is at IMPORTANT: What you need\nto know about TLS-SNI validation issues] Please see this post for background\ninformation. The last 48 hours have been a busy time for Let’s Encrypt staff.\nWe’ve been working hard to come up with a plan for ACME TLS-SNI …joshLet's\nEncrypt Community Support\n[https://community.letsencrypt.org/t/2018-01-11-update-regarding-acme-tls-sni-and-shared-hosting-infrastructure/50188?source=post_page-----7bd6713ae135----------------------]\nTL;DR: Let’s Encrypt permanently disabled TLS-SNI-0x challenge due to a\nvulnerability.\n\nAnd yes, Traefik was using TLS-SNI-01 challenge by default. Ouch…\n\nEven though we were at the end of a release cycle (1.5.0-rc4 was already out),\nwe decided to push a new release candidate in emergency to add HTTP-01 challenge\nsupport. This fix was big enough to end in the new 1.5 and not as a bug fix on \n1.4 branch. Users will need to enable it with the new acme.httpChallenge \nsection.\n\nStats Collection\nFew months ago, we created a proposal\n[https://github.com/containous/traefik/issues/2369] in which we came up with the\nidea of collecting stats from running Traefik instances:\n\n> As you may know, the Traefik core development team is quite small and as with a\nlot of open source projects, we lack time and resources. As a consequence, we\nhave to carefully choose which tasks and features need our attention. As a\nresult, we usually invest our time on features needed or requested by most of\nthe community. In order to efficiently do this, we have to know how our\ncommunity uses Traefik.\nAs this is a super sensitive topic, we preferred to open a public debate, and\nbuild a transparent and trusted solution with the community. We are excited to\nsay that we quickly reached a consensus, and Ludovic Fernandez\n[https://github.com/ldez] successfully implemented a safe configuration export\nmechanism.\n\nWe chose to make it opt-in, which means that no data will be sent without\nenabling this feature. If enabled, only anonymous configuration options will be\nsent to a collecting server.\n\nWe really hope that all of our efforts will pay off, and that you will help us\nimprove Traefik enabling this feature in your infrastructure:\n\nsendAnonymousUsage = true\n\nWe invite you to read the constructive discussion\n[https://github.com/containous/traefik/issues/2369] that led to this new feature\nand the documentation to get more details. Many thanks to the community for its\npositive feedback!\n\nDynamic TLS Certificates\nNicolas Mengin [https://github.com/nmengin] did a great job at making TLS\ncertificates management dynamic. You can now add or remove TLS certificates\nwhile Traefik is started! In addition to backends and frontends, there is now a\ndedicated tls section in the dynamic configuration. Let’s declare two new\ncertificates using the file provider, you can now add a new tls section in your\nTOML:\n\n[frontends]\n...\n[backends]\n...\n\n# HTTPS certificates\n[[tls]]\n  entryPoints = [\"https\"]\n  [tls.certificate]\n    certFile = \"path/to/my.cert\"\n    keyFile = \"path/to/my.key\"\n\n[[tls]]\n  entryPoints = [\"https\"]\n  [tls.certificate]\n  certFile = \"path/to/my/other.cert\"\n  keyFile = \"path/to/my/other.key\"\n\nEach change of this file will make Traefik reload its TLS certificates. You can\nalso split your configuration into multiple files if you prefer.\n\nRate Limiting\nWe received a wonderful gift from Ben Parli [https://github.com/bparli] who\nadded rate limiting by frontend. You can even add multiple sets of rates to each\nfrontend. Here is an example taken from the documentation\n[https://docs.traefik.io/]:\n\n[frontends]\n    [frontends.frontend1]\n    entrypoints = [\"http\"]\n    backend = \"backend1\"\n        [frontends.frontend1.routes.test_1]\n        rule = \"Path:/\"\n    [frontends.frontend1.ratelimit]\n    extractorfunc = \"client.ip\"\n        [frontends.frontend1.ratelimit.rateset.rateset1]\n        period = \"10s\"\n        average = 100\n        burst = 200\n        [frontends.frontend1.ratelimit.rateset.rateset2]\n        period = \"3s\"\n        average = 5\n        burst = 10\n\n> In the above example, frontend1 is configured to limit requests by the client’s\nip address. An average of 5 requests every 3 seconds is allowed and an average\nof 100 requests every 10 seconds. These can “burst” up to 10 and 200 in each\nperiod respectively.\nAzure Service Fabric Support\nLawrence Gripper [https://github.com/lawrencegripper] and Joni Collinge\n[https://github.com/jjcollinge] from Microsoft made a great contribution (with\nthe help of Ludovic Fernandez [https://github.com/ldez]) adding Azure Service\nFabric [https://azure.microsoft.com/en-us/services/service-fabric/] support to\nTraefik.\n\n> Azure Service Fabric is a distributed systems platform that makes it easy to\npackage, deploy, and manage scalable and reliable microservices and containers.\nThis new provider uses labels to configure how services are exposed through\nTraefik using the services ServiceManifest.xml file.\n\nHave a look at the documentation [https://docs.traefik.io/], we will give more\nupdate on this soon!\n\nIn A Nutshell\nDaniel Tomcej [https://github.com/dtomcej] added Kubernetes annotations and\nDocker labels for security headers, Nicolas Mengin [https://github.com/nmengin] \nadded support to etcd v3, our great Manuel Zapf [https://github.com/SantoDE] \nimplemented the redirection to another entryPoint per frontend.\nThanks to Aditya C S [https://github.com/adityacs], Traefik can now export its\nmetrics to InfluxDB. Michael Matur [https://github.com/mmatur] and Ludovic\nFernandez [https://github.com/ldez] did a great job adding multi-versioning to\nour documentation [https://docs.traefik.io/]. Julien Salleyron\n[https://github.com/juliens] refactored the web provider into API/Dashboard,\nping, metric and Rest Provider.\n\nBut that’s not all, check the whole changelog\n[https://github.com/containous/traefik/releases/tag/v1.5.0] to get an idea of\nthe awesome work that has been done on this release. Lots of bugs have been\nfixed and we also have been working on background refactoring tasks that will\nhelp us improving Traefik in future releases.\n\n\n--------------------------------------------------------------------------------\n\nGrab the latest binary for Linux, Windows, Mac on Github or get the official\nDocker image!\n\ndocker pull traefik:v1.5.0 (or 1.5.0, v1.5, 1.5, cancoillotte)\ndocker pull traefik:v1.5.0-alpine (or 1.5.0-alpine, v1.5-alpine, 1.5-alpine, cancoillotte-alpine)\n\nThe versioned documentation can be found on https://docs.traefik.io\n[https://docs.traefik.io/].\n\n\n--------------------------------------------------------------------------------\n\nWe are hiring developers and evangelists, try to solve our puzzle:\ncontaino.us/#jobs !\n\nTraefik is still growing fast, we just passed 12k stars on Github and 42M\ndownloads!\n\n\n--------------------------------------------------------------------------------\n\nWe would love to hear your feedback on this new release. Join us on GitHub\n[https://github.com/containous/traefik], Twitter\n[https://twitter.com/traefikproxy] or on the Community Forum\n[https://community.containo.us]!","html":"<figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://miro.medium.com/max/3330/1*bLR_qbi3qufT5w0EWxVGrg.png\" class=\"kg-image\"><figcaption>Try to <a href=\"https://www.youtube.com/watch?v=kOnUeb1Ck-8\" class=\"bf cn hz ia ib ic\" target=\"_blank\" rel=\"noopener\" style=\"box-sizing: inherit; color: inherit; text-decoration: none; -webkit-tap-highlight-color: transparent; background-repeat: repeat-x; background-image: url(&quot;data:image/svg+xml;utf8,<svg preserveAspectRatio=\\&quot;none\\&quot; viewBox=\\&quot;0 0 1 1\\&quot; xmlns=\\&quot;http://www.w3.org/2000/svg\\&quot;><line x1=\\&quot;0\\&quot; y1=\\&quot;0\\&quot; x2=\\&quot;1\\&quot; y2=\\&quot;1\\&quot; stroke=\\&quot;rgba(0, 0, 0, 0.84)\\&quot; /></svg>&quot;); background-size: 1px 1px; background-position: 0px calc(1em + 1px);\">pronounce it right</a> ;)</figcaption></figure><p>After 3 months of development, we are thrilled to announce the fresh new release of Traefik: <em><em>1.5</em></em>, codename <a href=\"https://en.wikipedia.org/wiki/Cancoillotte\" rel=\"noopener\"><em><em>cancoillotte</em></em></a>.</p><p>We merged 175 pull requests from more than 67 contributors ! Huge thanks goes to all of you who helped on this new version 😘.</p><p>The full changelog can be found <a href=\"https://github.com/containous/traefik/releases/tag/v1.5.0\" rel=\"noopener\">here</a> but here are some new features we want to highlight:</p><h2 id=\"let-s-encrypt-http-challenge\">Let’s Encrypt HTTP Challenge</h2><p>On January the 9th, a little surprise appeared on our Twitter timeline:</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://community.letsencrypt.org/t/2018-01-09-issue-with-tls-sni-01-and-shared-hosting-infrastructure/49996?source=post_page-----7bd6713ae135----------------------\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">2018.01.09 Issue with TLS-SNI-01 and Shared Hosting Infrastructure</div><div class=\"kg-bookmark-description\">[Update 2018-01-18: The most up-to-date summary is at IMPORTANT: What you need to know about TLS-SNI validation issues] At approximately 5 p.m. Pacific time on January 9, 2018, we received a report from Frans Rosén of Detectify outlining a method of exploiting some shared hosting infrastructures to…</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://aws1.discourse-cdn.com/letsencrypt/optimized/3X/c/a/ca6c06ea1ea201324bba7048c6841ce60236468d_2_180x180.png\"><span class=\"kg-bookmark-author\">josh</span><span class=\"kg-bookmark-publisher\">Let's Encrypt Community Support</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://aws1.discourse-cdn.com/letsencrypt/original/3X/4/c/4c5760509a18adfc3bc657ba8bd49b301faaa66b.png\"></div></a></figure><p>And then:</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://community.letsencrypt.org/t/2018-01-11-update-regarding-acme-tls-sni-and-shared-hosting-infrastructure/50188?source=post_page-----7bd6713ae135----------------------\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">2018.01.11 Update Regarding ACME TLS-SNI and Shared Hosting Infrastructure</div><div class=\"kg-bookmark-description\">[Update 2018-01-18: The most up-to-date summary is at IMPORTANT: What you need to know about TLS-SNI validation issues] Please see this post for background information. The last 48 hours have been a busy time for Let’s Encrypt staff. We’ve been working hard to come up with a plan for ACME TLS-SNI …</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://aws1.discourse-cdn.com/letsencrypt/optimized/3X/c/a/ca6c06ea1ea201324bba7048c6841ce60236468d_2_180x180.png\"><span class=\"kg-bookmark-author\">josh</span><span class=\"kg-bookmark-publisher\">Let's Encrypt Community Support</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://aws1.discourse-cdn.com/letsencrypt/original/3X/4/c/4c5760509a18adfc3bc657ba8bd49b301faaa66b.png\"></div></a></figure><p><strong><strong>TL;DR</strong></strong>: Let’s Encrypt permanently disabled <code>TLS-SNI-0x</code> challenge due to a vulnerability.</p><p>And yes, Traefik was using <code>TLS-SNI-01</code> challenge by default. Ouch…</p><p>Even though we were at the end of a release cycle (<em><em>1.5.0-rc4</em></em> was already out), we decided to push a new release candidate in emergency to add <code>HTTP-01</code> challenge support. This fix was big enough to end in the new <em><em>1.5</em></em> and not as a bug fix on <em><em>1.4</em></em> branch. Users will need to enable it with the new <code>acme.httpChallenge</code> section.</p><h2 id=\"stats-collection\">Stats Collection</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-68.png\" class=\"kg-image\"></figure><p>Few months ago, we created <a href=\"https://github.com/containous/traefik/issues/2369\" rel=\"noopener\">a proposal</a> in which we came up with the idea of collecting stats from running Traefik instances:</p><blockquote><em><em>As you may know, the Traefik core development team is quite small and as with a lot of open source projects, we lack time and resources. As a consequence, we have to carefully choose which tasks and features need our attention. As a result, we usually invest our time on features needed or requested by most of the community. In order to efficiently do this, we have to know how our community uses Traefik.</em></em></blockquote><p>As this is a super sensitive topic, we preferred to open a public debate, and build a transparent and trusted solution with the community. We are excited to say that we quickly reached a consensus, and <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a> successfully implemented a safe configuration export mechanism.</p><p><strong><strong>We chose to make it opt-in</strong></strong>, which means that no data will be sent without enabling this feature. If enabled, <strong><strong>only anonymous configuration</strong></strong> options will be sent to a collecting server.</p><p>We really hope that all of our efforts will pay off, and that you will <strong><strong>help us improve Traefik enabling this feature</strong></strong> in your infrastructure:</p><pre><code>sendAnonymousUsage = true</code></pre><p><em><em>We invite you to read </em></em><a href=\"https://github.com/containous/traefik/issues/2369\" rel=\"noopener\"><em><em>the constructive discussion</em></em></a><em><em> that led to this new feature and the documentation to get more details. Many thanks to the community for its positive feedback!</em></em></p><h2 id=\"dynamic-tls-certificates\">Dynamic TLS Certificates</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-69.png\" class=\"kg-image\"></figure><p><a href=\"https://github.com/nmengin\" rel=\"noopener\">Nicolas Mengin</a> did a great job at making TLS certificates management dynamic. You can now add or remove TLS certificates while Traefik is started! In addition to <code>backends</code> and <code>frontends</code>, there is now a dedicated <code>tls</code> section in the dynamic configuration. Let’s declare two new certificates using the file provider, you can now add a new <code>tls</code> section in your TOML:</p><pre><code class=\"language-toml\">[frontends]\n...\n[backends]\n...\n\n# HTTPS certificates\n[[tls]]\n  entryPoints = [\"https\"]\n  [tls.certificate]\n    certFile = \"path/to/my.cert\"\n    keyFile = \"path/to/my.key\"\n\n[[tls]]\n  entryPoints = [\"https\"]\n  [tls.certificate]\n  certFile = \"path/to/my/other.cert\"\n  keyFile = \"path/to/my/other.key\"</code></pre><p>Each change of this file will make Traefik reload its TLS certificates. You can also split your configuration into multiple files if you prefer.</p><h2 id=\"rate-limiting\">Rate Limiting</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-70.png\" class=\"kg-image\"></figure><p>We received a wonderful gift from <a href=\"https://github.com/bparli\" rel=\"noopener\">Ben Parli</a> who added rate limiting by frontend. You can even add multiple sets of rates to each frontend. Here is an example taken from <a href=\"https://docs.traefik.io/\">the documentation</a>:</p><pre><code class=\"language-toml\">[frontends]\n    [frontends.frontend1]\n    entrypoints = [\"http\"]\n    backend = \"backend1\"\n        [frontends.frontend1.routes.test_1]\n        rule = \"Path:/\"\n    [frontends.frontend1.ratelimit]\n    extractorfunc = \"client.ip\"\n        [frontends.frontend1.ratelimit.rateset.rateset1]\n        period = \"10s\"\n        average = 100\n        burst = 200\n        [frontends.frontend1.ratelimit.rateset.rateset2]\n        period = \"3s\"\n        average = 5\n        burst = 10</code></pre><blockquote><em><em>In the above example, <code>frontend1</code> is configured to limit requests by the client’s ip address. An average of 5 requests every 3 seconds is allowed and an average of 100 requests every 10 seconds. These can “burst” up to 10 and 200 in each period respectively.</em></em></blockquote><h2 id=\"azure-service-fabric-support\">Azure Service Fabric Support</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-71.png\" class=\"kg-image\"></figure><p><a href=\"https://github.com/lawrencegripper\" rel=\"noopener\">Lawrence Gripper</a> and <a href=\"https://github.com/jjcollinge\" rel=\"noopener\">Joni Collinge</a> from Microsoft made a great contribution (with the help of <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a>) adding <a href=\"https://azure.microsoft.com/en-us/services/service-fabric/\" rel=\"noopener\">Azure Service Fabric</a> support to Traefik.</p><blockquote><em><em>Azure Service Fabric is a distributed systems platform that makes it easy to package, deploy, and manage scalable and reliable microservices and containers.</em></em></blockquote><p>This new provider uses labels to configure how services are exposed through Traefik using the services <code>ServiceManifest.xml</code> file.</p><p>Have a look at <a href=\"https://docs.traefik.io/\">the documentation</a>, we will give more update on this soon!</p><h2 id=\"in-a-nutshell\">In A Nutshell</h2><p><a href=\"https://github.com/dtomcej\" rel=\"noopener\">Daniel Tomcej</a> added Kubernetes annotations and Docker labels for security headers, <a href=\"https://github.com/nmengin\" rel=\"noopener\">Nicolas Mengin</a> added support to etcd v3, our great <a href=\"https://github.com/SantoDE\" rel=\"noopener\">Manuel Zapf</a> implemented the redirection to another entryPoint per frontend.<br>Thanks to <a href=\"https://github.com/adityacs\" rel=\"noopener\">Aditya C S</a>, Traefik can now export its metrics to InfluxDB. <a href=\"https://github.com/mmatur\" rel=\"noopener\">Michael Matur</a> and <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a> did a great job adding multi-versioning to our <a href=\"https://docs.traefik.io/\">documentation</a>. <a href=\"https://github.com/juliens\" rel=\"noopener\">Julien Salleyron</a> refactored the web provider into API/Dashboard, ping, metric and Rest Provider.</p><p>But that’s not all, check the whole <a href=\"https://github.com/containous/traefik/releases/tag/v1.5.0\" rel=\"noopener\">changelog</a> to get an idea of the awesome work that has been done on this release. Lots of bugs have been fixed and we also have been working on background refactoring tasks that will help us improving Traefik in future releases.</p><hr><p>Grab the latest binary for Linux, Windows, Mac on Github or get the official Docker image!</p><pre><code class=\"language-shell\">docker pull traefik:v1.5.0 (or 1.5.0, v1.5, 1.5, cancoillotte)\ndocker pull traefik:v1.5.0-alpine (or 1.5.0-alpine, v1.5-alpine, 1.5-alpine, cancoillotte-alpine)</code></pre><p>The <em><em>versioned</em></em> documentation can be found on <a href=\"https://docs.traefik.io/\">https://docs.traefik.io</a>.</p><hr><p><strong><strong>We are hiring developers and evangelists, try to solve our puzzle: containo.us/#jobs !</strong></strong></p><p>Traefik is still growing fast, we just passed <strong><strong>12k stars</strong></strong> on Github and <strong><strong>42M downloads</strong></strong>!</p><hr><p>We would love to hear your feedback on this new release. Join us on <a href=\"https://github.com/containous/traefik\" rel=\"noopener\">GitHub</a>, <a href=\"https://twitter.com/traefikproxy\" rel=\"noopener\">Twitter</a> or on the <a href=\"https://community.containo.us\">Community Forum</a>!</p>","url":"https://containous.ghost.io/blog/traefik-1-5-cancoillotte-is-here-7bd6713ae135/","canonical_url":null,"uuid":"e186e7de-b234-490d-a1b0-4489f46bc2fe","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd7f42ef1db6f0038c744ed","reading_time":5}},{"node":{"id":"Ghost__Post__5dd7f6a7f1db6f0038c74518","title":"Solving containous/jobs","slug":"solving-containous-jobs-b4a5cae04f3","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/12/Screenshot-2019-12-02-at-19.58.56-1.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/545cb389b120183dbe3a86f574d6b6cc/fd70c/Screenshot-2019-12-02-at-19.58.56-1.png","srcSet":"/static/545cb389b120183dbe3a86f574d6b6cc/630fb/Screenshot-2019-12-02-at-19.58.56-1.png 300w,\n/static/545cb389b120183dbe3a86f574d6b6cc/fd70c/Screenshot-2019-12-02-at-19.58.56-1.png 533w","sizes":"(max-width: 533px) 100vw, 533px"}}},"excerpt":"Last year, we had this idea to create a little puzzle to hire new engineers on Traefik...","custom_excerpt":"Last year, we had this idea to create a little puzzle to hire new engineers on Traefik...","visibility":"public","created_at_pretty":"22 November, 2019","published_at_pretty":"November 14, 2017","updated_at_pretty":"22 May, 2020","created_at":"2019-11-22T14:54:31.000+00:00","published_at":"2017-11-14T14:54:00.000+00:00","updated_at":"2020-05-22T00:22:30.000+00:00","meta_title":"Solving containous/jobs","meta_description":"Last year, we had this idea to create a little puzzle to hire new engineers on Traefik...","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Company","slug":"company","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Last year, we had this idea to create a little puzzle to hire new engineers on \nTraefik [/traefik/].\n\n> ⚡️We are hiring⚡️\n$ docker run containous/jobs\n\n— Traefik (@traefik) December 15, 2016\n[https://twitter.com/traefik/status/809435733949878272?ref_src=twsrc%5Etfw]\nAs we are deeply linked to Docker on this project, we thought it would be great\nto focus on technical challenges around containers. So we pushed a Docker image:\n\n$ docker run containous/jobs\nDo you like puzzles ?\n\nFew people informed us that our image must have an issue as it was only printing \nDo you like puzzles ?. Yup. That was the whole point. Something was indeed\nhidden here, and you had to find it 😉\n\nLet’s jump into it!\n\nFirst of all, how is made containous/job ?\n\nNot really helpful… But there seems to be two files copied during the build\nprocess. docker inspect containous/jobs shows that /default is the entrypoint.\nAnother file should be hidden there 😃\n\nIf we export the container file system using docker export\n[https://docs.docker.com/engine/reference/commandline/export/], we see that\nthere is our /default binary, and there is also, surprisingly, another binary: \n/secret. Wow ! Let’s test something…\n\n> Lineception… Kill me… Just kill me…\nOK, so our container is not exiting anymore, until we press enter and then we\nget Game over :’(. Hum, not that easy 🤔\n\n> Kill me… Just kill me…\nIf we try to kill the container, it exits, but this time, without printing Game\nover :’(. Ha ! Let’s try with another kill signals then ! After few tries, you\nwill end up using SIGABRT:\n\nA wonderful stack trace is now on the screen. We can see that this binary has\nbeen created using go 1.7, and that the repository of the code is \nbitbucket.org/containous/jobs. Wait a minute… What ?\n\nWE JUST FOUND WHERE IS HOSTED THE SOURCE CODE !!!\n\nDamn private repository…\n\nLet’s start from the beginning. If we look closely at each step, we used every\npiece of clue given by our Docker image. Except one:\n\n> Lineception…\nLineception = line + inception\n\nWhich line of our code is called when calling kill with SIGABRT?\n\nbitbucket.org/containous/jobs/cmd/secret/secret.go:15\n\nAnd now:\n\nAnd that’s it!\n\nIt seems that the final part was a bit too complex as a lot a people found\nalternatives solutions. Many of you discovered a base 64 encoded string right\ninto the binary:\n\nV2VsbCBkb25lIQ0KV2Ugd291bGQgbG92ZSB0byBrbm93IG1vcmUgYWJvdXQgeW91Lg0KUGxlYXNlIHNlbmQgdXMgYSBtYWlsIGF0IGpvYnMgYXQgY29udGFpbm8udXMgYW5kIHRlbGwgdXMgaG93IHlvdSBzb2x2ZWQgdGhpcyBwdXp6bGUgYW5kIHdoeSB5b3Ugd2FudCB0byB3b3JrIGF0IENvbnRhaW5vdXMgOikNCig1MCB3b3JkcyBtYXgpDQo=\n\nAnd yes, once decoded, you get straight away:\n\nWell done!\nWe would love to know more about you.\n...\n\nIn fact, very few people found the right solution using the line number. I would\nlike to congratulate Cédric Nisio\n[https://medium.com/u/f9295502fb9b?source=post_page-----b4a5cae04f3----------------------] \nwho was the first who solved this puzzle. Well done 👏👏👏\n\n\n--------------------------------------------------------------------------------\n\nWe really loved to read your feedback and answers on this little game and we\nthink it’s now time to try something new 😉\n\n> Thanks to Vincent Demeester.","html":"<p>Last year, we had this idea to create a little puzzle to hire new engineers on <a href=\"https://containous.ghost.io/traefik/\">Traefik</a>.</p><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">⚡️We are hiring⚡️<br>$ docker run containous/jobs</p>&mdash; Traefik (@traefik) <a href=\"https://twitter.com/traefik/status/809435733949878272?ref_src=twsrc%5Etfw\">December 15, 2016</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><p>As we are deeply linked to Docker on this project, we thought it would be great to focus on technical challenges around containers. So we pushed a Docker image:</p><pre><code class=\"language-shell\">$ docker run containous/jobs\nDo you like puzzles ?</code></pre><p>Few people informed us that our image must have an issue as it was only printing <em><em>Do you like puzzles ?</em></em>. Yup. That was the whole point. Something was indeed hidden here, and you had to find it 😉</p><p>Let’s jump into it!</p><p>First of all, how is made <code>containous/job</code> ?</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-72.png\" class=\"kg-image\"></figure><p>Not really helpful… But there seems to be two files copied during the build process. <code>docker inspect containous/jobs</code> shows that <code>/default</code> is the entrypoint. Another file should be hidden there 😃</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-73.png\" class=\"kg-image\"></figure><p>If we export the container file system using <code><a href=\"https://docs.docker.com/engine/reference/commandline/export/\" rel=\"noopener\">docker export</a></code>, we see that there is our <code>/default</code> binary, and there is also, surprisingly, another binary: <code>/secret</code>. Wow ! Let’s test something…</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-74.png\" class=\"kg-image\"></figure><blockquote><em><em><em>Lineception… Kill me… Just kill me…</em></em></em></blockquote><p>OK, so our container is not exiting anymore, until we press enter and then we get <em><em>Game over :’(</em></em>. Hum, not that easy 🤔</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-75.png\" class=\"kg-image\"></figure><blockquote><em><em><em>Kill me… Just kill me…</em></em></em></blockquote><p>If we try to kill the container, it exits, but this time, without printing <em><em>Game over :’(. </em></em>Ha ! Let’s try with another kill signals then ! After few tries, you will end up using <code>SIGABRT</code>:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-76.png\" class=\"kg-image\"></figure><p>A wonderful stack trace is now on the screen. We can see that this binary has been created using go 1.7, and that the repository of the code is <code>bitbucket.org/containous/jobs.</code> Wait a minute… What ?</p><p><strong><strong>WE JUST FOUND WHERE IS HOSTED THE SOURCE CODE !!!</strong></strong></p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-77.png\" class=\"kg-image\"></figure><p>Damn private repository…</p><p>Let’s start from the beginning. If we look closely at each step, we used every piece of clue given by our Docker image. Except one:</p><blockquote><em><em><em>Lineception…</em></em></em></blockquote><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-78.png\" class=\"kg-image\"></figure><p><strong><strong>Lineception = line + inception</strong></strong></p><p>Which line of our code is called when calling kill with <code>SIGABRT</code>?</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-79.png\" class=\"kg-image\"></figure><pre><code>bitbucket.org/containous/jobs/cmd/secret/secret.go:15</code></pre><p>And now:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-80.png\" class=\"kg-image\"></figure><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/bingo.gif\" class=\"kg-image\"></figure><p>And that’s it!</p><p>It seems that the final part was a bit too complex as a lot a people found alternatives solutions. Many of you discovered a base 64 encoded string right into the binary:</p><pre><code>V2VsbCBkb25lIQ0KV2Ugd291bGQgbG92ZSB0byBrbm93IG1vcmUgYWJvdXQgeW91Lg0KUGxlYXNlIHNlbmQgdXMgYSBtYWlsIGF0IGpvYnMgYXQgY29udGFpbm8udXMgYW5kIHRlbGwgdXMgaG93IHlvdSBzb2x2ZWQgdGhpcyBwdXp6bGUgYW5kIHdoeSB5b3Ugd2FudCB0byB3b3JrIGF0IENvbnRhaW5vdXMgOikNCig1MCB3b3JkcyBtYXgpDQo=</code></pre><p>And yes, once decoded, you get straight away:</p><pre><code>Well done!\nWe would love to know more about you.\n...</code></pre><p>In fact, very few people found the right solution using the line number. I would like to congratulate <a href=\"https://medium.com/u/f9295502fb9b?source=post_page-----b4a5cae04f3----------------------\" rel=\"noopener\">Cédric Nisio</a> who was the first who solved this puzzle. Well done 👏👏👏</p><hr><p>We really loved to read your feedback and answers on this little game and we think it’s now time to try something new 😉</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-81.png\" class=\"kg-image\"></figure><blockquote>Thanks to Vincent Demeester.</blockquote>","url":"https://containous.ghost.io/blog/solving-containous-jobs-b4a5cae04f3/","canonical_url":null,"uuid":"ec7ab5b3-08db-4187-a72e-367f021388d3","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd7f6a7f1db6f0038c74518","reading_time":3}},{"node":{"id":"Ghost__Post__5dd7f800f1db6f0038c74558","title":"Traefik 1.4 — Roquefort Is Here, And It’s Huge!","slug":"traefik-1-4-roquefort-is-here-and-its-huge-c26654aba80f","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/12/rokefort.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/32b92a60abdec7024b407f34666c1b8f/f3583/rokefort.png","srcSet":"/static/32b92a60abdec7024b407f34666c1b8f/630fb/rokefort.png 300w,\n/static/32b92a60abdec7024b407f34666c1b8f/2a4de/rokefort.png 600w,\n/static/32b92a60abdec7024b407f34666c1b8f/f3583/rokefort.png 1200w,\n/static/32b92a60abdec7024b407f34666c1b8f/bbee5/rokefort.png 1800w,\n/static/32b92a60abdec7024b407f34666c1b8f/ed396/rokefort.png 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"After 4 months of intense development, we are proud to announce the fresh new release of Traefik: 1.4, codename roquefort.\nThis release is quite big...","custom_excerpt":"After 4 months of intense development, we are proud to announce the fresh new release of Traefik: 1.4, codename roquefort.\nThis release is quite big...","visibility":"public","created_at_pretty":"22 November, 2019","published_at_pretty":"October 17, 2017","updated_at_pretty":"22 May, 2020","created_at":"2019-11-22T15:00:16.000+00:00","published_at":"2017-10-17T15:00:00.000+00:00","updated_at":"2020-05-22T00:32:48.000+00:00","meta_title":"Traefik 1.4 — Roquefort Is Here, And It’s Huge!","meta_description":"After 4 months of intense development, we are proud to announce the fresh new release of Traefik: 1.4, codename roquefort.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Rock Fort…After 4 months of intense development, we are proud to announce the\nfresh new release of Traefik: 1.4, codename roquefort\n[https://en.wikipedia.org/wiki/Roquefort].\n\nThis release is quite big: we merged 250\n[https://github.com/containous/traefik/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A1.4%20is%3Amerged] \npull requests from more than 60 contributors ! Huge thanks goes to all of you\nwho helped on this new version 😘.\n\nThe full changelog can be found here\n[https://github.com/containous/traefik/releases/tag/v1.4.0] but here are some\nnew features we want to highlight:\n\nCustom Headers & Security\nOur awesome Daniel Tomcej [https://github.com/dtomcej] did some hard work on\nheaders. We now have a way to customize headers:\n\n> Custom headers can be configured through the frontends, to add headers to either\nrequests or responses that match the frontend’s rules. This allows for setting\nheaders such as X-Script-Name to be added to the request, or custom headers to\nbe added to the response.\nIf that was not enough, Daniel added security options on headers:\n\n> Security related headers (HSTS headers, SSL redirection, Browser XSS filter,\netc) can be added and configured per frontend in a similar manner to the custom\nheaders above. This functionality allows for some easy security features to\nquickly be set.\nMulti arch\nThanks to Ludovic Fernandez [https://github.com/ldez], we now provide\n[https://github.com/docker-library/official-images/blob/master/library/traefik] \nthe official Docker image on multiple architectures: amd64, arm64v8, arm32v6.\nThe best part is that as of mid-September, Docker supports transparent\nmulti-arch on official images. This allows to use docker run traefik \ntransparently either on a amd64 or a arm64v8 Docker daemon. We plan to add a\nWindows based official image in the future.\n\nAuthentication Forward\nAs a first step to a generic authentication mechanism\n[https://github.com/containous/traefik/issues/593], Daniel Rampelt\n[https://github.com/drampelt] followed by Ludovic Fernandez\n[https://github.com/ldez], added a way to forward authentication to a delegate\nserver. Have a look at both [https://github.com/containous/traefik/pull/1972] \nPRs [https://github.com/containous/traefik/pull/2132] to get more details on\nthis.\n\nProxy Protocol\nTraefik is often used behind another load-balancer like an ELB\n[https://aws.amazon.com/elasticloadbalancing]. In this case, Traefik now\nsupports Proxy Protocol, that allows to keep client information between the\nchain of proxies. Have a look at the documentation [https://docs.traefik.io/] to\nlearn how to enable and configure safely this feature.\n\nCustom Error Pages\nBen Parli [https://github.com/bparli] did some great job on adding custom error\npages support into Traefik. But instead of rendering html pages, we decided to\ndelegate this task to a backend server. You can now configure Traefik to get\nerror pages from another server, using this syntax:\n\n[frontends]\n  [frontends.website]\n  backend = \"website\"\n  [frontends.website.errors]\n    [frontends.website.errors.network]\n    status = [\"500-599\"]\n    backend = \"error\"\n    query = \"/{status}.html\"\n  [frontends.website.routes.website]\n  rule = \"Host: website.mydomain.com\"\n\n[backends]\n  [backends.website]\n    [backends.website.servers.website]\n    url = \"https://1.2.3.4\"\n  [backends.error]\n    [backends.error.servers.error]\n    url = \"http://2.3.4.5\"\n\nIn this example, if you hit a 502 error, Traefik will ask to the backend server \nhttp://2.3.4.5 for the page 502.html.\n\nDatadog, Statd metrics export\nAlex Antonov [https://github.com/aantono] completed the existing Prometheus\nmetrics export with two famous monitoring services: Datadog and Statd. This\nallows to easily export internal Traefik metrics to monitoring systems and get \nGrafana dashboards [https://grafana.com/dashboards/2240] of your running\ninstances.\n\nIn A Nutshell\nJulien Salleyron [https://github.com/juliens] added GRPC [https://grpc.io/] \nsupport and made a great user guide [https://docs.traefik.io/] on this.\nWe now allow to customize cookie names thanks to Ludovic Fernandez\n[https://github.com/ldez], see the documentation here\n[https://docs.traefik.io/routing/services/].\nDrew Wells [https://github.com/drewwells] added the option passTLSCertto forward\nTLS Client certificates to the backend.\nThe documentation website https://docs.traefik.io [https://docs.traefik.io/] has\nbeen revamped by Ludovic Fernandez [https://github.com/ldez].\n\nBut that’s not all, check the whole changelog\n[https://github.com/containous/traefik/releases/tag/v1.4.0] to get an idea of\nthe awesome work that has been done on this release. Lots of bugs have been\nfixed and we also have been working on creating\n[https://github.com/containous/gallienii] awesome\n[https://github.com/containous/lobicornis] bots\n[https://github.com/containous/bibikoffi] that\n[https://github.com/containous/aloba] do [https://github.com/traefiker] great\nthings for us.\n\n\n--------------------------------------------------------------------------------\n\nGrab the latest binary for Linux, Windows, Mac on Github\n[https://github.com/containous/traefik/releases/tag/v1.2.0] or get the official\nDocker image [https://hub.docker.com/_/traefik/]!\n\ndocker pull traefik:v1.4.0 (or 1.4.0, v1.4, 1.4, roquefort)\ndocker pull traefik:v1.4.0-alpine (or 1.4.0-alpine, v1.4-alpine, 1.4-alpine, roquefort-alpine)\n\nThe documentation can be found on https://docs.traefik.io\n[https://docs.traefik.io/].\n\n\n--------------------------------------------------------------------------------\n\nWe are thrilled to welcome Michael Matur [https://github.com/mmatur] who joined \nContainous [/] and Marco Jantke [https://github.com/marco-jantke] who joined the\nmaintainers team 👋 ! We are hiring developers and evangelists:\ncontaino.us/#jobs !\n\nTraefik is still growing fast, we just passed 10k stars\n[https://github.com/containous/traefik/stargazers] on Github and 22M downloads!\n\n\n--------------------------------------------------------------------------------\n\nWe would love to hear your feedback on this new release. Join us on GitHub\n[https://github.com/containous/traefik], Twitter\n[https://twitter.com/traefikproxy] or on the Community Forum\n[https://community.containo.us]!","html":"<figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://miro.medium.com/max/7366/1*2NS3OACEy6JsCzcK8EVwDw.png\" class=\"kg-image\"><figcaption>Rock Fort…</figcaption></figure><p>After 4 months of intense development, we are proud to announce the fresh new release of Traefik: <em><em>1.4</em></em>, codename <a href=\"https://en.wikipedia.org/wiki/Roquefort\" rel=\"noopener\"><em><em>roquefort</em></em></a><em><em>.</em></em></p><p>This release is quite big: we merged <a href=\"https://github.com/containous/traefik/pulls?utf8=%E2%9C%93&amp;q=is%3Apr%20milestone%3A1.4%20is%3Amerged\" rel=\"noopener\">250</a> pull requests from more than 60 contributors ! Huge thanks goes to all of you who helped on this new version 😘.</p><p>The full changelog can be found <a href=\"https://github.com/containous/traefik/releases/tag/v1.4.0\" rel=\"noopener\">here</a> but here are some new features we want to highlight:</p><h2 id=\"custom-headers-security\">Custom Headers &amp; Security</h2><p>Our awesome <a href=\"https://github.com/dtomcej\" rel=\"noopener\">Daniel Tomcej</a> did some hard work on headers. We now have a way to customize headers:</p><blockquote><em><em>Custom headers can be configured through the frontends, to add headers to either requests or responses that match the frontend’s rules. This allows for setting headers such as <code>X-Script-Name</code> to be added to the request, or custom headers to be added to the response.</em></em></blockquote><p>If that was not enough, Daniel added security options on headers:</p><blockquote><em><em>Security related headers (HSTS headers, SSL redirection, Browser XSS filter, etc) can be added and configured per frontend in a similar manner to the custom headers above. This functionality allows for some easy security features to quickly be set.</em></em></blockquote><h2 id=\"multi-arch\">Multi arch</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-82.png\" class=\"kg-image\"></figure><p>Thanks to <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a>, <a href=\"https://github.com/docker-library/official-images/blob/master/library/traefik\" rel=\"noopener\">we now provide</a> the official Docker image on multiple architectures: <em><em>amd64</em></em>, <em><em>arm64v8</em></em>, <em><em>arm32v6</em></em>. The best part is that as of mid-September, Docker supports transparent multi-arch on official images. This allows to use <code>docker run traefik</code> transparently either on a <em><em>amd64 </em></em>or a<em><em> arm64v8 </em></em>Docker daemon. We plan to add a Windows based official image in the future.</p><h2 id=\"authentication-forward\">Authentication Forward</h2><p>As a first step to <a href=\"https://github.com/containous/traefik/issues/593\" rel=\"noopener\">a generic authentication mechanism</a>, <a href=\"https://github.com/drampelt\" rel=\"noopener\">Daniel Rampelt</a> followed by <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a>, added a way to forward authentication to a delegate server. Have a look at <a href=\"https://github.com/containous/traefik/pull/1972\" rel=\"noopener\">both</a> <a href=\"https://github.com/containous/traefik/pull/2132\" rel=\"noopener\">PRs</a> to get more details on this.</p><h2 id=\"proxy-protocol\">Proxy Protocol</h2><p>Traefik is often used behind another load-balancer like an <a href=\"https://aws.amazon.com/elasticloadbalancing\" rel=\"noopener\">ELB</a>. In this case, Traefik now supports Proxy Protocol, that allows to keep client information between the chain of proxies. Have a look at <a href=\"https://docs.traefik.io/\">the documentation</a> to learn how to enable and configure safely this feature.</p><h2 id=\"custom-error-pages\">Custom Error Pages</h2><p><a href=\"https://github.com/bparli\" rel=\"noopener\">Ben Parli</a> did some great job on adding custom error pages support into Traefik. But instead of rendering html pages, we decided to delegate this task to a backend server. You can now configure Traefik to get error pages from another server, using this syntax:</p><pre><code class=\"language-toml\">[frontends]\n  [frontends.website]\n  backend = \"website\"\n  [frontends.website.errors]\n    [frontends.website.errors.network]\n    status = [\"500-599\"]\n    backend = \"error\"\n    query = \"/{status}.html\"\n  [frontends.website.routes.website]\n  rule = \"Host: website.mydomain.com\"\n\n[backends]\n  [backends.website]\n    [backends.website.servers.website]\n    url = \"https://1.2.3.4\"\n  [backends.error]\n    [backends.error.servers.error]\n    url = \"http://2.3.4.5\"</code></pre><p>In this example, if you hit a 502 error, Traefik will ask to the backend server <code>http://2.3.4.5 </code>for the page <code>502.html</code>.</p><h2 id=\"datadog-statd-metrics-export\">Datadog, Statd metrics export</h2><p><a href=\"https://github.com/aantono\" rel=\"noopener\">Alex Antonov</a> completed the existing Prometheus metrics export with two famous monitoring services: Datadog and Statd. This allows to easily export internal Traefik metrics to monitoring systems and get <a href=\"https://grafana.com/dashboards/2240\" rel=\"noopener\">Grafana dashboards</a> of your running instances.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-83.png\" class=\"kg-image\"></figure><h2 id=\"in-a-nutshell\">In A Nutshell</h2><p><a href=\"https://github.com/juliens\" rel=\"noopener\">Julien Salleyron</a> added <a href=\"https://grpc.io/\" rel=\"noopener\">GRPC</a> support and made a <a href=\"https://docs.traefik.io/\">great user guide</a> on this.<br>We now allow to customize cookie names thanks to <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a>, see the documentation <a href=\"https://docs.traefik.io/routing/services/\">here</a>.<br><a href=\"https://github.com/drewwells\" rel=\"noopener\">Drew Wells</a> added the option <code>passTLSCert</code>to forward TLS Client certificates to the backend.<br>The documentation website <a href=\"https://docs.traefik.io/\">https://docs.traefik.io</a> has been revamped by <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a>.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-84.png\" class=\"kg-image\"></figure><p>But that’s not all, check the <a href=\"https://github.com/containous/traefik/releases/tag/v1.4.0\" rel=\"noopener\">whole changelog</a> to get an idea of the awesome work that has been done on this release. Lots of bugs have been fixed and we also have been working on <a href=\"https://github.com/containous/gallienii\" rel=\"noopener\">creating</a> <a href=\"https://github.com/containous/lobicornis\" rel=\"noopener\">awesome</a> <a href=\"https://github.com/containous/bibikoffi\" rel=\"noopener\">bots</a> <a href=\"https://github.com/containous/aloba\" rel=\"noopener\">that</a> <a href=\"https://github.com/traefiker\" rel=\"noopener\">do</a> great things for us.</p><hr><p>Grab the latest binary for Linux, Windows, Mac on <a href=\"https://github.com/containous/traefik/releases/tag/v1.2.0\" rel=\"noopener\">Github</a> or get the <a href=\"https://hub.docker.com/_/traefik/\" rel=\"noopener\">official Docker image</a>!</p><pre><code class=\"language-shell\">docker pull traefik:v1.4.0 (or 1.4.0, v1.4, 1.4, roquefort)\ndocker pull traefik:v1.4.0-alpine (or 1.4.0-alpine, v1.4-alpine, 1.4-alpine, roquefort-alpine)</code></pre><p>The documentation can be found on <a href=\"https://docs.traefik.io/\">https://docs.traefik.io</a>.</p><hr><p>We are thrilled to welcome <a href=\"https://github.com/mmatur\" rel=\"noopener\">Michael Matur</a> who joined <a href=\"https://containous.ghost.io/\" rel=\"noopener\">Containous</a> and <a href=\"https://github.com/marco-jantke\" rel=\"noopener\">Marco Jantke</a> who joined the maintainers team 👋 ! <strong><strong>We are hiring developers and evangelists: containo.us/#jobs !</strong></strong></p><p>Traefik is still growing fast, we just passed <a href=\"https://github.com/containous/traefik/stargazers\" rel=\"noopener\">10k stars</a> on Github and 22M downloads!</p><hr><p>We would love to hear your feedback on this new release. Join us on <a href=\"https://github.com/containous/traefik\" rel=\"noopener\">GitHub</a>, <a href=\"https://twitter.com/traefikproxy\" rel=\"noopener\">Twitter</a> or on the <a href=\"https://community.containo.us\">Community Forum</a>!</p>","url":"https://containous.ghost.io/blog/traefik-1-4-roquefort-is-here-and-its-huge-c26654aba80f/","canonical_url":null,"uuid":"71cfb254-a24e-4a18-854d-c669c8c1c4b1","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd7f800f1db6f0038c74558","reading_time":4}}]}},"pageContext":{"slug":"emile","limit":9,"skip":0,"numberOfPages":2,"humanPageNumber":1,"prevPageNumber":null,"nextPageNumber":2,"previousPagePath":null,"nextPagePath":"/author/emile/page/2/"}},"staticQueryHashes":["1274566015","2561578252","2731221146","394248586","4145280475","749840385"]}