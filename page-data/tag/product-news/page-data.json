{"componentChunkName":"component---src-templates-tag-tsx","path":"/tag/product-news/","result":{"data":{"ghostTag":{"slug":"product-news","name":"Product News","visibility":"public","feature_image":null,"featureImageSharp":null,"description":null,"meta_title":null,"meta_description":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5fd92aa6255eda00390e23da","title":"For Developers, Traefik Enterprise 2.3 Adds Support for GitOps and OpenAPI","slug":"traefik-enterprise-adds-support-for-gitops-and-openapi","featured":true,"feature_image":"https://containous.ghost.io/content/images/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/9137a8a7798710019629587d41c5d119/47498/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg","srcSet":"/static/9137a8a7798710019629587d41c5d119/9dc27/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg 300w,\n/static/9137a8a7798710019629587d41c5d119/4fe8c/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg 600w,\n/static/9137a8a7798710019629587d41c5d119/47498/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg 1200w,\n/static/9137a8a7798710019629587d41c5d119/52258/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg 1800w,\n/static/9137a8a7798710019629587d41c5d119/a41d1/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Traefik Enterprise 2.3 introduces new features for developers and DevOps engineers, including support for GitOps practices and OpenAPI.","custom_excerpt":"Traefik Enterprise 2.3 introduces new features for developers and DevOps engineers, including support for GitOps practices and OpenAPI.","visibility":"public","created_at_pretty":"15 December, 2020","published_at_pretty":"December 22, 2020","updated_at_pretty":"22 December, 2020","created_at":"2020-12-15T21:29:10.000+00:00","published_at":"2020-12-22T13:00:00.000+00:00","updated_at":"2020-12-22T12:59:59.000+00:00","meta_title":"Traefik Enterprise 2.3 Adds Support for GitOps and OpenAPI","meta_description":"Traefik Enterprise 2.3 introduces new features for developers and DevOps engineers, including support for GitOps practices and OpenAPI.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI---Twitter.png","twitter_title":null,"authors":[{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"IT operations teams aren’t the only ones who need an efficient, secure,\neasy-to-use application networking layer. Developers, architects, and DevOps\npros number among Traefik’s most enthusiastic users.\n\nCloud-native methods – including containerization, REST APIs, and microservices\n– have brought networking front and center in modern software delivery. As a\nresult, application developers need tools that give them greater control over\nnetwork infrastructure, and the team at Traefik Labs is always working to see\nthat their needs are met.\n\nTraefik Enterprise 2.3, the latest version of the commercially supported,\nproduction-grade edition of Traefik, includes two new features aimed squarely at\ndevelopers and DevOps engineers. The first is support for GitOps practices when\ndeploying Traefik, while the second leverages the OpenAPI standard to make\nservice discovery and integration easier. Let’s take a look at each.\n\nInfrastructure Automation with GitOps\nBriefly, GitOps [https://www.gitops.tech/] is a method of implementing\ncontinuous delivery (CD) for cloud-native applications that uses Git\nrepositories as the source of truth. The technique was originally developed at\nWeaveworks for use with Kubernetes but has since been adapted to other\nenvironments. The central idea is to make developers comfortable when operating\ninfrastructure by allowing them to do it using tools with which they are already\nfamiliar.\n\nIn the past, much of infrastructure configuration relied on command-line tools,\nand this was true of Traefik Enterprise, as well. It supplied the teectl tool,\nwhich eliminates some of the drudgework of configuration and installation, but\nthis approach isn’t well-suited to CD pipelines.\n\nTraefik Enterprise 2.3 introduces a new internal service to further streamline\nthe process for a GitOps flow for Kubernetes. The procedure is as simple as\nspecifying your Traefik Enterprise license in a Kubernetes Secret, creating a\nConfigMap with your static configuration, and querying the service via HTTP to\ngenerate your installation manifest, like so:\n\ncurl \"https://install.enterprise.traefik.io/v2.3\" --output manifest.yaml\n\nOnce you’ve reviewed the manifest and made any necessary modifications, you can\nstore it in a Git repository in the appropriate directory structure, and then\nintegrate it with GitOps tools such as Argo CD\n[https://argoproj.github.io/argo-cd/].\n\nThe advantages of this approach are several. For one thing, Git automatically\nkeeps a version history of your config files, so you can easily roll back to an\nearlier version if necessary. Also, Traefik Enterprise’s ability to update the\nstatic configuration without a restart means you can apply updates with minimal\ninterruption of service. To learn more about GitOps-style installation, consult\nthe documentation\n[https://doc.traefik.io/traefik-enterprise/installing/kubernetes/gitops/].\n\nService Visibility with OpenAPI\nAs services proliferate on the network, so do the connections between them. That\nmeans APIs, and lots of them. Staying on top of them all can be challenging for\nany developer, which is why Traefik Enterprise 2.3 incorporates a new API Portal\nbuilt around the OpenAPI specification [https://www.openapis.org/].\n\nOpenAPI (initially known as Swagger) is a language-agnostic interface\ndescription language for REST APIs. The API descriptions themselves are defined\nin JSON files. The idea is to make it easier to auto-generate consistent\nreference documentation for service APIs, no matter who designed and implemented\nthem.\n\nTo use OpenAPI descriptions with Traefik Enterprise, simply enable the new API\nPortal feature by editing the static configuration to include a path (for\nexample, spec.json) to where the JSON files can be found on each service\nentrypoint. From there, anyone with access can browse the catalog of the\nservices and their accompanying APIs from Traefik Enterprise’s internal web UI:\n\nWhat’s more, because the API Portal is just another service managed by Traefik,\nadministrators can choose from the full range of access controls provided by\nTraefik Middlewares, including Traefik Enterprise’s exclusive, enterprise-grade\nauthentication methods.\n\nTo view some examples of how to write API descriptions using OpenAPI, consult\nthe project’s public specification repository\n[https://github.com/OAI/OpenAPI-Specification/tree/master/examples]. More\ninformation on how to use OpenAPI with Traefik Enterprise is available in the \ndocumentation [https://doc.traefik.io/traefik-enterprise/operations/apiportal/].\n\nEmpowering Developers\nThese latest features are just two examples of the ways in which Traefik\nEnterprise helps give developers greater control over the environments where\ntheir apps and services run. As cloud-native architectures continue to encourage\norganizations to adopt methods like DevOps and site reliability engineering\n(SRE), you can expect Traefik Labs to continue to deliver features that support\nthis new model.\n\nOther examples of developer-centric technologies that are baked into Traefik\nEnterprise include support for certificate management using HashiCorp Vault\n[https://traefik.io/blog/lock-down-your-network-with-traefik-enterprise-and-vault/]\n; authentication tools including JWT, LDAP, and OpenID Connect\n[https://traefik.io/blog/unlock-the-potential-of-data-apis-with-strong-authentication-and-traefik-enterprise/]\n; and a service mesh\n[https://doc.traefik.io/traefik-enterprise/features/#service-mesh] layer that\nenables fine-grained control over inter-service communication. \n\nTo learn more about how Traefik Enterprise can help your organization boost\ndeveloper productivity and reduce time-to-delivery, contact Traefik Labs to \nrequest a demo [https://info.traefik.io/en/request-demo-traefik-enterprise]. Or\nbetter yet, sign up for a 30-day free trial\n[https://info.traefik.io/get-traefik-enterprise-free-for-30-days] and explore\nthe features of Traefik Enterprise for yourself.","html":"<figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI.jpg\" class=\"kg-image\" alt=\"Traefik Enterprise 2.3 Adds Support for GitOps and OpenAPI\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI.jpg 1600w, https://containous.ghost.io/content/images/2020/12/Traefik-Enterprise-2.3-Adds-Support-for-GitOps-and-OpenAPI.jpg 2400w\" sizes=\"(min-width: 1200px) 1200px\"></figure><p>IT operations teams aren’t the only ones who need an efficient, secure, easy-to-use application networking layer. Developers, architects, and DevOps pros number among Traefik’s most enthusiastic users.</p><p>Cloud-native methods – including containerization, REST APIs, and microservices – have brought networking front and center in modern software delivery. As a result, application developers need tools that give them greater control over network infrastructure, and the team at Traefik Labs is always working to see that their needs are met.</p><p>Traefik Enterprise 2.3, the latest version of the commercially supported, production-grade edition of Traefik, includes two new features aimed squarely at developers and DevOps engineers. The first is support for GitOps practices when deploying Traefik, while the second leverages the OpenAPI standard to make service discovery and integration easier. Let’s take a look at each.</p><h2 id=\"infrastructure-automation-with-gitops\"><strong>Infrastructure Automation with GitOps</strong></h2><!--kg-card-begin: markdown--><p>Briefly, <a href=\"https://www.gitops.tech/\" target=\"_blank\" rel=\"nofollow\">GitOps</a> is a method of implementing continuous delivery (CD) for cloud-native applications that uses Git repositories as the source of truth. The technique was originally developed at Weaveworks for use with Kubernetes but has since been adapted to other environments. The central idea is to make developers comfortable when operating infrastructure by allowing them to do it using tools with which they are already familiar.</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>In the past, much of infrastructure configuration relied on command-line tools, and this was true of Traefik Enterprise, as well. It supplied the <code>teectl</code> tool, which eliminates some of the drudgework of configuration and installation, but this approach isn’t well-suited to CD pipelines.</p>\n<!--kg-card-end: markdown--><p>Traefik Enterprise 2.3 introduces a new internal service to further streamline the process for a GitOps flow for Kubernetes. The procedure is as simple as specifying your Traefik Enterprise license in a Kubernetes Secret, creating a ConfigMap with your static configuration, and querying the service via HTTP to generate your installation manifest, like so:</p><!--kg-card-begin: markdown--><p><code>curl &quot;https://install.enterprise.traefik.io/v2.3&quot; --output manifest.yaml</code></p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>Once you’ve reviewed the manifest and made any necessary modifications, you can store it in a Git repository in the appropriate directory structure, and then integrate it with GitOps tools such as <a href=\"https://argoproj.github.io/argo-cd/\" target=\"_blank\" rel=\"nofollow\">Argo CD</a>.</p>\n<!--kg-card-end: markdown--><p>The advantages of this approach are several. For one thing, Git automatically keeps a version history of your config files, so you can easily roll back to an earlier version if necessary. Also, Traefik Enterprise’s ability to update the static configuration without a restart means you can apply updates with minimal interruption of service. To learn more about GitOps-style installation, <a href=\"https://doc.traefik.io/traefik-enterprise/installing/kubernetes/gitops/\">consult the documentation</a>.</p><h2 id=\"service-visibility-with-openapi\"><strong>Service Visibility with OpenAPI</strong></h2><!--kg-card-begin: markdown--><p>As services proliferate on the network, so do the connections between them. That means APIs, and lots of them. Staying on top of them all can be challenging for any developer, which is why Traefik Enterprise 2.3 incorporates a new API Portal built around the <a href=\"https://www.openapis.org/\" target=\"_blank\" rel=\"nofollow\">OpenAPI specification</a>.</p>\n<!--kg-card-end: markdown--><p>OpenAPI (initially known as Swagger) is a language-agnostic interface description language for REST APIs. The API descriptions themselves are defined in JSON files. The idea is to make it easier to auto-generate consistent reference documentation for service APIs, no matter who designed and implemented them.</p><!--kg-card-begin: markdown--><p>To use OpenAPI descriptions with Traefik Enterprise, simply enable the new API Portal feature by editing the static configuration to include a path (for example, <code>spec.json</code>) to where the JSON files can be found on each service entrypoint. From there, anyone with access can browse the catalog of the services and their accompanying APIs from Traefik Enterprise’s internal web UI:</p>\n<!--kg-card-end: markdown--><figure class=\"kg-card kg-image-card\"><img src=\"https://lh6.googleusercontent.com/9GR3S1hfXIGNjLLMwppW07wlFXhiFFxkcS-QffLpLO2UHNnoTSufM1Czo8fpseTBFc8UsxnjD88_fAH0hZ4-ltylQRSDgCZJ4BrnK_m6P61aVlol2m_R2Pak4jZIYbU1GGZHr8tU\" class=\"kg-image\" alt=\"API Portal page\"></figure><p>What’s more, because the API Portal is just another service managed by Traefik, administrators can choose from the full range of access controls provided by Traefik Middlewares, including Traefik Enterprise’s exclusive, enterprise-grade authentication methods.</p><!--kg-card-begin: markdown--><p>To view some examples of how to write API descriptions using OpenAPI, consult the project’s <a href=\"https://github.com/OAI/OpenAPI-Specification/tree/master/examples\" target=\"_blank\" rel=\"nofollow\">public specification repository</a>. More information on how to use OpenAPI with Traefik Enterprise is available in the <a href=\"https://doc.traefik.io/traefik-enterprise/operations/apiportal/\">documentation</a>.</p>\n<!--kg-card-end: markdown--><h2 id=\"empowering-developers\"><strong>Empowering Developers</strong></h2><p>These latest features are just two examples of the ways in which Traefik Enterprise helps give developers greater control over the environments where their apps and services run. As cloud-native architectures continue to encourage organizations to adopt methods like DevOps and site reliability engineering (SRE), you can expect Traefik Labs to continue to deliver features that support this new model.</p><p>Other examples of developer-centric technologies that are baked into Traefik Enterprise include support for <a href=\"https://traefik.io/blog/lock-down-your-network-with-traefik-enterprise-and-vault/\">certificate management using HashiCorp Vault</a>; authentication tools including JWT, LDAP, and <a href=\"https://traefik.io/blog/unlock-the-potential-of-data-apis-with-strong-authentication-and-traefik-enterprise/\">OpenID Connect</a>; and a <a href=\"https://doc.traefik.io/traefik-enterprise/features/#service-mesh\">service mesh</a> layer that enables fine-grained control over inter-service communication. </p><p>To learn more about how Traefik Enterprise can help your organization boost developer productivity and reduce time-to-delivery, contact Traefik Labs to <a href=\"https://info.traefik.io/en/request-demo-traefik-enterprise\">request a demo</a>. Or better yet, sign up for a <a href=\"https://info.traefik.io/get-traefik-enterprise-free-for-30-days\">30-day free trial</a>  and explore the features of Traefik Enterprise for yourself.</p>","url":"https://containous.ghost.io/blog/traefik-enterprise-adds-support-for-gitops-and-openapi/","canonical_url":null,"uuid":"94d5a7d5-71c0-4669-8fa2-bd171b77bb02","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5fd92aa6255eda00390e23da","reading_time":3}},{"node":{"id":"Ghost__Post__5fb312644a99b50039ce6d0d","title":"Lock Down Your Network with Traefik Enterprise and Vault","slug":"lock-down-your-network-with-traefik-enterprise-and-vault","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/467c1cae57eb781022dd88370e8e23bb/47498/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg","srcSet":"/static/467c1cae57eb781022dd88370e8e23bb/9dc27/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg 300w,\n/static/467c1cae57eb781022dd88370e8e23bb/4fe8c/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg 600w,\n/static/467c1cae57eb781022dd88370e8e23bb/47498/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg 1200w,\n/static/467c1cae57eb781022dd88370e8e23bb/52258/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg 1800w,\n/static/467c1cae57eb781022dd88370e8e23bb/a41d1/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Traefik Enterprise 2.3 now supports Vault for certificate management in two ways: as a key-value store for certificates, and as a certificate resolver.","custom_excerpt":"Traefik Enterprise 2.3 now supports Vault for certificate management in two ways: as a key-value store for certificates, and as a certificate resolver.","visibility":"public","created_at_pretty":"16 November, 2020","published_at_pretty":"November 17, 2020","updated_at_pretty":"08 December, 2020","created_at":"2020-11-16T23:59:32.000+00:00","published_at":"2020-11-17T05:26:08.000+00:00","updated_at":"2020-12-08T16:11:14.000+00:00","meta_title":"Lock Down Your Network with Traefik Enterprise and Vault","meta_description":"Traefik Enterprise 2.3 now supports Vault for certificate management in two ways: as a key-value store for certificates, and as a certificate resolver.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault-1.png","twitter_title":null,"authors":[{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"#api-gateway-related-resource","slug":"hash-api-gateway-related-resource","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"internal"}],"plaintext":"Every organization has secrets. Likewise, every application and service must\nmanage sensitive information – such as usernames and passwords, license keys,\ndatabase credentials, and so on – that should be kept away from prying eyes.\n\nAmong the most important secrets that modern apps must maintain are the TLS\ncertificates [https://en.wikipedia.org/wiki/Transport_Layer_Security] that make\nencrypted HTTPS communications possible. The good news for Traefik Enterprise\nusers is that handling these secrets is now easier than ever, thanks to support\nfor Vault in Traefik Enterprise 2.3.\n\nVault [https://www.vaultproject.io/] is an open source\n[https://github.com/hashicorp/vault] tool developed and maintained by HashiCorp\nthat provides a secure and encrypted central data store for secrets. Traefik\nEnterprise 2.3 can use Vault for certificate management in two ways. First, it\ncan use Vault as a key-value store for certificates. Second, it can enlist Vault\nas a certificate resolver, allowing it to dynamically generate certificates on\nthe fly. Let’s examine both use cases.\n\nUsing Vault as a Key-Value Store for Certificates\nTraefik has long been able to discover and connect with a variety of key-value\nstores, such as Consul, etcd, and ZooKeeper. The Vault provider for Traefik\nEnterprise 2.3 and later can connect to Vault in a similar way, using it as a\nkey-value store for storing and retrieving TLS certificates.\n\nThe first step is to setup the Vault secrets engine for use with Traefik\nEnterprise. As of now, Traefik Enterprise supports the KV Secrets Engine –\nVersion 2 [https://www.vaultproject.io/docs/secrets/kv/kv-v2], which is\ncurrently the default and is easily enabled from the command line. It’s a good\nidea to use a dedicated KV store for TLS certificates, and bear in mind that all\ncertificates must be base64-encoded and stored in the root of the KV secrets\nengine.\n\nFrom there, it’s a straightforward matter of enabling the Vault Provider in\nTraefik Enterprise’s static configuration. This takes just a few lines of code,\nand a typical example (in YAML) might look like this:\n\nproviders:\n  plugin:\n    vault:\n      url: \"http://127.0.0.1:8200\"\n      token: \"s.CUDDqqjiIFXF60KVSeJOxeb5\"\n      enginePath: \"secret\"\n      syncInterval: \"5s\"\n      rescanInterval: \"60s\"\n\n\nThis snippet points to the URL of the Vault server and supplies the token that’s\nneeded to authenticate with it. (The Vault Provider only supports token\nauthentication at this time.) It also specifies how often the provider will pull\ndata from the Vault KV store.\n\nThat’s it! Once configured, Traefik Enterprise will detect certificates in the\nstore to serve them. And, as usual for Traefik Enterprise, the configuration\nrefreshes automatically whenever you insert or delete certificates from the\nVault store.\n\nIf you’d like to learn more about how to setup and configure the Vault Provider\nfor Traefik Enterprise, check out the documentation\n[https://doc.traefik.io/traefik-enterprise/providers/vault-kv/].\n\nUsing Vault as a Certificate Resolver for PKI\nExperienced Traefik users will be familiar with its support for automatic\ncertificate generation using the ACME protocol and compatible service providers,\nsuch as Let’s Encrypt [https://doc.traefik.io/traefik-enterprise/tls/acme/].\nTraefik Enterprise 2.3 adds a new, additional means of automating certificate\ngeneration in the form of support for Vault Public Key Infrastructure (PKI)\n[https://www.hashicorp.com/products/vault/pki-with-vault].\n\nThe Vault PKI secrets engine includes built-in authentication and authorization\nfunctions that make it possible to generate certificates on the fly, without\ngetting bogged down in the traditional, manual process of generating keys and\nsubmitting to a certificate authority (CA).\n\nThis automation is especially valuable in dynamic, microservices-based\nenvironments, where services tend to be short-lived and container instances are\nrapidly created and destroyed, according to demand.\n\nSetting up Vault as a certificate resolver\n[https://doc.traefik.io/traefik/https/acme/#certificate-resolvers] is almost as\neasy as configuring the Vault Provider, as discussed earlier. Once Vault is\ninstalled with the PKI secrets engine enabled, configuring the feature requires\nadding just a few lines to Traefik Enterprise’s static configuration. For\nexample:\n\ncertificatesResolvers:\n  resolverName:\n\tvault:\n  \turl: \"http://127.0.0.1:8200\"\n  \ttoken: \"s.CUDDqqjiIFXF60KVSeJOxeb5\" # Your Vault auth token goes here\n  \tenginePath: \"pki\"\n  \trole: \"vault-role\"\n\n\nOnce the certificate resolver is configured, assigning it to routes in Traefik\nEnterprise will trigger Vault to generate certificates for requests that match\nthe appropriate patterns. To read more about how this works, consult the \ndocumentation [https://doc.traefik.io/traefik-enterprise/tls/vault-pki/].\nThere’s also a handy user guide\n[https://doc.traefik.io/traefik-enterprise/operations/vault-pki-guide/] \navailable that walks through the process of deploying a simple TLS-enabled\nservice with Vault on Kubernetes.\n\nGet Secure with Traefik Enterprise\nTraefik Labs is pleased to offer support for Vault in Traefik Enterprise as\nfurther proof of our commitment to provide best-of-breed features that\nsecurity-conscious enterprises demand. Using Vault to manage secrets is a step\nforward in securing your network; using Vault with Traefik Enterprise makes\ntaking that step even easier. If you’d like to learn more about these and other\nadvanced features of Traefik Enterprise, the best way is to try them out for\nyourself. Sign up for a 30-day free trial\n[https://info.traefik.io/get-traefik-enterprise-free-for-30-days] and explore\nhow Traefik Enterprise can help make your infrastructure more nimble, reliable,\nand secure.","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault.jpg\" class=\"kg-image\" alt=\"Lock Down Your Network with Traefik Enterprise and Vault\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault.jpg 1600w, https://containous.ghost.io/content/images/2020/11/Lock-Down-Your-Network-with-Traefik-Enterprise-and-Vault.jpg 2400w\" sizes=\"(min-width: 720px) 720px\"></figure><p>Every organization has secrets. Likewise, every application and service must manage sensitive information – such as usernames and passwords, license keys, database credentials, and so on – that should be kept away from prying eyes.</p><!--kg-card-begin: markdown--><p>Among the most important secrets that modern apps must maintain are the <a href=\"https://en.wikipedia.org/wiki/Transport_Layer_Security\" target=\"_blank\" rel=\"nofollow\">TLS certificates</a> that make encrypted HTTPS communications possible. The good news for Traefik Enterprise users is that handling these secrets is now easier than ever, thanks to support for Vault in Traefik Enterprise 2.3.</p>\n<p><a href=\"https://www.vaultproject.io/\" target=\"_blank\" rel=\"nofollow\">Vault</a> is an <a href=\"https://github.com/hashicorp/vault\" target=\"_blank\" rel=\"nofollow\">open source</a> tool developed and maintained by HashiCorp that provides a secure and encrypted central data store for secrets. Traefik Enterprise 2.3 can use Vault for certificate management in two ways. First, it can use Vault as a key-value store for certificates. Second, it can enlist Vault as a certificate resolver, allowing it to dynamically generate certificates on the fly. Let’s examine both use cases.</p>\n<!--kg-card-end: markdown--><h2 id=\"using-vault-as-a-key-value-store-for-certificates\"><strong>Using Vault as a Key-Value Store for Certificates</strong></h2><p>Traefik has long been able to discover and connect with a variety of key-value stores, such as Consul, etcd, and ZooKeeper. The Vault provider for Traefik Enterprise 2.3 and later can connect to Vault in a similar way, using it as a key-value store for storing and retrieving TLS certificates.</p><!--kg-card-begin: markdown--><p>The first step is to setup the Vault secrets engine for use with Traefik Enterprise. As of now, Traefik Enterprise supports the <a href=\"https://www.vaultproject.io/docs/secrets/kv/kv-v2\" target=\"_blank\" rel=\"nofollow\">KV Secrets Engine – Version 2</a>, which is currently the default and is easily enabled from the command line. It’s a good idea to use a dedicated KV store for TLS certificates, and bear in mind that all certificates must be base64-encoded and stored in the root of the KV secrets engine.</p>\n<!--kg-card-end: markdown--><p>From there, it’s a straightforward matter of enabling the Vault Provider in Traefik Enterprise’s static configuration. This takes just a few lines of code, and a typical example (in YAML) might look like this:</p><!--kg-card-begin: markdown--><pre><code class=\"language-yaml\">providers:\n  plugin:\n    vault:\n      url: &quot;http://127.0.0.1:8200&quot;\n      token: &quot;s.CUDDqqjiIFXF60KVSeJOxeb5&quot;\n      enginePath: &quot;secret&quot;\n      syncInterval: &quot;5s&quot;\n      rescanInterval: &quot;60s&quot;\n</code></pre>\n<!--kg-card-end: markdown--><p>This snippet points to the URL of the Vault server and supplies the token that’s needed to authenticate with it. (The Vault Provider only supports token authentication at this time.) It also specifies how often the provider will pull data from the Vault KV store.</p><p>That’s it! Once configured, Traefik Enterprise will detect certificates in the store to serve them. And, as usual for Traefik Enterprise, the configuration refreshes automatically whenever you insert or delete certificates from the Vault store.</p><p>If you’d like to learn more about how to setup and configure the Vault Provider for Traefik Enterprise, check out the <a href=\"https://doc.traefik.io/traefik-enterprise/providers/vault-kv/\">documentation</a>.</p><h2 id=\"using-vault-as-a-certificate-resolver-for-pki\"><strong>Using Vault as a Certificate Resolver for PKI</strong></h2><!--kg-card-begin: markdown--><p>Experienced Traefik users will be familiar with its support for automatic certificate generation using the ACME protocol and compatible service providers, such as <a href=\"https://doc.traefik.io/traefik-enterprise/tls/acme/\">Let’s Encrypt</a>. Traefik Enterprise 2.3 adds a new, additional means of automating certificate generation in the form of support for <a href=\"https://www.hashicorp.com/products/vault/pki-with-vault\" target=\"_blank\" rel=\"nofollow\">Vault Public Key Infrastructure (PKI)</a>.</p>\n<!--kg-card-end: markdown--><p>The Vault PKI secrets engine includes built-in authentication and authorization functions that make it possible to generate certificates on the fly, without getting bogged down in the traditional, manual process of generating keys and submitting to a certificate authority (CA).</p><p>This automation is especially valuable in dynamic, microservices-based environments, where services tend to be short-lived and container instances are rapidly created and destroyed, according to demand.</p><p>Setting up Vault as a <a href=\"https://doc.traefik.io/traefik/https/acme/#certificate-resolvers\">certificate resolver</a> is almost as easy as configuring the Vault Provider, as discussed earlier. Once Vault is installed with the PKI secrets engine enabled, configuring the feature requires adding just a few lines to Traefik Enterprise’s static configuration. For example:</p><!--kg-card-begin: markdown--><pre><code>certificatesResolvers:\n  resolverName:\n\tvault:\n  \turl: &quot;http://127.0.0.1:8200&quot;\n  \ttoken: &quot;s.CUDDqqjiIFXF60KVSeJOxeb5&quot; # Your Vault auth token goes here\n  \tenginePath: &quot;pki&quot;\n  \trole: &quot;vault-role&quot;\n</code></pre>\n<!--kg-card-end: markdown--><p>Once the certificate resolver is configured, assigning it to routes in Traefik Enterprise will trigger Vault to generate certificates for requests that match the appropriate patterns. To read more about how this works, consult the <a href=\"https://doc.traefik.io/traefik-enterprise/tls/vault-pki/\">documentation</a>. There’s also a handy <a href=\"https://doc.traefik.io/traefik-enterprise/operations/vault-pki-guide/\">user guide</a> available that walks through the process of deploying a simple TLS-enabled service with Vault on Kubernetes.</p><h2 id=\"get-secure-with-traefik-enterprise\"><strong>Get Secure with Traefik Enterprise</strong></h2><p>Traefik Labs is pleased to offer support for Vault in Traefik Enterprise as further proof of our commitment to provide best-of-breed features that security-conscious enterprises demand. Using Vault to manage secrets is a step forward in securing your network; using Vault with Traefik Enterprise makes taking that step even easier. If you’d like to learn more about these and other advanced features of Traefik Enterprise, the best way is to try them out for yourself. Sign up for a <a href=\"https://info.traefik.io/get-traefik-enterprise-free-for-30-days\">30-day free trial</a> and explore how Traefik Enterprise can help make your infrastructure more nimble, reliable, and secure.</p>","url":"https://containous.ghost.io/blog/lock-down-your-network-with-traefik-enterprise-and-vault/","canonical_url":null,"uuid":"5d85e5ae-9959-4084-b85e-794ac0801881","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5fb312644a99b50039ce6d0d","reading_time":3}},{"node":{"id":"Ghost__Post__5f88c505c254310039a24349","title":"Traefik Enterprise 2.3 Arrives with Vault Support, GitOps Compliance, and More","slug":"traefik-enterprise-2-3-arrives-with-vault-support-gitops-compliance-and-more","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/10/Traefik-Enterprise-2.3.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/59ddc15501f1c991b47879ced7ae3491/47498/Traefik-Enterprise-2.3.jpg","srcSet":"/static/59ddc15501f1c991b47879ced7ae3491/9dc27/Traefik-Enterprise-2.3.jpg 300w,\n/static/59ddc15501f1c991b47879ced7ae3491/4fe8c/Traefik-Enterprise-2.3.jpg 600w,\n/static/59ddc15501f1c991b47879ced7ae3491/47498/Traefik-Enterprise-2.3.jpg 1200w,\n/static/59ddc15501f1c991b47879ced7ae3491/52258/Traefik-Enterprise-2.3.jpg 1800w,\n/static/59ddc15501f1c991b47879ced7ae3491/a41d1/Traefik-Enterprise-2.3.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Traefik Enterprise 2.3 has arrived. Now, with Vault support, GitOps Compliance, support for HTTP caching, and an API portal. ","custom_excerpt":"Traefik Enterprise 2.3 has arrived. Now, with Vault support, GitOps Compliance, support for HTTP caching, and an API portal. ","visibility":"public","created_at_pretty":"15 October, 2020","published_at_pretty":"October 19, 2020","updated_at_pretty":"24 November, 2020","created_at":"2020-10-15T21:54:13.000+00:00","published_at":"2020-10-19T17:21:00.000+00:00","updated_at":"2020-11-24T05:43:10.000+00:00","meta_title":"Traefik Enterprise 2.3 Arrives with Vault support & GitOps Compliance","meta_description":"Traefik Enterprise 2.3 is here. Now, with Vault support, GitOps Compliance, support for HTTP caching, a new way to automate installation and an API portal.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/10/Twitter@2x.png","twitter_title":null,"authors":[{"name":"Nicolas Mengin","slug":"nicolas","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/02/wam.jpeg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Nicolas Mengin","slug":"nicolas","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/02/wam.jpeg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"We are pleased to announce that a new version of Traefik Enterprise is here,\nbringing with it an array of new capabilities. Among the new features in this\nlatest release are integration with Vault, a new way to automate Traefik\nEnterprise installation, support for HTTP caching, and an API portal.\n\nSecure Your Infrastructure in a Vault\nThe more APIs your infrastructure contains, the more complicated TLS certificate\nmanagement becomes.\n\nTo solve this problem, many companies have used Vault\n[https://www.vaultproject.io/] to manage their certificates securely. Customers\nhave asked us to help them easily serve these certificates using Traefik\nEnterprise, and this is now possible with Traefik Enterprise 2.3.\n\nVault as a Provider\nTraefik Enterprise has always been able to read certificates from key-value\nstores such as Consul or etcd. It’s now possible to use Vault in the same way\n[https://doc.traefik.io/traefik-enterprise/v2.3/providers/vault-kv/], thanks for\nthe new Vault provider in Traefik Enterprise 2.3.\n\nConfigure your Traefik Enterprise cluster to reach your Vault server and it will\ndetect the certificates to serve them:\n\n# Static Configuration\nproviders:\n  plugin:\n    vault:\n      url: \"http://127.0.0.1:8200\" # Vault server URL\n      token: \"s.CUDDqqjiIFXF60KVSeJOxeb5\" # Vault Authentication Token\n\n\nAs usual with Traefik Enterprise, the configuration will be refreshed\nautomatically each time you insert or delete certificates in your Vault server.\n\nVault PKI Support\nMany organizations use Vault to generate TLS certificates on the fly using its\npublic key infrastructure (PKI) feature. Now you can take advantage of this\ncapability with Traefik Enterprise.\n\nBased on our experience with Let’s Encrypt, we created a new certificate\nresolver [https://doc.traefik.io/traefik-enterprise/v2.3/tls/vault-pki/] to\nintegrate Traefik Enterprise with Vault PKI.\n\n# Static Configuration\ncertificatesResolvers:\n  vaultResolver:\n    vault:\n      url: \"http://127.0.0.1:8200\" # Vault server URL\n      token: \"s.CUDDqqjiIFXF60KVSeJOxeb5\" # Vault Authentication Token\n      role: \"vault-role\" # Role to use to generate certificates\n\n\nOnce this feature is enabled, Traefik Enterprise can use Vault to create and\nrenew all your TLS certificates, which in turn helps to ease management of your\nAPIs.\n\nDon’t hesitate to take a look at our documentation\n[https://doc.traefik.io/traefik-enterprise/v2.3/operations/vault-pki-guide/] for\nmore information about this feature.\n\nGitOps Automation\nMore and more organizations use GitOps tools to automate their deployments.\nCustomers have asked us for better integration of Traefik Enterprise with these\ntools, and with this release, we’ve delivered.\n\nTraefik Enterprise 2.3 brings a couple of features to improve our compliance\nwith popular GitOps tools (such as Argo CD [https://argoproj.github.io/argo-cd/]\n).\n\nYou can now download a customized Traefik Enterprise manifest to install a\ncluster in Kubernetes from a web service\n[https://doc.traefik.io/traefik-enterprise/v2.3/installing/kubernetes/gitops/#custom-installation-parameters]\n. Additionally, you can provide your static configuration in a Kubernetes\nConfigMap\n[https://doc.traefik.io/traefik-enterprise/v2.3/installing/kubernetes/gitops/#installation]\n, so the configuration can be discovered and automatically reloaded by Traefik\nEnterprise.\n\nIf you’re interested in the feature, follow our step by step installation\ndocumentation\n[https://doc.traefik.io/traefik-enterprise/v2.3/installing/kubernetes/gitops/] \nand try it out for yourself.\n\nSpeed Up Your Traffic with HTTP Caching\nHaving an infrastructure that can manage all of your traffic is a good thing.\nBut having this infrastructure optimized for your needs is even better.\n\nWith this in mind, Traefik Enterprise 2.3 introduces a new HTTP Cache middleware\n[https://doc.traefik.io/traefik-enterprise/v2.3/middlewares/http-cache/] based\non RFC 7234 [https://tools.ietf.org/html/rfc7234]. It speeds up your external\ntraffic and optimizes your internal traffic by caching HTTP responses in Traefik\nEnterprise proxies. Thus, you can reduce the workload on your services for most\nHTTP requests.\n\nYou just have to set this middleware on your router and Traefik Enterprise will\nstart improving your response times automatically:\n\n# Dynamic Configuration\nhttp:\n  middlewares:\n    test-http-cache:\n      plugin:\n        httpCache:\n          maxTtl: 600\n          memory:\n            limit: \"3Gi\"\n\n\nAPI Portal for Developers\nDeploying a microservice architecture means managing infrastructure with many\nAPIs. These APIs are typically provided by multiple teams in the organization\nand they are often exposed to external partners.\n\nBut how to share the APIs information with all the involved parties? That's\nwhere Traefik Enterprise 2.3 comes in. \n\nWith this new release, you need only describe your APIs’ specifications in the\npopular OpenAPI [https://www.openapis.org/] format and expose them using Traefik\nEnterprise’s new API portal feature:\n\n# Static Configuration\napiportal:\n  url: spec.json\n\n\nWith just a few lines of configuration, your API specification is reachable from\nyour service.\n\nNeed to monitor all your APIs at a glance? No worries, Traefik Enterprise\nprovides you a dedicated web UI.\n\n\nWhat's Next?\nWith the addition of Vault support, Traefik Enterprise adds support for\nenterprise authentication protocols and Let’s Encrypt to its portfolio of\nsecurity capabilities.\n\nIn future releases, we’ll continue to develop enterprise-specific features to\nsolve networking issues for companies who choose Traefik Enterprise.\n\nTake a closer look at Traefik Enterprise’s features to learn more\n[https://traefik.io/traefik-enterprise/]. If you want to test drive this new\nversion, sign up for a free trial of Traefik Enterprise 2.3 today\n[https://info.traefik.io/get-traefik-enterprise-free-for-30-days].","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/10/Blog@2x.jpg\" class=\"kg-image\" alt=\"Traefik Enterprise 2.3 Arrives with Vault Support, GitOps Compliance, and More\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/10/Blog@2x.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/10/Blog@2x.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/10/Blog@2x.jpg 1600w, https://containous.ghost.io/content/images/2020/10/Blog@2x.jpg 2400w\" sizes=\"(min-width: 720px) 720px\"></figure><p>We are pleased to announce that a new version of Traefik Enterprise is here, bringing with it an array of new capabilities. Among the new features in this latest release are integration with Vault, a new way to automate Traefik Enterprise installation, support for HTTP caching, and an API portal.</p><h2 id=\"secure-your-infrastructure-in-a-vault\">Secure Your Infrastructure in a Vault</h2><p>The more APIs your infrastructure contains, the more complicated TLS certificate management becomes.</p><!--kg-card-begin: markdown--><p>To solve this problem, many companies have used <a href=\"https://www.vaultproject.io/\" target=\"_blank\" rel=\"nofollow\">Vault</a> to manage their certificates securely. Customers have asked us to help them easily serve these certificates using Traefik Enterprise, and this is now possible with Traefik Enterprise 2.3.</p>\n<!--kg-card-end: markdown--><h3 id=\"vault-as-a-provider\">Vault as a Provider</h3><p>Traefik Enterprise has always been able to read certificates from key-value stores such as Consul or etcd. It’s now possible to use <a href=\"https://doc.traefik.io/traefik-enterprise/v2.3/providers/vault-kv/\">Vault in the same way</a>, thanks for the new Vault provider in Traefik Enterprise 2.3.</p><p>Configure your Traefik Enterprise cluster to reach your Vault server and it will detect the certificates to serve them:</p><!--kg-card-begin: markdown--><pre><code class=\"language-yaml\"># Static Configuration\nproviders:\n  plugin:\n    vault:\n      url: &quot;http://127.0.0.1:8200&quot; # Vault server URL\n      token: &quot;s.CUDDqqjiIFXF60KVSeJOxeb5&quot; # Vault Authentication Token\n</code></pre>\n<!--kg-card-end: markdown--><p>As usual with Traefik Enterprise, the configuration will be refreshed automatically each time you insert or delete certificates in your Vault server.</p><h3 id=\"vault-pki-support\">Vault PKI Support</h3><p>Many organizations use Vault to generate TLS certificates on the fly using its public key infrastructure (PKI) feature. Now you can take advantage of this capability with Traefik Enterprise.</p><p>Based on our experience with Let’s Encrypt, we created a new <a href=\"https://doc.traefik.io/traefik-enterprise/v2.3/tls/vault-pki/\">certificate resolver</a> to integrate Traefik Enterprise with Vault PKI.</p><!--kg-card-begin: markdown--><pre><code class=\"language-yaml\"># Static Configuration\ncertificatesResolvers:\n  vaultResolver:\n    vault:\n      url: &quot;http://127.0.0.1:8200&quot; # Vault server URL\n      token: &quot;s.CUDDqqjiIFXF60KVSeJOxeb5&quot; # Vault Authentication Token\n      role: &quot;vault-role&quot; # Role to use to generate certificates\n</code></pre>\n<!--kg-card-end: markdown--><p>Once this feature is enabled, Traefik Enterprise can use Vault to create and renew all your TLS certificates, which in turn helps to ease management of your APIs.</p><p>Don’t hesitate to take a look at our <a href=\"https://doc.traefik.io/traefik-enterprise/v2.3/operations/vault-pki-guide/\">documentation</a> for more information about this feature.</p><h2 id=\"gitops-automation\">GitOps Automation</h2><p>More and more organizations use GitOps tools to automate their deployments. Customers have asked us for better integration of Traefik Enterprise with these tools, and with this release, we’ve delivered.</p><!--kg-card-begin: markdown--><p>Traefik Enterprise 2.3 brings a couple of features to improve our compliance with popular GitOps tools (such as <a href=\"https://argoproj.github.io/argo-cd/\" target=\"_blank\" rel=\"nofollow\">Argo CD</a>).</p>\n<!--kg-card-end: markdown--><p>You can now download a customized Traefik Enterprise manifest to install a cluster in Kubernetes from <a href=\"https://doc.traefik.io/traefik-enterprise/v2.3/installing/kubernetes/gitops/#custom-installation-parameters\">a web service</a>. Additionally, you can provide your <a href=\"https://doc.traefik.io/traefik-enterprise/v2.3/installing/kubernetes/gitops/#installation\">static configuration in a Kubernetes ConfigMap</a>, so the configuration can be discovered and automatically reloaded by Traefik Enterprise.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh4.googleusercontent.com/-Pa5DLSEh9dMm66du3HKBOh0T7XCGlLlE8qkUAMB1HzQSN5zcl4o2swUFEEgHHH_e7T6S1XsoIhA8akMiUmPM0mbb35uqpokH2Ysp9x1HKqtU8-escEqiRqNrxte3tcuzCZzjG7o\" class=\"kg-image\" alt=\"Traefik Enterprise as viewed in Argo CD\"></figure><p>If you’re interested in the feature, <a href=\"https://doc.traefik.io/traefik-enterprise/v2.3/installing/kubernetes/gitops/\">follow our step by step installation documentation</a> and try it out for yourself.</p><h2 id=\"speed-up-your-traffic-with-http-caching\">Speed Up Your Traffic with HTTP Caching</h2><p>Having an infrastructure that can manage all of your traffic is a good thing. But having this infrastructure optimized for your needs is even better.</p><!--kg-card-begin: markdown--><p>With this in mind, Traefik Enterprise 2.3 introduces a new <a href=\"https://doc.traefik.io/traefik-enterprise/v2.3/middlewares/http-cache/\">HTTP Cache middleware</a> based on <a href=\"https://tools.ietf.org/html/rfc7234\" target=\"_blank\" rel=\"nofollow\">RFC 7234</a>. It speeds up your external traffic and optimizes your internal traffic by caching HTTP responses in Traefik Enterprise proxies. Thus, you can reduce the workload on your services for most HTTP requests.</p>\n<!--kg-card-end: markdown--><p>You just have to set this middleware on your router and Traefik Enterprise will start improving your response times automatically:</p><!--kg-card-begin: markdown--><pre><code class=\"language-yaml\"># Dynamic Configuration\nhttp:\n  middlewares:\n    test-http-cache:\n      plugin:\n        httpCache:\n          maxTtl: 600\n          memory:\n            limit: &quot;3Gi&quot;\n</code></pre>\n<!--kg-card-end: markdown--><h2 id=\"api-portal-for-developers\">API Portal for Developers</h2><p>Deploying a microservice architecture means managing infrastructure with many APIs. These APIs are typically provided by multiple teams in the organization and they are often exposed to external partners.</p><p>But how to share the APIs information with all the involved parties? That's where Traefik Enterprise 2.3 comes in. </p><!--kg-card-begin: markdown--><p>With this new release, you need only describe your APIs’ specifications in the popular <a href=\"https://www.openapis.org/\" target=\"_blank\" rel=\"nofollow\">OpenAPI</a> format and expose them using Traefik Enterprise’s new API portal feature:</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><pre><code class=\"language-yaml\"># Static Configuration\napiportal:\n  url: spec.json\n</code></pre>\n<!--kg-card-end: markdown--><p>With just a few lines of configuration, your API specification is reachable from your service.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh5.googleusercontent.com/PyheB6IehP5nZYC1A-g8MPqFir_xQDUAeeQQg22FnVo4jgzizDsq82Soy4ZRnu7TyNV3RlrsCJ3gWbfqtwn1BYOySEjLvvWkAiyNn-naYo0aRRJ5Hs0zWgh9d0_rEyOCKy22NCNp\" class=\"kg-image\" alt=\"API specification as seen from the Traefik Enterprise API portal\"></figure><p>Need to monitor all your APIs at a glance? No worries, Traefik Enterprise provides you a dedicated web UI.<br></p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh3.googleusercontent.com/qjEqe2DVQD_pfr8V3ls4bLffXgwKtcX-J_ZnS_UO4V3plp8mrUzLzjDoUoVYm7i3aI_OvPzx7p5pYE9-Z8Ap8aWPIuSvUYVJHrh72HuHSzPTwhUQBMVQCQWXxZz5nK5u-ksffUwM\" class=\"kg-image\" alt=\"Traefik Enterprise API portal dashboard\"></figure><h2 id=\"what-s-next\">What's Next?</h2><p>With the addition of Vault support, Traefik Enterprise adds support for enterprise authentication protocols and Let’s Encrypt to its portfolio of security capabilities.</p><p>In future releases, we’ll continue to develop enterprise-specific features to solve networking issues for companies who choose Traefik Enterprise.</p><p>Take a closer look at <a href=\"https://traefik.io/traefik-enterprise/\">Traefik Enterprise’s features to learn more</a>. If you want to test drive this new version, <a href=\"https://info.traefik.io/get-traefik-enterprise-free-for-30-days\">sign up for a free trial of Traefik Enterprise 2.3 today</a>.</p>","url":"https://containous.ghost.io/blog/traefik-enterprise-2-3-arrives-with-vault-support-gitops-compliance-and-more/","canonical_url":null,"uuid":"a8bb7241-7ef4-4fdb-af13-5f2493b42fbf","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f88c505c254310039a24349","reading_time":4}},{"node":{"id":"Ghost__Post__5f61ed21a72a090039800f23","title":"Announcing Traefik Mesh 1.4 - New Name, New Features","slug":"announcing-traefik-mesh-1-4-new-name-new-features","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/09/Announcing-Traefik-Mesh-1.4---New-Name--New-Features-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/2bf88b41a1527a3d01d0b0e5af828d57/47498/Announcing-Traefik-Mesh-1.4---New-Name--New-Features-1.jpg","srcSet":"/static/2bf88b41a1527a3d01d0b0e5af828d57/9dc27/Announcing-Traefik-Mesh-1.4---New-Name--New-Features-1.jpg 300w,\n/static/2bf88b41a1527a3d01d0b0e5af828d57/4fe8c/Announcing-Traefik-Mesh-1.4---New-Name--New-Features-1.jpg 600w,\n/static/2bf88b41a1527a3d01d0b0e5af828d57/47498/Announcing-Traefik-Mesh-1.4---New-Name--New-Features-1.jpg 1200w,\n/static/2bf88b41a1527a3d01d0b0e5af828d57/52258/Announcing-Traefik-Mesh-1.4---New-Name--New-Features-1.jpg 1800w,\n/static/2bf88b41a1527a3d01d0b0e5af828d57/a41d1/Announcing-Traefik-Mesh-1.4---New-Name--New-Features-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Traefik Mesh 1.4 brings some under-the-hood changes and new features, including support for a new version of the Service Mesh Interface (SMI) specification, enabling filtering by headers and more.","custom_excerpt":"Traefik Mesh 1.4 brings some under-the-hood changes and new features, including support for a new version of the Service Mesh Interface (SMI) specification, enabling filtering by headers and more.","visibility":"public","created_at_pretty":"16 September, 2020","published_at_pretty":"October 1, 2020","updated_at_pretty":"19 October, 2020","created_at":"2020-09-16T10:46:57.000+00:00","published_at":"2020-10-01T14:17:00.000+00:00","updated_at":"2020-10-19T17:22:48.000+00:00","meta_title":"Announcing Traefik Mesh 1.4 - New Name, New Features","meta_description":"Traefik Mesh 1.4 brings some under-the-hood changes, including support for a new version of the SMI specification, enabling filtering by headers and more.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/09/Announcing-Traefik-Mesh-1.4---New-Name--New-Features---Twitter.png","twitter_title":null,"authors":[{"name":"Manuel Zapf","slug":"manuel","bio":null,"profile_image":"https://containous.ghost.io/content/images/2019/11/b_manuel-zapf-foto.1024x1024.png","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Manuel Zapf","slug":"manuel","bio":null,"profile_image":"https://containous.ghost.io/content/images/2019/11/b_manuel-zapf-foto.1024x1024.png","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Today, we're renaming the Maesh project to Traefik Mesh, and this corresponds\nwith the renaming of the company behind the project to Traefik Labs. You can\nlearn more about the company-wide rebranding effort here\n[https://traefik.io/blog/traefik-labs-incubating-the-future-of-cloud-native-networking/]\n.\n\nIn addition to the renaming, Traefik Mesh 1.4 also brings some under-the-hood\nchanges and new features, including support for a new version of the Service\nMesh Interface (SMI) specification, enabling filtering by headers and more.\n\nRenaming of the Project\nAs mentioned, the project is now called Traefik Mesh. The name change includes\nsome changes in the project configuration as well. You'll notice that the\nannotation prefix, the binary name, the prefix for environment variables, and\nthe configuration file's default name have all changed.\n\nMore importantly, we changed the DNS name to opt-in into the mesh usage from \n.maesh to .traefik.mesh. However, we made all of it backward compatible, so you\nshould not encounter problems while transitioning from Maesh to Traefik Mesh.\nMore information about the migration path is available in the documentation\n[https://doc.traefik.io/traefik-mesh/migration/traefik-mesh-v1/#traefik-mesh-v14]\n.\n\nGoing Back to Traefik ... to Traefik\nFor Maesh 1.3, we designed and implemented a custom proxy based on Traefik so we\ncould evolve and iterate on the technology quickly. However, the capabilities we\nneeded for this evolution have since all been introduced upstream into Traefik,\nallowing us to fall back to regular Traefik Proxy nodes for service\ncommunication. With this 1.4 release, Traefik Mesh now uses the standard Traefik\nimage distribution as its service mesh proxy, which means Traefik Proxy features\nwill be available to environments that use Traefik Mesh.\n\nHeader Filtering for Traffic Targets\nWith the release of SMI specification v0.5.0\n[https://github.com/servicemeshinterface/smi-spec/releases/tag/v0.5.0],\nfiltering based on headers introduced in the Traffic Specs API v1alpha3\n[https://github.com/servicemeshinterface/smi-spec/blob/master/apis/traffic-specs/v1alpha3/traffic-specs.md] \nenables routing of requests based on arbitrary parameters such as browser types,\nand cookies. In addition to the headers, these are compatible with other\nfilters, including request types (GET, PUT, etc.) and paths. By utilizing these\nnew features, it's now possible to have additional flexibility when routing\nrequests.\n\nYou can read more about this feature's capabilities and find examples in the \nSMI\nspecification\n[https://github.com/servicemeshinterface/smi-spec/blob/master/apis/traffic-specs/v1alpha3/traffic-specs.md#http-header-filters] \ndocuments on Github.\n\nHeader and Path Filtering for Traffic Splits\nThe latest version of the spec empowers Traefik Mesh users to now run canary and\nA/B testing utilizing Headers, cookies, request type, and more. With the\nv1alpha3 release, Header filtering supports utilizing TrafficSplit and the\nmatches attribute linked to an HTTPRouteGroup. A real world example is available\nin the SMI specification document\n[https://github.com/servicemeshinterface/smi-spec/blob/master/apis/traffic-split/v1alpha3/traffic-split.md#specification]\n, covering how this capability allows you to split traffic based on the\naforementioned new filters.\n\nLooking Ahead\nThe team is continuing work implementing mTLS, and the goal is to launch that\nfeature with the next release. With the introduction of mTLS we anticipate some\nsignificant changes. We’ll be discussing those changes on Github and publishing\na Release Candidate, which needs your feedback. In addition to mTLS, we are\ncontinuing to work with the SMI group by incorporating the latest version of the\nspecification and contributing towards the implementation of routing UDP\ntraffic. We expect to have that ready for the next release as well.\n\nWe love hearing from the community on how you’re using Traefik Mesh today in\nyour environments and what features you’d like to see in the future. Let us know\nby opening a Feature Request or reaching out to us on our community forums.\n\nUseful links\n * Website [https://traefik.io/traefik-mesh/]\n * Documentation [https://doc.traefik.io/traefik-mesh/]\n * Github [https://traefik.io/traefik-mesh/]\n * Community Forum [https://community.traefik.io/c/traefik-mesh/15]","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/09/Announcing-Traefik-Mesh-1.4---New-Name--New-Features.jpg\" class=\"kg-image\" alt=\"Announcing Traefik Mesh 1.4 - New Name, New Features\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/Announcing-Traefik-Mesh-1.4---New-Name--New-Features.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/Announcing-Traefik-Mesh-1.4---New-Name--New-Features.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/09/Announcing-Traefik-Mesh-1.4---New-Name--New-Features.jpg 1600w, https://containous.ghost.io/content/images/2020/09/Announcing-Traefik-Mesh-1.4---New-Name--New-Features.jpg 2400w\" sizes=\"(min-width: 720px) 720px\"></figure><!--kg-card-begin: markdown--><p>Today, we're renaming the Maesh project to Traefik Mesh, and this corresponds with the renaming of the company behind the project to Traefik Labs. You can learn more about the company-wide rebranding effort <a href=\"https://traefik.io/blog/traefik-labs-incubating-the-future-of-cloud-native-networking/\" target=\"_blank\" rel=\"nofollow\">here</a>.</p>\n<!--kg-card-end: markdown--><p>In addition to the renaming, Traefik Mesh 1.4 also brings some under-the-hood changes and new features, including support for a new version of the Service Mesh Interface (SMI) specification, enabling filtering by headers and more.</p><h2 id=\"renaming-of-the-project\">Renaming of the Project</h2><p>As mentioned, the project is now called Traefik Mesh. The name change includes some changes in the project configuration as well. You'll notice that the annotation prefix, the binary name, the prefix for environment variables, and the configuration file's default name have all changed.</p><!--kg-card-begin: markdown--><p>More importantly, we changed the DNS name to opt-in into the mesh usage from <code>.maesh</code> to <code>.traefik.mesh</code>. However, we made all of it backward compatible, so you should not encounter problems while transitioning from Maesh to Traefik Mesh. More information about the migration path is available <a href=\"https://doc.traefik.io/traefik-mesh/migration/traefik-mesh-v1/#traefik-mesh-v14\" target=\"_blank\"  rel=\"nofollow\">in the documentation</a>.</p>\n<!--kg-card-end: markdown--><h2 id=\"going-back-to-traefik-to-traefik\">Going Back to Traefik ... to Traefik</h2><p>For Maesh 1.3, we designed and implemented a custom proxy based on Traefik so we could evolve and iterate on the technology quickly. However, the capabilities we needed for this evolution have since all been introduced upstream into Traefik, allowing us to fall back to regular Traefik Proxy nodes for service communication. With this 1.4 release, Traefik Mesh now uses the standard Traefik image distribution as its service mesh proxy, which means Traefik Proxy features will be available to environments that use Traefik Mesh.</p><h2 id=\"header-filtering-for-traffic-targets\">Header Filtering for Traffic Targets</h2><!--kg-card-begin: markdown--><p>With the release of <a href=\"https://github.com/servicemeshinterface/smi-spec/releases/tag/v0.5.0\" target=\"_blank\" rel=\"nofollow\">SMI specification v0.5.0</a>, filtering based on headers introduced in the <a href=\"https://github.com/servicemeshinterface/smi-spec/blob/master/apis/traffic-specs/v1alpha3/traffic-specs.md\" target=\"_blank\" rel=\"nofollow\">Traffic Specs API v1alpha3</a> enables routing of requests based on arbitrary parameters such as browser types, and cookies. In addition to the headers, these are compatible with other filters, including request types (GET, PUT, etc.) and paths. By utilizing these new features, it's now possible to have additional flexibility when routing requests.</p>\n<p>You can read more about this feature's capabilities and find examples in the <a href=\"https://github.com/servicemeshinterface/smi-spec/blob/master/apis/traffic-specs/v1alpha3/traffic-specs.md#http-header-filters\" target=\"_blank\" rel=\"nofollow\">SMI specification</a> documents on Github.</p>\n<!--kg-card-end: markdown--><h2 id=\"header-and-path-filtering-for-traffic-splits\">Header and Path Filtering for Traffic Splits</h2><!--kg-card-begin: markdown--><p>The latest version of the spec empowers Traefik Mesh users to now run canary and A/B testing utilizing Headers, cookies, request type, and more. With the v1alpha3 release, Header filtering supports utilizing TrafficSplit and the matches attribute linked to an HTTPRouteGroup. A real world example is available in the <a href=\"https://github.com/servicemeshinterface/smi-spec/blob/master/apis/traffic-split/v1alpha3/traffic-split.md#specification\" target=\"_blank\" rel=\"nofollow\">SMI specification document</a>, covering how this capability allows you to split traffic based on the aforementioned new filters.</p>\n<!--kg-card-end: markdown--><h2 id=\"looking-ahead\">Looking Ahead</h2><p>The team is continuing work implementing mTLS, and the goal is to launch that feature with the next release. With the introduction of mTLS we anticipate some significant changes. We’ll be discussing those changes on Github and publishing a Release Candidate, which needs your feedback. In addition to mTLS, we are continuing to work with the SMI group by incorporating the latest version of the specification and contributing towards the implementation of routing UDP traffic. We expect to have that ready for the next release as well.</p><p>We love hearing from the community on how you’re using Traefik Mesh today in your environments and what features you’d like to see in the future. Let us know by opening a Feature Request or reaching out to us on our community forums.</p><h2 id=\"useful-links\">Useful links</h2><ul><li><a href=\"https://traefik.io/traefik-mesh/\">Website</a></li><li><a href=\"https://doc.traefik.io/traefik-mesh/\">Documentation</a></li><li><a href=\"https://traefik.io/traefik-mesh/\">Github</a></li><li><a href=\"https://community.traefik.io/c/traefik-mesh/15\">Community Forum</a></li></ul>","url":"https://containous.ghost.io/blog/announcing-traefik-mesh-1-4-new-name-new-features/","canonical_url":null,"uuid":"988cdb3a-2da8-45c3-8271-4f8ac1cfe535","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f61ed21a72a090039800f23","reading_time":2}},{"node":{"id":"Ghost__Post__5f6531426bd3ed003915e5e9","title":"Announcing Traefik Enterprise 2.2, now an all-in-one ingress, API management, and service mesh solution","slug":"announcing-traefik-enterprise-2-2-now-an-all-in-one-ingress-api-management-and-service-mesh-solution","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/09/Announcing-Traefik-Enterprise-2.2-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/5c0105c02d13b29de458f43e7bf61629/47498/Announcing-Traefik-Enterprise-2.2-1.jpg","srcSet":"/static/5c0105c02d13b29de458f43e7bf61629/9dc27/Announcing-Traefik-Enterprise-2.2-1.jpg 300w,\n/static/5c0105c02d13b29de458f43e7bf61629/4fe8c/Announcing-Traefik-Enterprise-2.2-1.jpg 600w,\n/static/5c0105c02d13b29de458f43e7bf61629/47498/Announcing-Traefik-Enterprise-2.2-1.jpg 1200w,\n/static/5c0105c02d13b29de458f43e7bf61629/52258/Announcing-Traefik-Enterprise-2.2-1.jpg 1800w,\n/static/5c0105c02d13b29de458f43e7bf61629/a41d1/Announcing-Traefik-Enterprise-2.2-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Traefik Enterprise 2.2 includes integrated service mesh capabilities, an improved web UI, support for OpenID Connect authentication, and more.","custom_excerpt":"Traefik Enterprise 2.2 includes integrated service mesh capabilities, an improved web UI, support for OpenID Connect authentication, and more.","visibility":"public","created_at_pretty":"18 September, 2020","published_at_pretty":"September 29, 2020","updated_at_pretty":"12 October, 2020","created_at":"2020-09-18T22:14:26.000+00:00","published_at":"2020-09-29T14:00:00.000+00:00","updated_at":"2020-10-12T23:56:05.000+00:00","meta_title":"Announcing Traefik Enterprise 2.2 - now shipping with a service mesh","meta_description":"Traefik Enterprise 2.2 includes integrated service mesh capabilities, an improved web UI, support for OpenID Connect authentication, and more.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/09/Announcing-Traefik-Enterprise-2.2---Twitter.png","twitter_title":"Announcing Traefik Enterprise 2.2, now an all-in-one ingress, API management, and service mesh solution","authors":[{"name":"Nicolas Mengin","slug":"nicolas","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/02/wam.jpeg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Nicolas Mengin","slug":"nicolas","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/02/wam.jpeg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Traefik Enterprise 2.2 [https://traefik.io/traefik-enterprise/] is here,\nbringing with it a number of new features and enhancements to our\nenterprise-grade, cloud-native edge router built on Traefik technology. This\nlatest release includes integrated service mesh capabilities, an improved web\nUI, support for OpenID Connect authentication, and more.\n\nIntegrated Service Mesh\nManaging a microservice architecture built on Kubernetes requires dealing with\nexternal and internal connections (sometimes called north-south and east-west\nconnections, respectively). An ingress controller is the software that routes\nthe north-south connections from the external network, while a service mesh is\nthe increasingly popular choice for managing east-west connections between\nservices on the internal network..\n\nThe usual case is to split the responsibilities between a separate ingress\ncontroller and service mesh. But the downside of this architecture is that it\nmeans that you have to install, configure, and maintain two different tools,\noften with very different capabilities and configuration styles.\n\nThat's where Traefik Enterprise 2.2 comes in.\n\nTraefik Enterprise can now act as both a Kubernetes ingress controller, based on\nthe well-known Traefik edge router, and a service mesh based on Traefik Mesh,\nthe lightweight and simpler service mesh.\n\nThus, Traefik Enterprise simplifies your workflow:\n\n * It enables you to install both your ingress controller and your service mesh\n   with a single command\n * It requires a single configuration file to manage them together\n * It comes with a dashboard to monitor your whole network environment easily\n\nTraefik Enterprise’s service mesh is designed to be non-invasive. It requires no\nsidecar containers and does not modify your Kubernetes objects, and it’s 100%\nopt-in.\n\nTake advantage of this feature by following the comprehensive guide in the\ndocumentation.\n[https://doc.traefik.io/traefik-enterprise/operations/service-mesh/]\n\nImproved WebUI\nThe key to managing microservices infrastructure is monitoring. You can’t fix\nthe problems in your infrastructure if you don’t know what and where they are.\n\nTo this end, we’ve updated the Traefik Enterprise dashboard with features that\nallow you to monitor your cluster alerts at a glance.\n\nIf an error occurs in your cluster, your services, routers, or middlewares\nconfiguration, it will be reported on the new welcome page. From there, you will\nbe able to navigate to the error source to fix it.\n\nAdditionally, if you choose to enable the new service mesh option, Traefik\nEnterprise 2.2’s enhanced dashboard provides a diagram to monitor your service\nmesh connections.\n\nUsing it, you won't have to read through all of your Kubernetes configuration\nfiles to know why your Kubernetes services don’t communicate as expected!\n\nOpenID Connect\nWhether you expose one API or hundreds, if you want to sleep well at night, you\nwill have to secure your infrastructure. Authentication is a critical component\nof this.\n\nTraefik Enterprise has acknowledged this need. That's why, on top of the\nexisting authentication middlewares (such as LDAP, OAuth 2.0 token\nintrospection, and JWT), v2.2 adds a new OpenID Connect (OIDC) middleware\n[https://doc.traefik.io/traefik-enterprise/middlewares/oidc/].\n\nOIDC [https://openid.net/connect/] is a very popular framework built on top of\nOAuth 2.0 to handle authentication workflows.\n\nUsing the OIDC middleware, you'll secure your applications by delegating the\nauthentication to an external provider (such as GitHub, Google Accounts,\nLinkedIn, etc.) with a straightforward configuration. Here’s an example:\n\nhttp:\nmiddlewares:\nmyoidc:\nplugin:\noidcAuth:\nsource: googleSource\nredirectUrl: example.com/callback\nsession:\nsecret: mysupersecret123\n\n\nSecuring a service couldn’t be easier.\n\nTraefik Enterprise provider\nOne of the main advantages of Traefik Enterprise has always been the dynamic\nconfiguration. Are you a Kubernetes user? Create a CRD, and let the magic\nhappen. Docker user? Add labels to your container… et voilà!\n\nBut if you are a bare metal user, so far you have had to share your\nconfiguration file between machines manually. To ease your work, Traefik\nEnterprise 2.2 includes a new internal provider that allows you to set your\nconfiguration using the teectl CLI.\n\nYou need only execute one command and your cluster is automatically updated. The\nconfiguration is still stored in a file for ease of maintenance.\n\nteectl apply dyn-configuration.yaml\n\n\nWhat's Next?\nWith the addition of service mesh support, Traefik Enterprise brings important\nnew functionality on top of its existing high availability, distributed\nservices, and enterprise authentication protocols. We’ll continue to develop\nmore exciting features to benefit customers who choose Traefik Enterprise.\n\nTake a closer look at Traefik Enterprise’s features\n[https://traefik.io/traefik-enterprise/] to learn more. If you want to test\ndrive this new version, sign up for a free trial of Traefik Enterprise 2.2 today\n[https://info.traefik.io/get-traefik-enterprise-free-for-30-days].","html":"<figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2020/09/Announcing-Traefik-Enterprise-2.2.jpg\" class=\"kg-image\" alt=\"Announcing Traefik Enterprise 2.2\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/Announcing-Traefik-Enterprise-2.2.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/Announcing-Traefik-Enterprise-2.2.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/09/Announcing-Traefik-Enterprise-2.2.jpg 1600w, https://containous.ghost.io/content/images/2020/09/Announcing-Traefik-Enterprise-2.2.jpg 2400w\" sizes=\"(min-width: 1200px) 1200px\"></figure><p><a href=\"https://traefik.io/traefik-enterprise/\">Traefik Enterprise 2.2</a> is here, bringing with it a number of new features and enhancements to our enterprise-grade, cloud-native edge router built on Traefik technology. This latest release includes integrated service mesh capabilities, an improved web UI, support for OpenID Connect authentication, and more.</p><h2 id=\"integrated-service-mesh\"><strong>Integrated Service Mesh</strong></h2><p>Managing a microservice architecture built on Kubernetes requires dealing with external and internal connections (sometimes called north-south and east-west connections, respectively). An ingress controller is the software that routes the north-south connections from the external network, while a service mesh is the increasingly popular choice for managing east-west connections between services on the internal network..</p><p>The usual case is to split the responsibilities between a separate ingress controller and service mesh. But the downside of this architecture is that it means that you have to install, configure, and maintain two different tools, often with very different capabilities and configuration styles.</p><p>That's where Traefik Enterprise 2.2 comes in.</p><p>Traefik Enterprise can now act as both a Kubernetes ingress controller, based on the well-known Traefik edge router, and a service mesh based on Traefik Mesh, the lightweight and simpler service mesh.</p><p>Thus, Traefik Enterprise simplifies your workflow:</p><ul><li>It enables you to install both your ingress controller and your service mesh with a single command</li><li>It requires a single configuration file to manage them together</li><li>It comes with a dashboard to monitor your whole network environment easily</li></ul><p>Traefik Enterprise’s service mesh is designed to be non-invasive. It requires no sidecar containers and does not modify your Kubernetes objects, and it’s 100% opt-in.</p><p>Take advantage of this feature by following <a href=\"https://doc.traefik.io/traefik-enterprise/operations/service-mesh/\">the comprehensive guide in the documentation.</a></p><h2 id=\"improved-webui\"><strong>Improved WebUI</strong></h2><p>The key to managing microservices infrastructure is monitoring. You can’t fix the problems in your infrastructure if you don’t know what and where they are.</p><p>To this end, we’ve updated the Traefik Enterprise dashboard with features that allow you to monitor your cluster alerts at a glance.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh3.googleusercontent.com/jwBeNWko1GGuIZSIC4yhBQgNXQ4CI6PW2W_61Y25aaHfFTvWrHIzfUydIU-N8freBJ_WvHVvxir6UuEocZqfPzo0STBnEN__bQaa_mP_WpDJASJQ9E_m3vSrBtf97oAs8madpsk\" class=\"kg-image\" alt=\"Traefik Enteprise WebUI Dashboard\"></figure><p>If an error occurs in your cluster, your services, routers, or middlewares configuration, it will be reported on the new welcome page. From there, you will be able to navigate to the error source to fix it.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh3.googleusercontent.com/VCZR58NdsYD1HKVDhIyit9bVcp3CdywV9bpRX9fT1wcij4Qp2-3o_rbesk-Ncu-Yoio3QacblGbXiM2_i-purKbClCJLIBYoaB51iJ55-i6FkIl8ZqYL5hvW5_UoOBj4yWnpUiY\" class=\"kg-image\" alt=\"Traefik Enterprise WebUI Ingress\"></figure><p>Additionally, if you choose to enable the new service mesh option, Traefik Enterprise 2.2’s enhanced dashboard provides a diagram to monitor your service mesh connections.</p><p>Using it, you won't have to read through all of your Kubernetes configuration files to know why your Kubernetes services don’t communicate as expected!</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh5.googleusercontent.com/1tekIayHmgN5ZA1BjRwvxyPAD8_S684J6Qr-jK4g4-6ANNoo-Rs6k0qA7h0WAgIDEPxq3GOHLw9CfA9iqB5uXV2H7FRVZ2j3uQeiTyl_j4kizrqy50ggZpVW3gL2M6FsEMgjTa4\" class=\"kg-image\" alt=\"Traefik Enteprise WebUI Mesh\"></figure><h2 id=\"openid-connect\"><strong>OpenID Connect</strong></h2><p>Whether you expose one API or hundreds, if you want to sleep well at night, you will have to secure your infrastructure. Authentication is a critical component of this.</p><p>Traefik Enterprise has acknowledged this need. That's why, on top of the existing authentication middlewares (such as LDAP, OAuth 2.0 token introspection, and JWT), v2.2 adds a new <a href=\"https://doc.traefik.io/traefik-enterprise/middlewares/oidc/\">OpenID Connect (OIDC) middleware</a>.</p><!--kg-card-begin: markdown--><p><a href=\"https://openid.net/connect/\" target=\"_blank\" rel=\"nofollow\">OIDC</a> is a very popular framework built on top of OAuth 2.0 to handle authentication workflows.</p>\n<!--kg-card-end: markdown--><p>Using the OIDC middleware, you'll secure your applications by delegating the authentication to an external provider (such as GitHub, Google Accounts, LinkedIn, etc.) with a straightforward configuration. Here’s an example:</p><!--kg-card-begin: markdown--><pre><code class=\"language-yaml\">http:\nmiddlewares:\nmyoidc:\nplugin:\noidcAuth:\nsource: googleSource\nredirectUrl: example.com/callback\nsession:\nsecret: mysupersecret123\n</code></pre>\n<!--kg-card-end: markdown--><p>Securing a service couldn’t be easier.</p><h2 id=\"traefik-enterprise-provider\"><strong>Traefik Enterprise provider</strong></h2><p>One of the main advantages of Traefik Enterprise has always been the dynamic configuration. Are you a Kubernetes user? Create a CRD, and let the magic happen. Docker user? Add labels to your container… et voilà!</p><p>But if you are a bare metal user, so far you have had to share your configuration file between machines manually. To ease your work, Traefik Enterprise 2.2 includes a new internal provider that allows you to set your configuration using the teectl CLI.</p><p>You need only execute one command and your cluster is automatically updated. The configuration is still stored in a file for ease of maintenance.</p><!--kg-card-begin: markdown--><pre><code class=\"language-bash\">teectl apply dyn-configuration.yaml\n</code></pre>\n<!--kg-card-end: markdown--><h2 id=\"what-s-next\"><strong>What's Next?</strong></h2><p>With the addition of service mesh support, Traefik Enterprise brings important new functionality on top of its existing high availability, distributed services, and enterprise authentication protocols. We’ll continue to develop more exciting features to benefit customers who choose Traefik Enterprise.</p><p>Take a closer look at <a href=\"https://traefik.io/traefik-enterprise/\">Traefik Enterprise’s features</a> to learn more. If you want to test drive this new version, <a href=\"https://info.traefik.io/get-traefik-enterprise-free-for-30-days\">sign up for a free trial of Traefik Enterprise 2.2 today</a>.</p>","url":"https://containous.ghost.io/blog/announcing-traefik-enterprise-2-2-now-an-all-in-one-ingress-api-management-and-service-mesh-solution/","canonical_url":null,"uuid":"e9791a33-78cf-41fb-8f5c-d517fe1dd6f9","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f6531426bd3ed003915e5e9","reading_time":4}},{"node":{"id":"Ghost__Post__5f6c0a086bd3ed003915e724","title":"Introducing Traefik Pilot 1.0: the Traefik Control Center","slug":"introducing-traefik-pilot-1-0-one-place-to-manage-all-your-traefik-instances","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/09/Traefik-Pilot-the-control-center-for-Traefik-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/73f93d6e162817680e5d06dd1583b732/47498/Traefik-Pilot-the-control-center-for-Traefik-1.jpg","srcSet":"/static/73f93d6e162817680e5d06dd1583b732/9dc27/Traefik-Pilot-the-control-center-for-Traefik-1.jpg 300w,\n/static/73f93d6e162817680e5d06dd1583b732/4fe8c/Traefik-Pilot-the-control-center-for-Traefik-1.jpg 600w,\n/static/73f93d6e162817680e5d06dd1583b732/47498/Traefik-Pilot-the-control-center-for-Traefik-1.jpg 1200w,\n/static/73f93d6e162817680e5d06dd1583b732/52258/Traefik-Pilot-the-control-center-for-Traefik-1.jpg 1800w,\n/static/73f93d6e162817680e5d06dd1583b732/a41d1/Traefik-Pilot-the-control-center-for-Traefik-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Today, we’re announcing that Traefik Pilot 1.0 is available and ready to connect with all Traefik instances, everywhere.","custom_excerpt":"Today, we’re announcing that Traefik Pilot 1.0 is available and ready to connect with all Traefik instances, everywhere.","visibility":"public","created_at_pretty":"24 September, 2020","published_at_pretty":"September 24, 2020","updated_at_pretty":"12 October, 2020","created_at":"2020-09-24T02:52:56.000+00:00","published_at":"2020-09-24T15:38:23.000+00:00","updated_at":"2020-10-12T23:56:34.000+00:00","meta_title":"Introducing Traefik Pilot 1.0: the Traefik Control Center","meta_description":"Today, we’re announcing that Traefik Pilot 1.0 is available and ready to connect with all Traefik instances, everywhere.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/09/Traefik-Pilot-the-control-center-for-Traefik---Twitter.png","twitter_title":null,"authors":[{"name":"Pierre Erraud","slug":"pierre","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/09/pierre-erraud.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Pierre Erraud","slug":"pierre","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/09/pierre-erraud.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"In July, we debuted a preview release\n[https://traefik.io/blog/introducing-traefik-pilot-a-first-look-at-our-new-saas-control-platform-for-traefik/] \nof Traefik Pilot [https://traefik.io/traefik-pilot/], a new SaaS platform that\nextends the functionality of Traefik. Today, we’re announcing that Traefik Pilot\n1.0 is available and ready to connect with all Traefik instances, everywhere.\n\nTraefik is known for its extensive compatibility with third-party vendors and\nits ability to adapt to multiple topologies. Traefik Pilot extends this\nflexibility and ease-of-use beyond the data center to provide a similar\nexperience for the entire ecosystem of components that make up a complete\napplication. It achieves this in a number of ways.\n\nFirst, Traefik Pilot provides visibility into cloud-native architectures.\nContainerized applications and microservices are dynamic by nature, and they\ntypically involve multiple network connections linking diverse components. Apps\nteams want to know what is happening within their installations: to visualize\nthe history and durations of requests, to analyze changes in behavior, and to\nsee when load has peaked and for how long. Such capabilities are essential to\npinpoint the root causes of issues within the infrastructure.\n\nWhile visibility is good, however, being notified or alerted is better. Traefik\nPilot’s timely alerts allow operators to mitigate issues, apply processes, or\nanalyze anomalous situations in real time, which leads to higher availability\nand improved end user experience.\n\nIn addition to these features, Traefik Pilot also introduces the ability for\nTraefik operators to create their own plugins\n[https://traefik.io/blog/unleash-custom-networking-logic-with-traefik-plugins/],\nincluding custom middlewares, and easily find and share plugins with others\nthrough the Traefik Pilot online plugin catalog.\n\nTraefik Pilot 1.0 brings a number of enhancements since the release candidate.\nLet’s take a look at some of the most significant ones.\n\nImproved web UI\nWe heard users’ feedback from the preview release, and as a result, we have\ntransformed the UI to make the Traefik Pilot user experience even more\nstraightforward. We think you’ll agree that these modifications allow everyone\nto use Traefik Pilot in the most natural way possible.\n\nNew metrics dashboard\nWould you like metrics for your Traefik instances? Just connect your instances\nto Traefik Pilot, and voilà!\n\nStarting today, all instances registered in Traefik Pilot will benefit from this\nnew feature, which allows you to diagnose and record changes in the usage of the\ninstances or services behind Traefik through graphs spanning a day, a week, or a\nmonth.\n\nEnhanced alerts\nTraefik Pilot 1.0 offers two types of alerts. They can be enabled in your\nprofile settings and can be delivered either by email or through a webhook.\n\nFirst, Traefik Pilot can notify you when a Traefik instance no longer has access\nto the internet. If a connected Traefik instance fails to contact Traefik Pilot\nfor 5 minutes, it will be marked as unreachable in the Traefik Pilot dashboard.\nIf the instance still does not contact Traefik Pilot after 10 minutes, the\ninstance will disappear from the dashboard and you will be notified of the lack\nof connectivity..\n\nTraefik Pilot can also raise an alert when a security vulnerability is found in\nTraefik. Starting today, for any CVE involving Traefik, if your instance is\nconnected to Traefik Pilot and is vulnerable, you will receive a notification\nthrough the same communication channels.\n\nGrowing plugin ecosystem\nSince the preview release, Traefik Pilot has made it possible to extend the\nfunctionality of Traefik with plugins. We are proud and encouraged to see the\nplugins that have already been created by the community.\n\nPlugins are a feature that opens up a wide range of possibilities with Traefik.\nAlthough this feature is still experimental, we are looking forward to seeing\nhow the community around plugins continues to grow. To learn more about creating\nyour own plugins, consult the developer documentation\n[https://github.com/traefik/plugindemo].\n\nOnward and upward\nWe have a lot of ideas for the continuation of Traefik Pilot, including\nadditional types of alerts and more. \n\nOne particular area of focus is on multi-cluster management, with the aim of\nmaking it possible to easily manage multiple datacenters. Because most (but not\nall) HTTP traffic is now encrypted with TLS, we plan to provide tools for\nTraefik Pilot to simplify certificate management. \n\nWe are also working on connecting Traefik Enterprise to Traefik Pilot, to bring\nall the features of Traefik Pilot to your Traefik Enterprise instances. \n\nFinally, there will probably be one or more surprises. For now, we hope you\nenjoy all the features that Traefik Pilot 1.0 [https://pilot.traefik.io/] has to\noffer, and we welcome your feedback\n[https://community.traefik.io/c/traefik-pilot/18].\n\nUseful links\n * Traefik Pilot [https://traefik.io/traefik-pilot]\n * Get started [https://pilot.traefik.io/]\n * Pilot documentation [https://docs.traefik.io/v2.3/plugins/overview/]\n * Traefik [https://traefik.io/traefik/]\n * Community forum [https://community.containo.us/c/traefik/5]","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/09/Traefik-Pilot-the-control-center-for-Traefik.jpg\" class=\"kg-image\" alt=\"Introducing Traefik Pilot 1.0: the Traefik Control Center\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/Traefik-Pilot-the-control-center-for-Traefik.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/Traefik-Pilot-the-control-center-for-Traefik.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/09/Traefik-Pilot-the-control-center-for-Traefik.jpg 1600w, https://containous.ghost.io/content/images/2020/09/Traefik-Pilot-the-control-center-for-Traefik.jpg 2400w\" sizes=\"(min-width: 720px) 720px\"></figure><p>In July, we debuted a <a href=\"https://traefik.io/blog/introducing-traefik-pilot-a-first-look-at-our-new-saas-control-platform-for-traefik/\">preview release</a> of <a href=\"https://traefik.io/traefik-pilot/\">Traefik Pilot</a>, a new SaaS platform that extends the functionality of Traefik. Today, we’re announcing that Traefik Pilot 1.0 is available and ready to connect with all Traefik instances, everywhere.</p><p>Traefik is known for its extensive compatibility with third-party vendors and its ability to adapt to multiple topologies. Traefik Pilot extends this flexibility and ease-of-use beyond the data center to provide a similar experience for the entire ecosystem of components that make up a complete application. It achieves this in a number of ways.</p><p>First, Traefik Pilot provides visibility into cloud-native architectures. Containerized applications and microservices are dynamic by nature, and they typically involve multiple network connections linking diverse components. Apps teams want to know what is happening within their installations: to visualize the history and durations of requests, to analyze changes in behavior, and to see when load has peaked and for how long. Such capabilities are essential to pinpoint the root causes of issues within the infrastructure.</p><p>While visibility is good, however, being notified or alerted is better. Traefik Pilot’s timely alerts allow operators to mitigate issues, apply processes, or analyze anomalous situations in real time, which leads to higher availability and improved end user experience.</p><p>In addition to these features, Traefik Pilot also introduces the ability for Traefik operators to <a href=\"https://traefik.io/blog/unleash-custom-networking-logic-with-traefik-plugins/\">create their own plugins</a>, including custom middlewares, and easily find and share plugins with others through the Traefik Pilot online plugin catalog.</p><p>Traefik Pilot 1.0 brings a number of enhancements since the release candidate. Let’s take a look at some of the most significant ones.</p><h2 id=\"improved-web-ui\">Improved web UI</h2><p>We heard users’ feedback from the preview release, and as a result, we have transformed the UI to make the Traefik Pilot user experience even more straightforward. We think you’ll agree that these modifications allow everyone to use Traefik Pilot in the most natural way possible.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh5.googleusercontent.com/u6I9Ey-FC64mBgKTk9ywWLDvwXsn321r_5OQXYUuT2PBk7yXc7HsKPMbOUFDg4vMINBq7fuXt77SL0BO5QylRbaaLtjUmRH-wmRBN0lSk6rslkbfJl6PrSSHmv5VeOD4SiQ4DBA\" class=\"kg-image\" alt=\"Traefik Pilot Web UI\"></figure><h2 id=\"new-metrics-dashboard\">New metrics dashboard</h2><p>Would you like metrics for your Traefik instances? Just connect your instances to Traefik Pilot, and voilà!</p><p>Starting today, all instances registered in Traefik Pilot will benefit from this new feature, which allows you to diagnose and record changes in the usage of the instances or services behind Traefik through graphs spanning a day, a week, or a month.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh5.googleusercontent.com/GzICwYarm48ofOcT8G-lXWxhWKyH7HwYvdl05uKsQ_fFmTyzRkatHfgpto1TTh4rv7JJppjUhX4_Ong4HcRzQPLwNUbMOdthbJ4Q-BWYEMSAPFfk6CKRHp_nCmNlW1QA0T__uos\" class=\"kg-image\" alt=\"Traefik Pilot - Metrics\"></figure><h2 id=\"enhanced-alerts\">Enhanced alerts</h2><p>Traefik Pilot 1.0 offers two types of alerts. They can be enabled in your profile settings and can be delivered either by email or through a webhook.</p><p>First, Traefik Pilot can notify you when a Traefik instance no longer has access to the internet. If a connected Traefik instance fails to contact Traefik Pilot for 5 minutes, it will be marked as unreachable in the Traefik Pilot dashboard. If the instance still does not contact Traefik Pilot after 10 minutes, the instance will disappear from the dashboard and you will be notified of the lack of connectivity..</p><p>Traefik Pilot can also raise an alert when a security vulnerability is found in Traefik. Starting today, for any CVE involving Traefik, if your instance is connected to Traefik Pilot and is vulnerable, you will receive a notification through the same communication channels.</p><h2 id=\"growing-plugin-ecosystem\">Growing plugin ecosystem</h2><p>Since the preview release, Traefik Pilot has made it possible to extend the functionality of Traefik with plugins. We are proud and encouraged to see the plugins that have already been created by the community.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh3.googleusercontent.com/_c72__zIyl4c8BGJYXRRKGoy6Pb8JZh9WKBLbft_y4my0QN-WvNb0gdaThyKBqIBBImOUTqi5gqg4_JR3lSFokyMY8mwVjfby5r_HxXTM5m08vY3oZAIHyPW43LOZprJnXYtuL4\" class=\"kg-image\" alt=\"Traefik Pilot - Plugins\"></figure><p>Plugins are a feature that opens up a wide range of possibilities with Traefik. Although this feature is still experimental, we are looking forward to seeing how the community around plugins continues to grow. To learn more about creating your own plugins, consult the <a href=\"https://github.com/traefik/plugindemo\">developer documentation</a>.</p><h2 id=\"onward-and-upward\">Onward and upward</h2><p>We have a lot of ideas for the continuation of Traefik Pilot, including additional types of alerts and more. </p><p>One particular area of focus is on multi-cluster management, with the aim of making it possible to easily manage multiple datacenters. Because most (but not all) HTTP traffic is now encrypted with TLS, we plan to provide tools for Traefik Pilot to simplify certificate management. </p><p>We are also working on connecting Traefik Enterprise to Traefik Pilot, to bring all the features of Traefik Pilot to your Traefik Enterprise instances. </p><p>Finally, there will probably be one or more surprises. For now, we hope you enjoy all the features that <a href=\"https://pilot.traefik.io/\">Traefik Pilot 1.0</a> has to offer, and we <a href=\"https://community.traefik.io/c/traefik-pilot/18\">welcome your feedback</a>.</p><h2 id=\"useful-links\">Useful links</h2><ul><li><a href=\"https://traefik.io/traefik-pilot\">Traefik Pilot</a></li><li><a href=\"https://pilot.traefik.io/\">Get started</a></li><li><a href=\"https://docs.traefik.io/v2.3/plugins/overview/\">Pilot documentation</a></li><li><a href=\"https://traefik.io/traefik/\">Traefik</a></li><li><a href=\"https://community.containo.us/c/traefik/5\">Community forum</a></li></ul>","url":"https://containous.ghost.io/blog/introducing-traefik-pilot-1-0-one-place-to-manage-all-your-traefik-instances/","canonical_url":null,"uuid":"a6738098-d9e1-4748-afbd-aa1351fb99e4","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f6c0a086bd3ed003915e724","reading_time":4}},{"node":{"id":"Ghost__Post__5f61e3c3a72a090039800ee6","title":"Houston, we have Plugins! Traefik 2.3 Announcement","slug":"houston-we-have-plugins-traefik-2-3-announcement","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/09/Traefik2-3-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/d9c38c8baef3f8781df7d002f1b7005a/47498/Traefik2-3-1.jpg","srcSet":"/static/d9c38c8baef3f8781df7d002f1b7005a/9dc27/Traefik2-3-1.jpg 300w,\n/static/d9c38c8baef3f8781df7d002f1b7005a/4fe8c/Traefik2-3-1.jpg 600w,\n/static/d9c38c8baef3f8781df7d002f1b7005a/47498/Traefik2-3-1.jpg 1200w,\n/static/d9c38c8baef3f8781df7d002f1b7005a/52258/Traefik2-3-1.jpg 1800w,\n/static/d9c38c8baef3f8781df7d002f1b7005a/a41d1/Traefik2-3-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Traefik 2.3, the latest version of the most popular open source cloud native proxy, is now available. With plugins, ECS provider, and more!","custom_excerpt":"Traefik 2.3, the latest version of the most popular open source cloud native proxy, is now available. With plugins, ECS provider, and more!","visibility":"public","created_at_pretty":"16 September, 2020","published_at_pretty":"September 23, 2020","updated_at_pretty":"01 October, 2020","created_at":"2020-09-16T10:06:59.000+00:00","published_at":"2020-09-23T14:30:00.000+00:00","updated_at":"2020-10-01T15:17:34.000+00:00","meta_title":"Houston, we have Plugins! Traefik 2.3 Announcement","meta_description":"Traefik 2.3 brings in new capabilities, including the Traefik Plugin system, support for Amazon ECS and support for the Kubernetes IngressClass API resource","og_description":null,"og_image":null,"og_title":null,"twitter_description":"Traefik 2.3 brings in new capabilities, including the Traefik Plugin system, integration with Traefik Pilot, support for Amazon ECS, and support for the Kubernetes IngressClass API resource launched in Kubernetes 1.18. ","twitter_image":"https://containous.ghost.io/content/images/2020/09/Traefik2-3-Twitter.png","twitter_title":null,"authors":[{"name":"Manuel Zapf","slug":"manuel","bio":null,"profile_image":"https://containous.ghost.io/content/images/2019/11/b_manuel-zapf-foto.1024x1024.png","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Manuel Zapf","slug":"manuel","bio":null,"profile_image":"https://containous.ghost.io/content/images/2019/11/b_manuel-zapf-foto.1024x1024.png","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Today we're proud to announce the latest release of Traefik! Traefik 2.3 brings\nin new capabilities, including the Traefik Plugin system, integration with\nTraefik Pilot, support for Amazon ECS, and support for the Kubernetes\nIngressClass API resource launched in Kubernetes 1.18. Let’s dive in and explore\nwhat these features mean for you, our users.\n\nTraefik Plugins\nWith Go 1.8's release in March 2017, our community's most requested feature\n[https://github.com/traefik/traefik/issues/1336] has been to add middleware\nplugin support to Traefik. Well, it's here. Traefik now supports the ability to\nadd custom middleware functionality to your environment easily. Today, several\nuseful plugins in the marketplace are waiting for you to use, such as BlockPath\n[https://pilot.traefik.io/plugins/276809782519661056/block-path] and Deny Ip\n[https://pilot.traefik.io/plugins/276812076107694611/deny-ip-plugin]. Plugins\nare designed to function and operate just like any other native middlewares\n[https://docs.traefik.io/middlewares/overview/] already distributed with\nTraefik.\n\nThe plugin system operates in conjunction with Traefik Pilot, which maintains a\ncatalog of community created plugins and a hash for each version published by\nthe author. For security, Pilot ensures that you are running the actual code\ncommitted and tagged on GitHub every time Traefik launches.\n\nCustom middleware plugins for the community, by the communityYou can either get started\n[https://doc.traefik.io/traefik/v2.3/plugins/using-plugins/] using the existing\nplugins marketplace [https://pilot.traefik.io/plugins] or create your own plugin\n[https://github.com/traefik/plugindemo]. We can't wait to see what the community\nis going to build!\n\nTraefik Pilot Integration\nTraefik Pilot is a managed SaaS application offered by Traefik Labs that helps\noperators of Traefik ensure their environments are operating efficiently and\nsecurely. This new integration brings users not only the plugins mentioned above\nbut a centralized platform that provides performance metrics, security, and\nupdate notifications in real time. You can get started with Traefik Pilot today\nby signing up and configuring your Traefik instances with a uniquely generated\nkey.\n\nTraefik Pilot automatically collects performance metrics from your Traefik\ninstancesOnce registered and activated, your Traefik instance will periodically\nsend information to Traefik Pilot, providing you with insight into the\nperformance, security, and availability of your Traefik instances.\n\nTraefik Pilot will monitor the following data points on every Traefik instance\nyou register:\n\n * Health Status and Availability Alerts\n * Version Information and Security Alerts\n * Performance Metrics * Requests per second\n    * Total requests\n    * Request duration\n   \n   \n\nFor additional details about Traefik Pilot and the features available upon\nregistration of your Traefik instance, please check out the product announcement\nfor Pilot.\n\nAmazon ECS Provider\nAmazon ECS is a managed orchestration service that can be used either on its own\nor in conjunction with Fargate, the AWS serverless compute engine for\ncontainers. The ECS provider for Traefik allows for the dynamic configuration of\nthe provider using labels attached to your ECS containers.\n\nThis feature was contributed by alekitto [https://github.com/alekitto], a\ncommunity member, who refactored code from v1.x to support ECS by implementing\nthe provider for the latest versions of Traefik. Thanks to his time and effort,\nthe rest of the Traefik community can benefit while running their ECS workloads.\n\nMore information on how to activate or configure the provider is available here: \nhttps://doc.traefik.io/v2.3/providers/ecs/\n[https://doc.traefik.io/traefik/v2.3/providers/ecs/]\n\nKubernetes IngressClass\nWith the release of Kubernetes 1.18, improvements made to the Ingress API\n[https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/] \nhave made possible new capabilities in Traefik 2.3. This release includes the\nability to specify how Ingress paths should match, and features a new\nIngressClass resource that allows users to specify how controllers should\nimplement Ingress resources. You can use these new APIs in Traefik with this\nrelease, which means better interoperability and vendor neutrality.\n\nAlso, Ingress resources utilizing the new pathType field will be supported\naccordingly. More information on how to utilize the support for the new\nIngressClass resource can be found both in our documentation\n[https://doc.traefik.io/traefik/providers/kubernetes-ingress/#ingressclass] and\nthe Kubernetes official docs\n[https://v1-18.docs.kubernetes.io/docs/concepts/services-networking/ingress/].\n\nThe Road Ahead\nWe're excited about the work we have ahead of us for the next release, Traefik\n2.4. We are planning to revamp the Getting Started guides for 2.x, and with that\nwill include common use case examples with introductions to more complex topics\nfor popular platforms such as Kubernetes and Docker Swarm. This work comes after\nhearing from the community how we could improve the documentation and begin with\nmore transparent explanations on the new configuration approaches and how to get\nstarted with it.\n\nAlso, we're looking at the configuration of Traefik itself and how we can\nabstract everyday use cases into a simpler and easy to use format. You'll be\nhearing more about this and other enhancements to Traefik, including support for\nthe latest Kubernetes Service API that the team at Google has been working on,\nand features to support the inclusion of mTLS in Traefik Mesh.\n\nWe love hearing from the community on how you're using Traefik and what features\nyou'd like to see in the future. Let us know by opening a Feature Request\n[https://github.com/traefik/traefik/issues/new?template=Feature_request.md] or\nreaching out to us on our community forums.\n\nUseful links\n * Website [https://traefik.io/traefik/]\n * Documentation [https://doc.traefik.io/traefik/v2.3/]\n * Github [https://github.com/traefik/traefik]\n * Forum [https://community.traefik.io/c/traefik/traefik-v2]","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/09/Traefik2-3.jpg\" class=\"kg-image\" alt=\"Traefik 2.3 features integration with Traefik Pilot, Middleware Plugins, ECS provider, and support for K8S IngressClass\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/Traefik2-3.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/Traefik2-3.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/09/Traefik2-3.jpg 1600w, https://containous.ghost.io/content/images/2020/09/Traefik2-3.jpg 2400w\" sizes=\"(min-width: 720px) 720px\"></figure><p>Today we're proud to announce the latest release of Traefik! Traefik 2.3 brings in new capabilities, including the Traefik Plugin system, integration with Traefik Pilot, support for Amazon ECS, and support for the Kubernetes IngressClass API resource launched in Kubernetes 1.18. Let’s dive in and explore what these features mean for you, our users.</p><h3 id=\"traefik-plugins\">Traefik Plugins</h3><p>With Go 1.8's release in March 2017, our community's <a href=\"https://github.com/traefik/traefik/issues/1336\">most requested feature</a> has been to add middleware plugin support to Traefik. Well, it's here. Traefik now supports the ability to add custom middleware functionality to your environment easily. Today, several useful plugins in the marketplace are waiting for you to use, such as <a href=\"https://pilot.traefik.io/plugins/276809782519661056/block-path\">BlockPath</a> and <a href=\"https://pilot.traefik.io/plugins/276812076107694611/deny-ip-plugin\">Deny Ip</a>. Plugins are designed to function and operate just like any other native <a href=\"https://docs.traefik.io/middlewares/overview/\">middlewares</a> already distributed with Traefik.</p><p>The plugin system operates in conjunction with Traefik Pilot, which maintains a catalog of community created plugins and a hash for each version published by the author. For security, Pilot ensures that you are running the actual code committed and tagged on GitHub every time Traefik launches.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://containous.ghost.io/content/images/2020/09/image-3.png\" class=\"kg-image\" alt=\"Custom middleware plugins for the community, by the community\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/image-3.png 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/image-3.png 1000w, https://containous.ghost.io/content/images/2020/09/image-3.png 1359w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Custom middleware plugins for the community, by the community</figcaption></figure><p>You can either <a href=\"https://doc.traefik.io/traefik/v2.3/plugins/using-plugins/\">get started</a> using the <a href=\"https://pilot.traefik.io/plugins\">existing plugins marketplace</a> or <a href=\"https://github.com/traefik/plugindemo\">create your own plugin</a>. We can't wait to see what the community is going to build!</p><h3 id=\"traefik-pilot-integration\">Traefik Pilot Integration</h3><p>Traefik Pilot is a managed SaaS application offered by Traefik Labs that helps operators of Traefik ensure their environments are operating efficiently and securely. This new integration brings users not only the plugins mentioned above but a centralized platform that provides performance metrics, security, and update notifications in real time. You can get started with Traefik Pilot today by signing up and configuring your Traefik instances with a uniquely generated key.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://containous.ghost.io/content/images/2020/09/image-2.png\" class=\"kg-image\" alt=\"Traefik Pilot automatically collects performance metrics from your Traefik instances\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/09/image-2.png 600w, https://containous.ghost.io/content/images/size/w1000/2020/09/image-2.png 1000w, https://containous.ghost.io/content/images/2020/09/image-2.png 1359w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Traefik Pilot automatically collects performance metrics from your Traefik instances</figcaption></figure><p>Once registered and activated, your Traefik instance will periodically send information to Traefik Pilot, providing you with insight into the performance, security, and availability of your Traefik instances.</p><p>Traefik Pilot will monitor the following data points on every Traefik instance you register:</p><!--kg-card-begin: markdown--><ul>\n<li>Health Status and Availability Alerts</li>\n<li>Version Information and Security Alerts</li>\n<li>Performance Metrics\n<ul>\n<li>Requests per second</li>\n<li>Total requests</li>\n<li>Request duration</li>\n</ul>\n</li>\n</ul>\n<!--kg-card-end: markdown--><p>For additional details about Traefik Pilot and the features available upon registration of your Traefik instance, please check out the product announcement for Pilot.</p><h2 id=\"amazon-ecs-provider\"><strong>Amazon ECS Provider</strong></h2><p>Amazon ECS is a managed orchestration service that can be used either on its own or in conjunction with Fargate, the AWS serverless compute engine for containers. The ECS provider for Traefik allows for the dynamic configuration of the provider using labels attached to your ECS containers.</p><!--kg-card-begin: markdown--><p>This feature was contributed by <a href=\"https://github.com/alekitto\" target=\"_blank\" rel=\"nofollow\">alekitto</a>, a community member, who refactored code from v1.x to support ECS by implementing the provider for the latest versions of Traefik. Thanks to his time and effort, the rest of the Traefik community can benefit while running their ECS workloads.</p>\n<!--kg-card-end: markdown--><p>More information on how to activate or configure the provider is available here: <a href=\"https://doc.traefik.io/traefik/v2.3/providers/ecs/\">https://doc.traefik.io/v2.3/providers/ecs/</a></p><h2 id=\"kubernetes-ingressclass\"><strong>Kubernetes IngressClass</strong></h2><!--kg-card-begin: markdown--><p>With the release of Kubernetes 1.18, <a href=\"https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/\" target=\"_blank\" rel=\"nofollow\">improvements made to the Ingress API</a> have made possible new capabilities in Traefik 2.3. This release includes the ability to specify how Ingress paths should match, and features a new IngressClass resource that allows users to specify how controllers should implement Ingress resources. You can use these new APIs in Traefik with this release, which means better interoperability and vendor neutrality.</p>\n<p>Also, Ingress resources utilizing the new <code>pathType</code> field will be supported accordingly. More information on how to utilize the support for the new IngressClass resource can be found both in <a href=\"https://doc.traefik.io/traefik/providers/kubernetes-ingress/#ingressclass\">our documentation</a> and the Kubernetes <a href=\"https://v1-18.docs.kubernetes.io/docs/concepts/services-networking/ingress/\" target=\"_blank\" rel=\"nofollow\">official docs</a>.</p>\n<!--kg-card-end: markdown--><h2 id=\"the-road-ahead\">The Road Ahead</h2><p>We're excited about the work we have ahead of us for the next release, Traefik 2.4. We are planning to revamp the Getting Started guides for 2.x, and with that will include common use case examples with introductions to more complex topics for popular platforms such as Kubernetes and Docker Swarm. This work comes after hearing from the community how we could improve the documentation and begin with more transparent explanations on the new configuration approaches and how to get started with it.</p><p>Also, we're looking at the configuration of Traefik itself and how we can abstract everyday use cases into a simpler and easy to use format. You'll be hearing more about this and other enhancements to Traefik, including support for the latest Kubernetes Service API that the team at Google has been working on, and features to support the inclusion of mTLS in Traefik Mesh.</p><p>We love hearing from the community on how you're using Traefik and what features you'd like to see in the future. Let us know by opening a <a href=\"https://github.com/traefik/traefik/issues/new?template=Feature_request.md\">Feature Request</a> or reaching out to us on our community forums.</p><h2 id=\"useful-links\">Useful links</h2><ul><li><a href=\"https://traefik.io/traefik/\">Website</a></li><li><a href=\"https://doc.traefik.io/traefik/v2.3/\">Documentation</a></li><li><a href=\"https://github.com/traefik/traefik\">Github</a></li><li><a href=\"https://community.traefik.io/c/traefik/traefik-v2\">Forum</a></li></ul>","url":"https://containous.ghost.io/blog/houston-we-have-plugins-traefik-2-3-announcement/","canonical_url":null,"uuid":"539200bd-c9d6-473d-b170-daf87e7dfb8f","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f61e3c3a72a090039800ee6","reading_time":4}},{"node":{"id":"Ghost__Post__5f3b0d665751e70039ad7abe","title":"Unleash custom networking logic with Traefik Plugins","slug":"unleash-custom-networking-logic-with-traefik-plugins","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/0d60ce787ca95ce21c1cef9ebdcf1b51/47498/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg","srcSet":"/static/0d60ce787ca95ce21c1cef9ebdcf1b51/9dc27/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg 300w,\n/static/0d60ce787ca95ce21c1cef9ebdcf1b51/4fe8c/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg 600w,\n/static/0d60ce787ca95ce21c1cef9ebdcf1b51/47498/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg 1200w,\n/static/0d60ce787ca95ce21c1cef9ebdcf1b51/52258/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg 1800w,\n/static/0d60ce787ca95ce21c1cef9ebdcf1b51/a41d1/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"With Traefik plugins, you can now easily build, use, and share your own custom extensions to Traefik’s functionality, with minimal development overhead.","custom_excerpt":"With Traefik plugins, you can now easily build, use, and share your own custom extensions to Traefik’s functionality, with minimal development overhead.","visibility":"public","created_at_pretty":"17 August, 2020","published_at_pretty":"August 19, 2020","updated_at_pretty":"10 September, 2020","created_at":"2020-08-17T23:06:14.000+00:00","published_at":"2020-08-19T15:32:38.000+00:00","updated_at":"2020-09-10T14:19:52.000+00:00","meta_title":"Unleash custom networking logic with Traefik Plugins","meta_description":"With Traefik plugins, you can now easily build, use, and share your own custom extensions to Traefik’s functionality, with minimal development overhead.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Twitter.png","twitter_title":null,"authors":[{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Neil McAllister","slug":"neil","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/05/Neil_McAllister_GPS_sm.jpg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"#pilot-related-resource","slug":"hash-pilot-related-resource","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"internal"}],"plaintext":"Traefik is built to handle the application networking functions that are\nessential to modern IT. In today’s cloud-native environments, containerized\napplications and microservices must be in constant communication across\nnetworks. Functions like load balancing, inbound traffic management, and network\nsecurity are more critical than ever. Fortunately, Traefik addresses these needs\nelegantly and reliably.\n\nAlmost inevitably, however, situations arise that can't easily be handled using\nstandard features and methods. Perhaps an unusual application design requires\nunorthodox routing, or abnormal traffic conditions call for a novel, short-term\nfix. Ideally, you should be able to deploy custom logic to handle such niche\ncases.\n\nThat’s precisely the goal of Traefik plugins, which were introduced in the\nrelease-candidate builds of Traefik 2.3. Traefik has always been modular and\nextensible, and its feature set has grown with the addition of each new provider\n[https://docs.traefik.io/providers/overview/] and middleware\n[https://docs.traefik.io/middlewares/overview/]. With the addition of plugins,\nhowever, you can now easily build, use, and share their own custom extensions to\nTraefik’s functionality, with minimal development overhead.\n\nExtensibility for everyone\nApplication plugins themselves are nothing new. Monolithic desktop apps from the\nlikes of Adobe and Microsoft were among the first to introduce extension\nmechanisms, and web browsers weren’t far behind. But the earliest plugins\nshipped as prebuilt binaries, like the applications themselves. That meant they\nwere often quirky to use, difficult to develop, and incompatible across\nplatforms or even application versions.\n\nAs web browsers evolved into the most-used software in the world, however, they\nalso blazed the path for how plugins should be built. As a result of work by\nGoogle, Mozilla, and others, creating extensions for today’s web browsers is\nboth simpler and more open than in the past, thanks to key characteristics of\ntheir second-generation plugin model:\n\n * Modern browser extensions are written in JavaScript, a language that’s\n   familiar to browser users and anyone involved with web development.\n * They are simple to develop and test, requiring no elaborate toolchains or\n   build processes.\n * They are shared and distributed securely via a centralized, online\n   marketplace.\n\nTraefik the way you want it\nTraefik’s new plugins take cues from modern browser extensions, with the aim of\nmaking it as easy to extend Traefik as it is to extend your browser. While\ntraditional Traefik middlewares resemble the older style of binary plugins,\nTraefik’s new plugin mechanism follows the pattern set by the likes of Chrome\nand Firefox:\n\n * Traefik plugins are written in Go [https://golang.org/], the language used to\n   develop Docker, Kubernetes, the Traefik family of projects, and other\n   cloud-native infrastructure software.\n * Traefik’s embedded Yaegi interpreter [/blog/announcing-yaegi-263a1e2d070a/] \n   makes plugin development and testing easy. No code needs to be compiled or\n   linked, making this the first true interpreted Go language plugin\n   mechanism.Plugins are distributed and shared online via an open marketplace\n   that integrates with Traefik Pilot\n   [/blog/introducing-traefik-pilot-a-first-look-at-our-new-saas-control-platform-for-traefik/]\n   , the new SaaS control plane for Traefik.\n\nNaturally, in designing an extension mechanism for Traefik, security is a top\nconcern. Hosting plugins in the centralized Traefik Pilot hub makes it possible\nto block plugins containing malicious or malformed code for all Traefik users,\nprotecting the entire community. Only open source plugins are allowed, so that\ntheir code can be reviewed and inspected for potential defects. And Traefik\noperators have ultimate control over which plugins are installed and allowed to\nrun in their Traefik instances, as plugins can only be loaded and activated from\nTraefik’s static configuration at startup.\n\nPlugins utilize the Go module downloading and verification system to protect\nusers from unauthorized changes to code. We'll share more in-depth details on\nthis and the security features of the runtime interpreter in a later post.\n\nPlugging in\nBecause Traefik’s plugin mechanism follows industry best practices, working with\nTraefik plugins is almost as easy as working with browser extensions. To get up\nand running with your first plugin involves four key steps:\n\n1. Register your Traefik instances\nPlugins are only available to Traefik instances that are registered with the\nTraefik Pilot SaaS service. Registering is as easy aa logging into your Pilot\naccount [https://pilot.traefik.io/] and clicking a button to request a token.\nOnce you add that token to your Traefik instance’s static configuration, you’re\nready to begin working with plugins from the catalog\n[https://pilot.traefik.io/plugins] or to create your own. You’ll also gain the\nbenefits of health monitoring and security vulnerability updates for your\nregistered instances.\n\n2. Develop your plugin\nTraefik’s embedded Yaegi interpreter can handle virtually any Go code you throw\nat it. A good way to start is to read the documentation\n[https://github.com/containous/plugindemo] and review the source code of the\nDemo plugin that’s provided with Traefik Pilot. You can gain further inspiration\nby browsing the source code of contributed plugins in their own repositories\n[https://github.com/topics/traefik-plugin].\n\n3. Host your plugin on GitHub\nMost developers will already be familiar with GitHub as a way to share code with\nthe community. Every 30 minutes, Traefik Pilot polls GitHub, looking for\nrepositories hosting plugins to add to the public catalog. For your plugin to be\nrecognized, you need only set the topic `traefik-plugin` on your repo and\ninclude a manifest, as described in the developer documentation\n[https://github.com/containous/plugindemo/blob/master/readme.md].\n\n4. Load and activate your plugin\nOnce your plugin is available in the Traefik Pilot catalog, it’s ready for use\nin your Traefik instances. As mentioned earlier, for security reasons, plugin\nactivation code must be included in an instance’s static configuration. No\nplugins can be installed or modified while Traefik is running. Some plugins may\nalso need to have options set in the dynamic configuration. Clicking the\n“Install Plugin” button from the plugin’s page in the Traefik Pilot catalog\nsupplies cut-and-paste templates of the code you’ll need for both the static and\ndynamic configurations.\n\nMore to come\nThis first iteration of the Traefik plugin interface gives you what you need to\nstart building and deploying plugins that enable custom routing behaviors, like\nTraefik middlewares. You can expect forthcoming releases to make plugins even\nmore powerful. For example, future plugins will be able to act as providers,\nmaking it possible to use these techniques to extend Traefik’s auto-discovery\ncapabilities to include new orchestrators, cloud providers, key-value stores,\nand other infrastructure components.\n\nFor now, we hope you’ll take this opportunity to explore how plugins expand the\npossibilities of Traefik. Join the Traefik community forums\n[https://community.containo.us/c/traefik/5] to continue the discussion and help\nmake Traefik the most powerful, versatile, and extensible tool for your\napplication networking needs.","html":"<figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://containous.ghost.io/content/images/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog.jpg\" class=\"kg-image\" alt=\"Unleash custom networking logic with Traefik Plugins\" srcset=\"https://containous.ghost.io/content/images/size/w600/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog.jpg 600w, https://containous.ghost.io/content/images/size/w1000/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog.jpg 1000w, https://containous.ghost.io/content/images/size/w1600/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog.jpg 1600w, https://containous.ghost.io/content/images/2020/08/Unleash-custom-networking-logic-with-Traefik-Plugins---Blog.jpg 2400w\" sizes=\"(min-width: 1200px) 1200px\"></figure><p>Traefik is built to handle the application networking functions that are essential to modern IT. In today’s cloud-native environments, containerized applications and microservices must be in constant communication across networks. Functions like load balancing, inbound traffic management, and network security are more critical than ever. Fortunately, Traefik addresses these needs elegantly and reliably.</p><p>Almost inevitably, however, situations arise that can't easily be handled using standard features and methods. Perhaps an unusual application design requires unorthodox routing, or abnormal traffic conditions call for a novel, short-term fix. Ideally, you should be able to deploy custom logic to handle such niche cases.</p><p>That’s precisely the goal of Traefik plugins, which were introduced in the release-candidate builds of Traefik 2.3. Traefik has always been modular and extensible, and its feature set has grown with the addition of each new <a href=\"https://docs.traefik.io/providers/overview/\">provider</a> and <a href=\"https://docs.traefik.io/middlewares/overview/\">middleware</a>. With the addition of plugins, however, you can now easily build, use, and share their own custom extensions to Traefik’s functionality, with minimal development overhead.</p><h2 id=\"extensibility-for-everyone\"><strong>Extensibility for everyone</strong></h2><p>Application plugins themselves are nothing new. Monolithic desktop apps from the likes of Adobe and Microsoft were among the first to introduce extension mechanisms, and web browsers weren’t far behind. But the earliest plugins shipped as prebuilt binaries, like the applications themselves. That meant they were often quirky to use, difficult to develop, and incompatible across platforms or even application versions.</p><p>As web browsers evolved into the most-used software in the world, however, they also blazed the path for how plugins should be built. As a result of work by Google, Mozilla, and others, creating extensions for today’s web browsers is both simpler and more open than in the past, thanks to key characteristics of their second-generation plugin model:</p><ul><li>Modern browser extensions are written in JavaScript, a language that’s familiar to browser users and anyone involved with web development.</li><li>They are simple to develop and test, requiring no elaborate toolchains or build processes.</li><li>They are shared and distributed securely via a centralized, online marketplace.</li></ul><h2 id=\"traefik-the-way-you-want-it\"><strong>Traefik the way you want it</strong></h2><p>Traefik’s new plugins take cues from modern browser extensions, with the aim of making it as easy to extend Traefik as it is to extend your browser. While traditional Traefik middlewares resemble the older style of binary plugins, Traefik’s new plugin mechanism follows the pattern set by the likes of Chrome and Firefox:</p><ul><li>Traefik plugins are written in <a href=\"https://golang.org/\">Go</a>, the language used to develop Docker, Kubernetes, the Traefik family of projects, and other cloud-native infrastructure software.</li><li>Traefik’s embedded <a href=\"https://containous.ghost.io/blog/announcing-yaegi-263a1e2d070a/\">Yaegi interpreter</a> makes plugin development and testing easy. No code needs to be compiled or linked, making this the first true interpreted Go language plugin mechanism.Plugins are distributed and shared online via an open marketplace that integrates with <a href=\"https://containous.ghost.io/blog/introducing-traefik-pilot-a-first-look-at-our-new-saas-control-platform-for-traefik/\">Traefik Pilot</a>, the new SaaS control plane for Traefik.</li></ul><figure class=\"kg-card kg-image-card\"><img src=\"https://lh4.googleusercontent.com/By5DYG5wjOdErYmc54JCuNGPw3M8ICAULWs-1xD9BlCrzm5CpfS6ob2Kx71PKY5xBw8slQQzvbNuxbZqD8SDJiAQChSQYxr0YCoxqdO6MrxhK62exH5MPHpITuxLbiZTE96KA2U\" class=\"kg-image\" alt=\"Traefik Pilot Plugins page\"></figure><p>Naturally, in designing an extension mechanism for Traefik, security is a top concern. Hosting plugins in the centralized Traefik Pilot hub makes it possible to block plugins containing malicious or malformed code for all Traefik users, protecting the entire community. Only open source plugins are allowed, so that their code can be reviewed and inspected for potential defects. And Traefik operators have ultimate control over which plugins are installed and allowed to run in their Traefik instances, as plugins can only be loaded and activated from Traefik’s static configuration at startup.</p><p>Plugins utilize the Go module downloading and verification system to protect users from unauthorized changes to code. We'll share more in-depth details on this and the security features of the runtime interpreter in a later post.</p><h2 id=\"plugging-in\"><strong>Plugging in</strong></h2><p>Because Traefik’s plugin mechanism follows industry best practices, working with Traefik plugins is almost as easy as working with browser extensions. To get up and running with your first plugin involves four key steps:</p><h3 id=\"1-register-your-traefik-instances\"><strong>1. Register your Traefik instances</strong></h3><p>Plugins are only available to Traefik instances that are registered with the Traefik Pilot SaaS service. Registering is as easy aa <a href=\"https://pilot.traefik.io/\">logging into your Pilot account</a> and clicking a button to request a token. Once you add that token to your Traefik instance’s static configuration, you’re ready to begin working with <a href=\"https://pilot.traefik.io/plugins\">plugins from the catalog</a> or to create your own. You’ll also gain the benefits of health monitoring and security vulnerability updates for your registered instances.</p><h3 id=\"2-develop-your-plugin\"><strong>2. Develop your plugin</strong></h3><p>Traefik’s embedded Yaegi interpreter can handle virtually any Go code you throw at it. A good way to start is to read the <a href=\"https://github.com/containous/plugindemo\">documentation</a> and review the source code of the Demo plugin that’s provided with Traefik Pilot. You can gain further inspiration by browsing the source code of contributed plugins in <a href=\"https://github.com/topics/traefik-plugin\">their own repositories</a>.</p><h3 id=\"3-host-your-plugin-on-github\"><strong>3. Host your plugin on GitHub</strong></h3><p>Most developers will already be familiar with GitHub as a way to share code with the community. Every 30 minutes, Traefik Pilot polls GitHub, looking for repositories hosting plugins to add to the public catalog. For your plugin to be recognized, you need only set the topic `traefik-plugin` on your repo and include a manifest, as described in the <a href=\"https://github.com/containous/plugindemo/blob/master/readme.md\">developer documentation</a>.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://lh6.googleusercontent.com/g8H6MFQddfIOzxLGl7xfgtTztNPaS-iE6cAE3tR6sJWnRHbCUUny1u_mGf1skj3aZCj3JSdD_F5RJ23Q7WlxlRyBy1neUSg9gHV63UaGP7KctsJrMkt2acXy3Z5B9cOFJfmitwg\" class=\"kg-image\" alt=\"How to install a plugin in Traefik\"></figure><h3 id=\"4-load-and-activate-your-plugin\"><strong>4. Load and activate your plugin</strong></h3><p>Once your plugin is available in the Traefik Pilot catalog, it’s ready for use in your Traefik instances. As mentioned earlier, for security reasons, plugin activation code must be included in an instance’s static configuration. No plugins can be installed or modified while Traefik is running. Some plugins may also need to have options set in the dynamic configuration. Clicking the “Install Plugin” button from the plugin’s page in the Traefik Pilot catalog supplies cut-and-paste templates of the code you’ll need for both the static and dynamic configurations.</p><h2 id=\"more-to-come\"><strong>More to come</strong></h2><p>This first iteration of the Traefik plugin interface gives you what you need to start building and deploying plugins that enable custom routing behaviors, like Traefik middlewares. You can expect forthcoming releases to make plugins even more powerful. For example, future plugins will be able to act as <em>providers</em>, making it possible to use these techniques to extend Traefik’s auto-discovery capabilities to include new orchestrators, cloud providers, key-value stores, and other infrastructure components.</p><p>For now, we hope you’ll take this opportunity to explore how plugins expand the possibilities of Traefik. Join the <a href=\"https://community.containo.us/c/traefik/5\">Traefik community forums</a> to continue the discussion and help make Traefik the most powerful, versatile, and extensible tool for your application networking needs.</p>","url":"https://containous.ghost.io/blog/unleash-custom-networking-logic-with-traefik-plugins/","canonical_url":null,"uuid":"6da65ef9-cc77-4eef-8199-620264e72c38","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f3b0d665751e70039ad7abe","reading_time":5}},{"node":{"id":"Ghost__Post__5efbfbdc1555240039b0bf80","title":"Announcing Maesh 1.3","slug":"announcing-maesh-1-3","featured":false,"feature_image":"https://containous.ghost.io/content/images/2020/07/Announcing-Maesh-1.3-1.jpg","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/efb1b1925cac747fc113d310e892bbdd/47498/Announcing-Maesh-1.3-1.jpg","srcSet":"/static/efb1b1925cac747fc113d310e892bbdd/9dc27/Announcing-Maesh-1.3-1.jpg 300w,\n/static/efb1b1925cac747fc113d310e892bbdd/4fe8c/Announcing-Maesh-1.3-1.jpg 600w,\n/static/efb1b1925cac747fc113d310e892bbdd/47498/Announcing-Maesh-1.3-1.jpg 1200w,\n/static/efb1b1925cac747fc113d310e892bbdd/52258/Announcing-Maesh-1.3-1.jpg 1800w,\n/static/efb1b1925cac747fc113d310e892bbdd/a41d1/Announcing-Maesh-1.3-1.jpg 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"Maesh 1.3, the latest version of the simpler service mesh, is now even more reliable, flexible, and widely available. ","custom_excerpt":"Maesh 1.3, the latest version of the simpler service mesh, is now even more reliable, flexible, and widely available. ","visibility":"public","created_at_pretty":"01 July, 2020","published_at_pretty":"July 9, 2020","updated_at_pretty":"21 July, 2020","created_at":"2020-07-01T02:58:36.000+00:00","published_at":"2020-07-09T05:45:40.000+00:00","updated_at":"2020-07-21T13:59:12.000+00:00","meta_title":"Announcing Maesh 1.3","meta_description":"Maesh 1.3, the latest version of the simpler service mesh, is now even more reliable, flexible, and widely available. ","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://containous.ghost.io/content/images/2020/07/Announcing-Maesh-1.3---Twitter@2x.jpg","twitter_title":null,"authors":[{"name":"Manuel Zapf","slug":"manuel","bio":null,"profile_image":"https://containous.ghost.io/content/images/2019/11/b_manuel-zapf-foto.1024x1024.png","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Manuel Zapf","slug":"manuel","bio":null,"profile_image":"https://containous.ghost.io/content/images/2019/11/b_manuel-zapf-foto.1024x1024.png","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"The simpler service mesh, now even more reliable, flexible, and widely\navailable.\n\nMaesh 1.3, the latest version of the simpler service mesh, is available today.\nThis release introduces new configuration options and brings important\nenhancements to the project’s architecture.\n\nNamespace watchlists\nPreviously, it was possible to configure a set of namespaces to be ignored by\nthe Maesh Controller, via the ignoreNamespaces option. Operators of large\nclusters found themselves having to define a large number of exceptions if they\nwere only interested in a small subset of namespaces.\n\nMaesh 1.3 introduces an option that enables operators to specify which\nnamespaces they want to be observed by the Maesh controller called \nwatchNamespaces:\n\nhelm install maesh maesh/maesh --set controller.watchNamespaces={first,second}\n\n\nFor those who rely on ignoreNamespaces, it will still continue to work, we\naren’t planning to remove that configuration option.\n\nSupport for named TargetPort in Service resources\nA typical service definition in Kubernetes might look like this:\n\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  selector:\n    app: MyApp\n  ports:\n    - port: 80\n      targetPort: http\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp-deployment\n  labels:\n    app: MyApp\nspec:\n  selector:\n    matchLabels:\n      app: MyApp\n  template:\n    metadata:\n      labels:\n        app: MyApp\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:1.14.2\n          ports:\n            - containerPort: 80\n              name: http\n\n\nKubernetes will look for the corresponding Pod matching the selector and for a\nport on the pod named http. Maesh now supports this and will do the reverse\nlookup of the targetPort as well, greatly enhancing flexibility.\n\nReal-Time In-Memory Port Mapping\nOne of the architectural components of earlier versions of Maesh is a database\nreferred to as StateTable, whose job included keeping track of port allocations\nand holding entries for port mappings. Before Maesh 1.3, port allocations and\nstates were managed inside of a Kubernetes resource called a ConfigMap.\n\nMaintaining that state externally seems reasonable, but there is always a catch.\nWhat if another process or user modifies the table? What if it becomes\nunavailable due to misconfigured permissions, or becomes so large as to\nintroduce performance issues within the Kubernetes database back-end?\n\nBecause of this, starting in Maesh 1.3, ConfigMaps\n[https://kubernetes.io/docs/concepts/configuration/configmap/] that store \nStateTable objects are gone. Instead, the Maesh Controller keeps in-memory state\ntables generated on every initialization and kept in sync with every service\nupdate.\n\nA More Reliable Controller Loop\nAs a consequence of removing the state tables mentioned above, the mechanism\nwith which a controller performs updates in the clusters required a redesign.\nPreviously, it just watched for changes and updated the configuration as they\nhappened. With the state now being stored in memory, that behavior was no longer\nsufficient, colliding events may impact Maesh's proxy nodes' performance.\n\nTo address that issue, Maesh 1.3 now leverages Kubernetes Work Queues\n[https://kubernetes.io/docs/tasks/job/fine-parallel-processing-work-queue/] to\nguarantee the correct processing of events that are responsible for updating the\nin-memory database. The queues help Maesh perform reliably in situations where\nit must process concurrent events.\n\nSupport for CoreDNS on AKS\nAs already mentioned in a previous release [/blog/maesh-1-0-802f4be9a9a7/],\nMaesh relies heavily on CoreDNS for name resolution. Because of this dependency,\nMaesh is designed to patch CoreDNS through its initialization process. On AKS,\nthere is a specific process\n[https://docs.microsoft.com/en-us/azure/aks/coredns-custom] to follow when\ncustomizing CoreDNS and we’ve updated Maesh to conform to that process. As a\nresult of this update, Maesh is now supported on Azure Kubernetes Service.\n\nNext Steps\nThe changes introduced in this release represent the next step in evolving the\nMaesh project into a solution the community has been requesting. Research is\nunderway on how Maesh can implement simple, easy to use, end-to-end encryption.\nDeveloping and shipping this capability will be the next significant milestone\nto hit.\n\nYour participation with the Maesh project is invaluable, and your suggestions\nare responsible for the improvements and direction this project undergoes. We\nwelcome your continued feedback, PRs, and contributions because that is what\nkeeps Maesh going in the right direction.\n\nThank you!\n\nUseful links\n * Website [/maesh/]\n * Documentation [https://docs.mae.sh/]\n * Github [https://github.com/containous/maesh]\n * Community Forum [https://community.containo.us/c/maesh]","html":"<!--kg-card-begin: html--><p class=\"post-sub-title\">The simpler service mesh, now even more reliable, flexible, and widely available.</p><!--kg-card-end: html--><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2020/07/Announcing-Maesh-1.3.jpg\" class=\"kg-image\" alt=\"Announcing Maesh 1.3\"></figure><p>Maesh 1.3, the latest version of the simpler service mesh, is available today. This release introduces new configuration options and brings important enhancements to the project’s architecture.</p><h2 id=\"namespace-watchlists\">Namespace watchlists</h2><p>Previously, it was possible to configure a set of namespaces to be ignored by the Maesh Controller, via the <code>ignoreNamespaces</code> option. Operators of large clusters found themselves having to define a large number of exceptions if they were only interested in a small subset of namespaces.</p><p>Maesh 1.3 introduces an option that enables operators to specify which namespaces they want to be observed by the Maesh controller called <code>watchNamespaces</code>:</p><!--kg-card-begin: markdown--><pre><code>helm install maesh maesh/maesh --set controller.watchNamespaces={first,second}\n</code></pre>\n<!--kg-card-end: markdown--><p>For those who rely on <code>ignoreNamespaces</code>, it will still continue to work, we aren’t planning to remove that configuration option.</p><h2 id=\"support-for-named-targetport-in-service-resources\">Support for named TargetPort in Service resources</h2><p>A typical service definition in Kubernetes might look like this:</p><!--kg-card-begin: markdown--><pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  selector:\n    app: MyApp\n  ports:\n    - port: 80\n      targetPort: http\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp-deployment\n  labels:\n    app: MyApp\nspec:\n  selector:\n    matchLabels:\n      app: MyApp\n  template:\n    metadata:\n      labels:\n        app: MyApp\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:1.14.2\n          ports:\n            - containerPort: 80\n              name: http\n</code></pre>\n<!--kg-card-end: markdown--><p>Kubernetes will look for the corresponding Pod matching the selector and for a port on the pod named <code>http</code>. Maesh now supports this and will do the reverse lookup of the targetPort as well, greatly enhancing flexibility.</p><h2 id=\"real-time-in-memory-port-mapping\">Real-Time In-Memory Port Mapping</h2><p>One of the architectural components of earlier versions of Maesh is a database referred to as <code>StateTable</code>, whose job included keeping track of port allocations and holding entries for port mappings. Before Maesh 1.3, port allocations and states were managed inside of a Kubernetes resource called a ConfigMap.</p><p>Maintaining that state externally seems reasonable, but there is always a catch. What if another process or user modifies the table? What if it becomes unavailable due to misconfigured permissions, or becomes so large as to introduce performance issues within the Kubernetes database back-end?</p><!--kg-card-begin: markdown--><p>Because of this, starting in Maesh 1.3, <a href=\"https://kubernetes.io/docs/concepts/configuration/configmap/\" target=\"_blank\" rel=\"nofollow\">ConfigMaps</a> that store <code>StateTable</code> objects are gone. Instead, the Maesh Controller keeps in-memory state tables generated on every initialization and kept in sync with every service update.</p>\n<!--kg-card-end: markdown--><h2 id=\"a-more-reliable-controller-loop\">A More Reliable Controller Loop</h2><p>As a consequence of removing the state tables mentioned above, the mechanism with which a controller performs updates in the clusters required a redesign. Previously, it just watched for changes and updated the configuration as they happened. With the state now being stored in memory, that behavior was no longer sufficient, colliding events may impact Maesh's proxy nodes' performance.</p><!--kg-card-begin: markdown--><p>To address that issue, Maesh 1.3 now leverages <a href=\"https://kubernetes.io/docs/tasks/job/fine-parallel-processing-work-queue/\" target=\"_blank\" rel=\"nofollow\">Kubernetes Work Queues</a> to guarantee the correct processing of events that are responsible for updating the in-memory database. The queues help Maesh perform reliably in situations where it must process concurrent events.</p>\n<!--kg-card-end: markdown--><h2 id=\"support-for-coredns-on-aks\">Support for CoreDNS on AKS</h2><!--kg-card-begin: markdown--><p>As already mentioned in <a href=\"https://containous.ghost.io/blog/maesh-1-0-802f4be9a9a7/\">a previous release</a>, Maesh relies heavily on CoreDNS for name resolution. Because of this dependency, Maesh is designed to patch CoreDNS through its initialization process. On AKS, there is a <a href=\"https://docs.microsoft.com/en-us/azure/aks/coredns-custom\" target=\"_blank\" rel=\"nofollow\">specific process</a> to follow when customizing CoreDNS and we’ve updated Maesh to conform to that process. As a result of this update, Maesh is now supported on Azure Kubernetes Service.</p>\n<!--kg-card-end: markdown--><h2 id=\"next-steps\">Next Steps</h2><p>The changes introduced in this release represent the next step in evolving the Maesh project into a solution the community has been requesting. Research is underway on how Maesh can implement simple, easy to use, end-to-end encryption. Developing and shipping this capability will be the next significant milestone to hit.</p><p>Your participation with the Maesh project is invaluable, and your suggestions are responsible for the improvements and direction this project undergoes. We welcome your continued feedback, PRs, and contributions because that is what keeps Maesh going in the right direction.</p><p>Thank you!</p><h2 id=\"useful-links\">Useful links</h2><ul><li><a href=\"https://containous.ghost.io/maesh/\">Website</a></li><li><a href=\"https://docs.mae.sh/\">Documentation</a></li><li><a href=\"https://github.com/containous/maesh\">Github</a></li><li><a href=\"https://community.containo.us/c/maesh\">Community Forum</a><br></li></ul>","url":"https://containous.ghost.io/blog/announcing-maesh-1-3/","canonical_url":null,"uuid":"789a57a8-4c4e-4359-91fb-c3e96dfbb7c5","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5efbfbdc1555240039b0bf80","reading_time":3}}]}},"pageContext":{"slug":"product-news","limit":9,"skip":0,"numberOfPages":4,"humanPageNumber":1,"prevPageNumber":null,"nextPageNumber":2,"previousPagePath":null,"nextPagePath":"/tag/product-news/page/2/"}},"staticQueryHashes":["1274566015","2561578252","2731221146","394248586","4145280475","749840385"]}