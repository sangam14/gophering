{"componentChunkName":"component---src-templates-tag-tsx","path":"/tag/product-news/page/4/","result":{"data":{"ghostTag":{"slug":"product-news","name":"Product News","visibility":"public","feature_image":null,"featureImageSharp":null,"description":null,"meta_title":null,"meta_description":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5dd7f800f1db6f0038c74558","title":"Traefik 1.4 — Roquefort Is Here, And It’s Huge!","slug":"traefik-1-4-roquefort-is-here-and-its-huge-c26654aba80f","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/12/rokefort.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/32b92a60abdec7024b407f34666c1b8f/f3583/rokefort.png","srcSet":"/static/32b92a60abdec7024b407f34666c1b8f/630fb/rokefort.png 300w,\n/static/32b92a60abdec7024b407f34666c1b8f/2a4de/rokefort.png 600w,\n/static/32b92a60abdec7024b407f34666c1b8f/f3583/rokefort.png 1200w,\n/static/32b92a60abdec7024b407f34666c1b8f/bbee5/rokefort.png 1800w,\n/static/32b92a60abdec7024b407f34666c1b8f/ed396/rokefort.png 2000w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"After 4 months of intense development, we are proud to announce the fresh new release of Traefik: 1.4, codename roquefort.\nThis release is quite big...","custom_excerpt":"After 4 months of intense development, we are proud to announce the fresh new release of Traefik: 1.4, codename roquefort.\nThis release is quite big...","visibility":"public","created_at_pretty":"22 November, 2019","published_at_pretty":"October 17, 2017","updated_at_pretty":"22 May, 2020","created_at":"2019-11-22T15:00:16.000+00:00","published_at":"2017-10-17T15:00:00.000+00:00","updated_at":"2020-05-22T00:32:48.000+00:00","meta_title":"Traefik 1.4 — Roquefort Is Here, And It’s Huge!","meta_description":"After 4 months of intense development, we are proud to announce the fresh new release of Traefik: 1.4, codename roquefort.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Rock Fort…After 4 months of intense development, we are proud to announce the\nfresh new release of Traefik: 1.4, codename roquefort\n[https://en.wikipedia.org/wiki/Roquefort].\n\nThis release is quite big: we merged 250\n[https://github.com/containous/traefik/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A1.4%20is%3Amerged] \npull requests from more than 60 contributors ! Huge thanks goes to all of you\nwho helped on this new version 😘.\n\nThe full changelog can be found here\n[https://github.com/containous/traefik/releases/tag/v1.4.0] but here are some\nnew features we want to highlight:\n\nCustom Headers & Security\nOur awesome Daniel Tomcej [https://github.com/dtomcej] did some hard work on\nheaders. We now have a way to customize headers:\n\n> Custom headers can be configured through the frontends, to add headers to either\nrequests or responses that match the frontend’s rules. This allows for setting\nheaders such as X-Script-Name to be added to the request, or custom headers to\nbe added to the response.\nIf that was not enough, Daniel added security options on headers:\n\n> Security related headers (HSTS headers, SSL redirection, Browser XSS filter,\netc) can be added and configured per frontend in a similar manner to the custom\nheaders above. This functionality allows for some easy security features to\nquickly be set.\nMulti arch\nThanks to Ludovic Fernandez [https://github.com/ldez], we now provide\n[https://github.com/docker-library/official-images/blob/master/library/traefik] \nthe official Docker image on multiple architectures: amd64, arm64v8, arm32v6.\nThe best part is that as of mid-September, Docker supports transparent\nmulti-arch on official images. This allows to use docker run traefik \ntransparently either on a amd64 or a arm64v8 Docker daemon. We plan to add a\nWindows based official image in the future.\n\nAuthentication Forward\nAs a first step to a generic authentication mechanism\n[https://github.com/containous/traefik/issues/593], Daniel Rampelt\n[https://github.com/drampelt] followed by Ludovic Fernandez\n[https://github.com/ldez], added a way to forward authentication to a delegate\nserver. Have a look at both [https://github.com/containous/traefik/pull/1972] \nPRs [https://github.com/containous/traefik/pull/2132] to get more details on\nthis.\n\nProxy Protocol\nTraefik is often used behind another load-balancer like an ELB\n[https://aws.amazon.com/elasticloadbalancing]. In this case, Traefik now\nsupports Proxy Protocol, that allows to keep client information between the\nchain of proxies. Have a look at the documentation [https://docs.traefik.io/] to\nlearn how to enable and configure safely this feature.\n\nCustom Error Pages\nBen Parli [https://github.com/bparli] did some great job on adding custom error\npages support into Traefik. But instead of rendering html pages, we decided to\ndelegate this task to a backend server. You can now configure Traefik to get\nerror pages from another server, using this syntax:\n\n[frontends]\n  [frontends.website]\n  backend = \"website\"\n  [frontends.website.errors]\n    [frontends.website.errors.network]\n    status = [\"500-599\"]\n    backend = \"error\"\n    query = \"/{status}.html\"\n  [frontends.website.routes.website]\n  rule = \"Host: website.mydomain.com\"\n\n[backends]\n  [backends.website]\n    [backends.website.servers.website]\n    url = \"https://1.2.3.4\"\n  [backends.error]\n    [backends.error.servers.error]\n    url = \"http://2.3.4.5\"\n\nIn this example, if you hit a 502 error, Traefik will ask to the backend server \nhttp://2.3.4.5 for the page 502.html.\n\nDatadog, Statd metrics export\nAlex Antonov [https://github.com/aantono] completed the existing Prometheus\nmetrics export with two famous monitoring services: Datadog and Statd. This\nallows to easily export internal Traefik metrics to monitoring systems and get \nGrafana dashboards [https://grafana.com/dashboards/2240] of your running\ninstances.\n\nIn A Nutshell\nJulien Salleyron [https://github.com/juliens] added GRPC [https://grpc.io/] \nsupport and made a great user guide [https://docs.traefik.io/] on this.\nWe now allow to customize cookie names thanks to Ludovic Fernandez\n[https://github.com/ldez], see the documentation here\n[https://docs.traefik.io/routing/services/].\nDrew Wells [https://github.com/drewwells] added the option passTLSCertto forward\nTLS Client certificates to the backend.\nThe documentation website https://docs.traefik.io [https://docs.traefik.io/] has\nbeen revamped by Ludovic Fernandez [https://github.com/ldez].\n\nBut that’s not all, check the whole changelog\n[https://github.com/containous/traefik/releases/tag/v1.4.0] to get an idea of\nthe awesome work that has been done on this release. Lots of bugs have been\nfixed and we also have been working on creating\n[https://github.com/containous/gallienii] awesome\n[https://github.com/containous/lobicornis] bots\n[https://github.com/containous/bibikoffi] that\n[https://github.com/containous/aloba] do [https://github.com/traefiker] great\nthings for us.\n\n\n--------------------------------------------------------------------------------\n\nGrab the latest binary for Linux, Windows, Mac on Github\n[https://github.com/containous/traefik/releases/tag/v1.2.0] or get the official\nDocker image [https://hub.docker.com/_/traefik/]!\n\ndocker pull traefik:v1.4.0 (or 1.4.0, v1.4, 1.4, roquefort)\ndocker pull traefik:v1.4.0-alpine (or 1.4.0-alpine, v1.4-alpine, 1.4-alpine, roquefort-alpine)\n\nThe documentation can be found on https://docs.traefik.io\n[https://docs.traefik.io/].\n\n\n--------------------------------------------------------------------------------\n\nWe are thrilled to welcome Michael Matur [https://github.com/mmatur] who joined \nContainous [/] and Marco Jantke [https://github.com/marco-jantke] who joined the\nmaintainers team 👋 ! We are hiring developers and evangelists:\ncontaino.us/#jobs !\n\nTraefik is still growing fast, we just passed 10k stars\n[https://github.com/containous/traefik/stargazers] on Github and 22M downloads!\n\n\n--------------------------------------------------------------------------------\n\nWe would love to hear your feedback on this new release. Join us on GitHub\n[https://github.com/containous/traefik], Twitter\n[https://twitter.com/traefikproxy] or on the Community Forum\n[https://community.containo.us]!","html":"<figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://miro.medium.com/max/7366/1*2NS3OACEy6JsCzcK8EVwDw.png\" class=\"kg-image\"><figcaption>Rock Fort…</figcaption></figure><p>After 4 months of intense development, we are proud to announce the fresh new release of Traefik: <em><em>1.4</em></em>, codename <a href=\"https://en.wikipedia.org/wiki/Roquefort\" rel=\"noopener\"><em><em>roquefort</em></em></a><em><em>.</em></em></p><p>This release is quite big: we merged <a href=\"https://github.com/containous/traefik/pulls?utf8=%E2%9C%93&amp;q=is%3Apr%20milestone%3A1.4%20is%3Amerged\" rel=\"noopener\">250</a> pull requests from more than 60 contributors ! Huge thanks goes to all of you who helped on this new version 😘.</p><p>The full changelog can be found <a href=\"https://github.com/containous/traefik/releases/tag/v1.4.0\" rel=\"noopener\">here</a> but here are some new features we want to highlight:</p><h2 id=\"custom-headers-security\">Custom Headers &amp; Security</h2><p>Our awesome <a href=\"https://github.com/dtomcej\" rel=\"noopener\">Daniel Tomcej</a> did some hard work on headers. We now have a way to customize headers:</p><blockquote><em><em>Custom headers can be configured through the frontends, to add headers to either requests or responses that match the frontend’s rules. This allows for setting headers such as <code>X-Script-Name</code> to be added to the request, or custom headers to be added to the response.</em></em></blockquote><p>If that was not enough, Daniel added security options on headers:</p><blockquote><em><em>Security related headers (HSTS headers, SSL redirection, Browser XSS filter, etc) can be added and configured per frontend in a similar manner to the custom headers above. This functionality allows for some easy security features to quickly be set.</em></em></blockquote><h2 id=\"multi-arch\">Multi arch</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-82.png\" class=\"kg-image\"></figure><p>Thanks to <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a>, <a href=\"https://github.com/docker-library/official-images/blob/master/library/traefik\" rel=\"noopener\">we now provide</a> the official Docker image on multiple architectures: <em><em>amd64</em></em>, <em><em>arm64v8</em></em>, <em><em>arm32v6</em></em>. The best part is that as of mid-September, Docker supports transparent multi-arch on official images. This allows to use <code>docker run traefik</code> transparently either on a <em><em>amd64 </em></em>or a<em><em> arm64v8 </em></em>Docker daemon. We plan to add a Windows based official image in the future.</p><h2 id=\"authentication-forward\">Authentication Forward</h2><p>As a first step to <a href=\"https://github.com/containous/traefik/issues/593\" rel=\"noopener\">a generic authentication mechanism</a>, <a href=\"https://github.com/drampelt\" rel=\"noopener\">Daniel Rampelt</a> followed by <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a>, added a way to forward authentication to a delegate server. Have a look at <a href=\"https://github.com/containous/traefik/pull/1972\" rel=\"noopener\">both</a> <a href=\"https://github.com/containous/traefik/pull/2132\" rel=\"noopener\">PRs</a> to get more details on this.</p><h2 id=\"proxy-protocol\">Proxy Protocol</h2><p>Traefik is often used behind another load-balancer like an <a href=\"https://aws.amazon.com/elasticloadbalancing\" rel=\"noopener\">ELB</a>. In this case, Traefik now supports Proxy Protocol, that allows to keep client information between the chain of proxies. Have a look at <a href=\"https://docs.traefik.io/\">the documentation</a> to learn how to enable and configure safely this feature.</p><h2 id=\"custom-error-pages\">Custom Error Pages</h2><p><a href=\"https://github.com/bparli\" rel=\"noopener\">Ben Parli</a> did some great job on adding custom error pages support into Traefik. But instead of rendering html pages, we decided to delegate this task to a backend server. You can now configure Traefik to get error pages from another server, using this syntax:</p><pre><code class=\"language-toml\">[frontends]\n  [frontends.website]\n  backend = \"website\"\n  [frontends.website.errors]\n    [frontends.website.errors.network]\n    status = [\"500-599\"]\n    backend = \"error\"\n    query = \"/{status}.html\"\n  [frontends.website.routes.website]\n  rule = \"Host: website.mydomain.com\"\n\n[backends]\n  [backends.website]\n    [backends.website.servers.website]\n    url = \"https://1.2.3.4\"\n  [backends.error]\n    [backends.error.servers.error]\n    url = \"http://2.3.4.5\"</code></pre><p>In this example, if you hit a 502 error, Traefik will ask to the backend server <code>http://2.3.4.5 </code>for the page <code>502.html</code>.</p><h2 id=\"datadog-statd-metrics-export\">Datadog, Statd metrics export</h2><p><a href=\"https://github.com/aantono\" rel=\"noopener\">Alex Antonov</a> completed the existing Prometheus metrics export with two famous monitoring services: Datadog and Statd. This allows to easily export internal Traefik metrics to monitoring systems and get <a href=\"https://grafana.com/dashboards/2240\" rel=\"noopener\">Grafana dashboards</a> of your running instances.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-83.png\" class=\"kg-image\"></figure><h2 id=\"in-a-nutshell\">In A Nutshell</h2><p><a href=\"https://github.com/juliens\" rel=\"noopener\">Julien Salleyron</a> added <a href=\"https://grpc.io/\" rel=\"noopener\">GRPC</a> support and made a <a href=\"https://docs.traefik.io/\">great user guide</a> on this.<br>We now allow to customize cookie names thanks to <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a>, see the documentation <a href=\"https://docs.traefik.io/routing/services/\">here</a>.<br><a href=\"https://github.com/drewwells\" rel=\"noopener\">Drew Wells</a> added the option <code>passTLSCert</code>to forward TLS Client certificates to the backend.<br>The documentation website <a href=\"https://docs.traefik.io/\">https://docs.traefik.io</a> has been revamped by <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a>.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-84.png\" class=\"kg-image\"></figure><p>But that’s not all, check the <a href=\"https://github.com/containous/traefik/releases/tag/v1.4.0\" rel=\"noopener\">whole changelog</a> to get an idea of the awesome work that has been done on this release. Lots of bugs have been fixed and we also have been working on <a href=\"https://github.com/containous/gallienii\" rel=\"noopener\">creating</a> <a href=\"https://github.com/containous/lobicornis\" rel=\"noopener\">awesome</a> <a href=\"https://github.com/containous/bibikoffi\" rel=\"noopener\">bots</a> <a href=\"https://github.com/containous/aloba\" rel=\"noopener\">that</a> <a href=\"https://github.com/traefiker\" rel=\"noopener\">do</a> great things for us.</p><hr><p>Grab the latest binary for Linux, Windows, Mac on <a href=\"https://github.com/containous/traefik/releases/tag/v1.2.0\" rel=\"noopener\">Github</a> or get the <a href=\"https://hub.docker.com/_/traefik/\" rel=\"noopener\">official Docker image</a>!</p><pre><code class=\"language-shell\">docker pull traefik:v1.4.0 (or 1.4.0, v1.4, 1.4, roquefort)\ndocker pull traefik:v1.4.0-alpine (or 1.4.0-alpine, v1.4-alpine, 1.4-alpine, roquefort-alpine)</code></pre><p>The documentation can be found on <a href=\"https://docs.traefik.io/\">https://docs.traefik.io</a>.</p><hr><p>We are thrilled to welcome <a href=\"https://github.com/mmatur\" rel=\"noopener\">Michael Matur</a> who joined <a href=\"https://containous.ghost.io/\" rel=\"noopener\">Containous</a> and <a href=\"https://github.com/marco-jantke\" rel=\"noopener\">Marco Jantke</a> who joined the maintainers team 👋 ! <strong><strong>We are hiring developers and evangelists: containo.us/#jobs !</strong></strong></p><p>Traefik is still growing fast, we just passed <a href=\"https://github.com/containous/traefik/stargazers\" rel=\"noopener\">10k stars</a> on Github and 22M downloads!</p><hr><p>We would love to hear your feedback on this new release. Join us on <a href=\"https://github.com/containous/traefik\" rel=\"noopener\">GitHub</a>, <a href=\"https://twitter.com/traefikproxy\" rel=\"noopener\">Twitter</a> or on the <a href=\"https://community.containo.us\">Community Forum</a>!</p>","url":"https://containous.ghost.io/blog/traefik-1-4-roquefort-is-here-and-its-huge-c26654aba80f/","canonical_url":null,"uuid":"71cfb254-a24e-4a18-854d-c669c8c1c4b1","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd7f800f1db6f0038c74558","reading_time":4}},{"node":{"id":"Ghost__Post__5dd7f8d2f1db6f0038c74576","title":"Traefik 1.3 — Get Some More Raclette !","slug":"traefik-1-3-get-some-more-raclette-1046664d862b","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/12/raclette.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/5c3dfa83524b8cbbfd67cd6ef17da166/39ef9/raclette.png","srcSet":"/static/5c3dfa83524b8cbbfd67cd6ef17da166/630fb/raclette.png 300w,\n/static/5c3dfa83524b8cbbfd67cd6ef17da166/2a4de/raclette.png 600w,\n/static/5c3dfa83524b8cbbfd67cd6ef17da166/39ef9/raclette.png 611w","sizes":"(max-width: 611px) 100vw, 611px"}}},"excerpt":"We released Traefik 1.2 only two months ago, and we are proud to announce that the fresh new Traefik 1.3, codename raclette is out!\nAs Traefik is getting bigger and bigger...","custom_excerpt":"We released Traefik 1.2 only two months ago, and we are proud to announce that the fresh new Traefik 1.3, codename raclette is out!\nAs Traefik is getting bigger and bigger...","visibility":"public","created_at_pretty":"22 November, 2019","published_at_pretty":"June 1, 2017","updated_at_pretty":"22 May, 2020","created_at":"2019-11-22T15:03:46.000+00:00","published_at":"2017-06-01T15:03:00.000+00:00","updated_at":"2020-05-22T00:29:28.000+00:00","meta_title":"Traefik 1.3 — Get Some More Raclette !","meta_description":"We released Traefik 1.2 only two months ago, and we are proud to announce that the fresh new Traefik 1.3, codename raclette is out!","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"We released Traefik 1.2 only two months ago\n[/blog/traefik-1-2-morbier-is-out-8bc304a66ef3/], and we are proud to announce\nthat the fresh new Traefik 1.3, codename raclette\n[https://en.wikipedia.org/wiki/Raclette] is out!\n\nAs Traefik is getting bigger and bigger, we decided to accelerate things and to\nrelease more often. From a 4 months release cycle, you will now have to wait\nonly 2 months between each release.\n\nThe full changelog can be found here\n[https://github.com/containous/traefik/releases/tag/v1.3.0] but here are some\nnew features we want to highlight:\n\nMultiple Rules by Container\nThanks to Florent Benoit [https://github.com/benoitf], Traefik can now manage\nmultiple rules by container, introducing service labels\n[https://github.com/containous/traefik/pull/1257]. You can now easily forward\nmultiple ports from a same container :) Here are all available labels:\n\ntraefik.<service-name>.port\ntraefik.<service-name>.weight\ntraefik.<service-name>.protocol\ntraefik.<service-name>.frontend.backend\ntraefik.<service-name>.frontend.entryPoints\ntraefik.<service-name>.frontend.rule\ntraefik.<service-name>.frontend.passHostHeader\ntraefik.<service-name>.frontend.priority\ntraefik.<service-name>.frontend.rule\n\nAmazon DynamoDB support\nTskinn [https://github.com/tskinn] made a great job on integrating\n[https://github.com/containous/traefik/pull/1158] Traefik with Amazon DynamoDB\n[https://aws.amazon.com/fr/dynamodb/], a flexible NoSQL database service. You\ncan now push your configuration (frontends and backends) into this database and\nTraefik will watch any changes dynamically.\n\nBasic Authentication per Frontend\nAnother awaited feature, Manuel Laufenberg [https://github.com/santode] added \nbasic authentication per frontend\n[https://github.com/containous/traefik/pull/1147] configuration (it was only\nglobally configurable initially). Currently, Docker and Rancher backends are\nsupported, more will be added in the future!\n\nDashboard Filter\nLudovic Fernandez [https://github.com/ldez] added a nice little feature\n[https://github.com/containous/traefik/pull/1437] in the webui: you now can\nfilter frontends and backends. When you have a big configuration with many\nroutes, it’s really handy to be able to quickly find what you want.\n\nBut that’s not all, check the whole changelog\n[https://github.com/containous/traefik/releases/tag/v1.3.0] to get an idea of\nthe awesome work that has been done on this release. Lots of bugs have been\nfixed and we have begun a strong background work on our CI infrastructure and\nproject quality in general.\n\n\n--------------------------------------------------------------------------------\n\nGrab the latest binary for Linux, Windows, Mac on Github\n[https://github.com/containous/traefik/releases/tag/v1.2.0] or get the official\nDocker image [https://hub.docker.com/_/traefik/]!\n\ndocker pull traefik:v1.3.0 (or 1.3.0, v1.3, 1.3, raclette)\ndocker pull traefik:v1.3.0-alpine (or 1.3.0-alpine, v1.3-alpine, 1.3-alpine, raclette-alpine)\n\nThe documentation can be found on https://docs.traefik.io\n[https://docs.traefik.io/].\n\n\n--------------------------------------------------------------------------------\n\nFollowing our $1M seed\n[/blog/containous-raises-1-million-in-seed-round-funding-to-develop-traefik-f8238f47d2c7/]\n, 4 new developers joined Containous [/] and are now part of the maintainers\nteam. We are thrilled to welcome Ludovic Fernandez [https://github.com/ldez], \nAttilio Borello [https://github.com/atbore-phx], Julien Salleyron\n[https://github.com/Juliens] and Nicolas Mengin [https://github.com/nmengin] 👋\n!\n\nTraefik is still growing fast, we just passed 8k stars\n[https://github.com/containous/traefik/stargazers] on Github and 7M downloads!\n\n\n--------------------------------------------------------------------------------\n\nWe would love to hear your feedback on this new release. Join us on GitHub\n[https://github.com/containous/traefik], Twitter\n[https://twitter.com/traefikproxy] or on the Community Forum\n[https://community.containo.us]!","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1222/1*iPjSJPBOsZGGmuijQSQOrw.png\" class=\"kg-image\"></figure><p>We released Traefik <em><em>1.2</em></em> only <a href=\"https://containous.ghost.io/blog/traefik-1-2-morbier-is-out-8bc304a66ef3/\">two months ago</a>, and we are proud to announce that the fresh new Traefik <em><em>1.3</em></em>, codename <a href=\"https://en.wikipedia.org/wiki/Raclette\" rel=\"noopener\"><em><em>raclette</em></em></a> is out!</p><p>As Traefik is getting bigger and bigger, we decided to accelerate things and to release more often. From a 4 months release cycle, you will now have to wait only 2 months between each release.</p><p>The full changelog can be found <a href=\"https://github.com/containous/traefik/releases/tag/v1.3.0\" rel=\"noopener\">here</a> but here are some new features we want to highlight:</p><h2 id=\"multiple-rules-by-container\">Multiple Rules by Container</h2><p>Thanks to <a href=\"https://github.com/benoitf\" rel=\"noopener\">Florent Benoit</a>, Traefik can now manage multiple rules by container, <a href=\"https://github.com/containous/traefik/pull/1257\" rel=\"noopener\">introducing service labels</a>. You can now easily forward multiple ports from a same container :) Here are all available labels:</p><pre><code>traefik.&lt;service-name&gt;.port\ntraefik.&lt;service-name&gt;.weight\ntraefik.&lt;service-name&gt;.protocol\ntraefik.&lt;service-name&gt;.frontend.backend\ntraefik.&lt;service-name&gt;.frontend.entryPoints\ntraefik.&lt;service-name&gt;.frontend.rule\ntraefik.&lt;service-name&gt;.frontend.passHostHeader\ntraefik.&lt;service-name&gt;.frontend.priority\ntraefik.&lt;service-name&gt;.frontend.rule</code></pre><h2 id=\"amazon-dynamodb-support\">Amazon DynamoDB support</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-85.png\" class=\"kg-image\"></figure><p><a href=\"https://github.com/tskinn\" rel=\"noopener\">Tskinn</a> made a great job on <a href=\"https://github.com/containous/traefik/pull/1158\" rel=\"noopener\">integrating</a> Traefik with <a href=\"https://aws.amazon.com/fr/dynamodb/\" rel=\"noopener\">Amazon DynamoDB</a>, a flexible NoSQL database service. You can now push your configuration (frontends and backends) into this database and Traefik will watch any changes dynamically.</p><h2 id=\"basic-authentication-per-frontend\">Basic Authentication per Frontend</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-86.png\" class=\"kg-image\"></figure><p>Another awaited feature, <a href=\"https://github.com/santode\" rel=\"noopener\">Manuel Laufenberg</a> added <a href=\"https://github.com/containous/traefik/pull/1147\" rel=\"noopener\">basic authentication per frontend</a> configuration (it was only globally configurable initially). Currently, Docker and Rancher backends are supported, more will be added in the future!</p><h2 id=\"dashboard-filter\">Dashboard Filter</h2><p><a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a> added <a href=\"https://github.com/containous/traefik/pull/1437\" rel=\"noopener\">a nice little feature</a> in the webui: you now can filter frontends and backends. When you have a big configuration with many routes, it’s really handy to be able to quickly find what you want.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-87.png\" class=\"kg-image\"></figure><p>But that’s not all, check the <a href=\"https://github.com/containous/traefik/releases/tag/v1.3.0\" rel=\"noopener\">whole changelog</a> to get an idea of the awesome work that has been done on this release. Lots of bugs have been fixed and we have begun a strong background work on our CI infrastructure and project quality in general.</p><hr><p>Grab the latest binary for Linux, Windows, Mac on <a href=\"https://github.com/containous/traefik/releases/tag/v1.2.0\" rel=\"noopener\">Github</a> or get the <a href=\"https://hub.docker.com/_/traefik/\" rel=\"noopener\">official Docker image</a>!</p><pre><code class=\"language-shell\">docker pull traefik:v1.3.0 (or 1.3.0, v1.3, 1.3, raclette)\ndocker pull traefik:v1.3.0-alpine (or 1.3.0-alpine, v1.3-alpine, 1.3-alpine, raclette-alpine)</code></pre><p>The documentation can be found on <a href=\"https://docs.traefik.io/\" rel=\"noopener\">https://docs.traefik.io</a>.</p><hr><p>Following our <a href=\"https://containous.ghost.io/blog/containous-raises-1-million-in-seed-round-funding-to-develop-traefik-f8238f47d2c7/\">$1M seed</a>, 4 new developers joined <a href=\"https://containous.ghost.io/\" rel=\"noopener\">Containous</a> and are now part of the maintainers team. We are thrilled to welcome <a href=\"https://github.com/ldez\" rel=\"noopener\">Ludovic Fernandez</a>, <a href=\"https://github.com/atbore-phx\" rel=\"noopener\">Attilio Borello</a>, <a href=\"https://github.com/Juliens\" rel=\"noopener\">Julien Salleyron</a> and <a href=\"https://github.com/nmengin\" rel=\"noopener\">Nicolas Mengin</a> 👋 !</p><p>Traefik is still growing fast, we just passed <a href=\"https://github.com/containous/traefik/stargazers\" rel=\"noopener\">8k stars</a> on Github and 7M downloads!</p><hr><p>We would love to hear your feedback on this new release. Join us on <a href=\"https://github.com/containous/traefik\" rel=\"noopener\">GitHub</a>, <a href=\"https://twitter.com/traefikproxy\" rel=\"noopener\">Twitter</a> or on the <a href=\"https://community.containo.us\">Community Forum</a>!</p>","url":"https://containous.ghost.io/blog/traefik-1-3-get-some-more-raclette-1046664d862b/","canonical_url":null,"uuid":"4dedafd1-e297-41fc-8cec-57600a5bb7c7","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd7f8d2f1db6f0038c74576","reading_time":3}},{"node":{"id":"Ghost__Post__5dd7faaef1db6f0038c74593","title":"Traefik 1.2 Morbier is out!","slug":"traefik-1-2-morbier-is-out-8bc304a66ef3","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/11/morbier.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/8e73d6a386ca10ffb08fa8029d0618db/f3583/morbier.png","srcSet":"/static/8e73d6a386ca10ffb08fa8029d0618db/630fb/morbier.png 300w,\n/static/8e73d6a386ca10ffb08fa8029d0618db/2a4de/morbier.png 600w,\n/static/8e73d6a386ca10ffb08fa8029d0618db/f3583/morbier.png 1200w,\n/static/8e73d6a386ca10ffb08fa8029d0618db/3dfef/morbier.png 1614w","sizes":"(max-width: 1200px) 100vw, 1200px"}}},"excerpt":"After 4 months of hard work, we are proud to announce a new release of Traefik: version 1.2.0, codename Morbier. The full changelog can be found...","custom_excerpt":"After 4 months of hard work, we are proud to announce a new release of Traefik: version 1.2.0, codename Morbier. The full changelog can be found...","visibility":"public","created_at_pretty":"22 November, 2019","published_at_pretty":"March 22, 2017","updated_at_pretty":"22 May, 2020","created_at":"2019-11-22T15:11:42.000+00:00","published_at":"2017-03-22T15:11:00.000+00:00","updated_at":"2020-05-22T00:28:13.000+00:00","meta_title":"Traefik 1.2 Morbier is out!","meta_description":"After 4 months of hard work, we are proud to announce a new release of Traefik: version 1.2.0, codename Morbier. The full changelog can be found...","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"After 4 months of hard work, we are proud to announce a new release of Traefik:\nversion 1.2.0, codename Morbier [https://en.wikipedia.org/wiki/Morbier_cheese].\n\nThe full changelog can be found here\n[https://github.com/containous/traefik/releases/tag/v1.2.0] but here are some\nnew features we want to highlight:\n\nAmazon EC2 Container Service\nThanks to Luke Petre [https://github.com/lpetre], Traefik now supports Amazon\nEC2 Container Service [https://aws.amazon.com/fr/ecs]. This is a great news for\nAWS fans who need more than an ELB/ALB to manage their inbound traffic.\n\nRancher\nFinally, Traefik gets native Rancher support! Thank you Manuel Laufenberg\n[https://github.com/santode]! It is now a lot simpler to have a specific\nconfiguration backend right into Traefik.\n\nPrometheus\nA lot of people were waiting for it, thanks to Alberto Garcial\n[https://github.com/enxebre], native Prometheus support is now real :) This\nallows you to export internal metrics to Prometheus using a simple flag \n—web.metrics.prometheus. More internal metrics will be added soon!\n\nNetflix Eureka\nEureka [https://github.com/Netflix/eureka] is the service registry taken from\nthe Netflix OSS stack. Traefik now supports Eureka as a configuration backend\nthanks to Julien Salleyron [https://github.com/Juliens]!\n\nHealthchecks\nAnother long awaited feature, healthchecks are here! Again, thanks to Julien\nSalleyron [https://github.com/Juliens]. A health check can be configured in\norder to remove a backend from LB rotation as long as it keeps returning HTTP\nstatus codes other than 200 OK.\n\n\n--------------------------------------------------------------------------------\n\nGrab the latest binary for Linux, Windows, Mac on Github\n[https://github.com/containous/traefik/releases/tag/v1.2.0] or get the official\nDocker image [https://hub.docker.com/_/traefik/]!\n\ndocker pull traefik:v1.2.0\ndocker pull traefik:morbier\ndocker pull traefik:v1.2.0-alpine\ndocker pull traefik:morbier-alpine\n\nThe documentation can be found on https://docs.traefik.io\n[https://docs.traefik.io/].\n\n\n--------------------------------------------------------------------------------\n\nIn case you missed it, we just raised $1M\n[/blog/containous-raises-1-million-in-seed-round-funding-to-develop-traefik-f8238f47d2c7/] \n:) You can expect a lot of new features in the coming months, as well as \nbackground work [https://github.com/containous/traefik/issues/1266]. Of course,\nall this will be done involving the community as much as possible.\n\nTraefik is still growing fast, we just passed 7k stars on Github\n[https://github.com/containous/traefik/stargazers] and 3.5M downloads! The\nmaintainer team gains 2 more maintainers, Thomas Recloux\n[https://github.com/trecloux] & Timo Reimann [https://github.com/timoreimann] \n👋!\n\n\n--------------------------------------------------------------------------------\n\nWe would love to hear your feedback on this new release. Join us on GitHub\n[https://github.com/containous/traefik], Twitter\n[https://twitter.com/traefikproxy] or on the Community Forum\n[https://community.containo.us]!","html":"<p>After 4 months of hard work, we are proud to announce a new release of Traefik: version <em><em>1.2.0</em></em>, codename <a href=\"https://en.wikipedia.org/wiki/Morbier_cheese\" rel=\"noopener\"><em><em>Morbier</em></em></a>.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-88.png\" class=\"kg-image\"></figure><p>The full changelog can be found <a href=\"https://github.com/containous/traefik/releases/tag/v1.2.0\" rel=\"noopener\">here</a> but here are some new features we want to highlight:</p><h2 id=\"amazon-ec2-container-service\">Amazon EC2 Container Service</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-89.png\" class=\"kg-image\"></figure><p>Thanks to <a href=\"https://github.com/lpetre\" rel=\"noopener\">Luke Petre</a>, Traefik now supports <a href=\"https://aws.amazon.com/fr/ecs\" rel=\"noopener\">Amazon EC2 Container Service</a>. This is a great news for AWS fans who need more than an ELB/ALB to manage their inbound traffic.</p><h2 id=\"rancher\">Rancher</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-90.png\" class=\"kg-image\"></figure><p>Finally, Traefik gets native Rancher support! Thank you <a href=\"https://github.com/santode\" rel=\"noopener\">Manuel Laufenberg</a>! It is now a lot simpler to have a specific configuration backend right into Traefik.</p><h2 id=\"prometheus\">Prometheus</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-91.png\" class=\"kg-image\"></figure><p>A lot of people were waiting for it, thanks to <a href=\"https://github.com/enxebre\" rel=\"noopener\">Alberto Garcial</a>, native Prometheus support is now real :) This allows you to export internal metrics to Prometheus using a simple flag <code>—web.metrics.prometheus</code>. More internal metrics will be added soon!</p><h2 id=\"netflix-eureka\">Netflix Eureka</h2><p><a href=\"https://github.com/Netflix/eureka\" rel=\"noopener\">Eureka</a> is the service registry taken from the Netflix OSS stack. Traefik now supports Eureka as a configuration backend thanks to <a href=\"https://github.com/Juliens\" rel=\"noopener\">Julien Salleyron</a>!</p><h2 id=\"healthchecks\">Healthchecks</h2><p>Another long awaited feature, healthchecks are here! Again, thanks to <a href=\"https://github.com/Juliens\" rel=\"noopener\">Julien Salleyron</a>. A health check can be configured in order to remove a backend from LB rotation as long as it keeps returning HTTP status codes other than 200 OK.</p><hr><p>Grab the latest binary for Linux, Windows, Mac on <a href=\"https://github.com/containous/traefik/releases/tag/v1.2.0\" rel=\"noopener\">Github</a> or get the <a href=\"https://hub.docker.com/_/traefik/\" rel=\"noopener\">official Docker image</a>!</p><pre><code class=\"language-shell\">docker pull traefik:v1.2.0\ndocker pull traefik:morbier\ndocker pull traefik:v1.2.0-alpine\ndocker pull traefik:morbier-alpine</code></pre><p>The documentation can be found on <a href=\"https://docs.traefik.io/\" rel=\"noopener\">https://docs.traefik.io</a>.</p><hr><p>In case you missed it, we <a href=\"https://containous.ghost.io/blog/containous-raises-1-million-in-seed-round-funding-to-develop-traefik-f8238f47d2c7/\">just raised $1M</a> :) You can expect a lot of new features in the coming months, as well as <a href=\"https://github.com/containous/traefik/issues/1266\" rel=\"noopener\">background work</a>. Of course, all this will be done involving the community as much as possible.</p><p>Traefik is still growing fast, we just passed <a href=\"https://github.com/containous/traefik/stargazers\" rel=\"noopener\">7k stars on Github</a> and 3.5M downloads! The maintainer team gains 2 more maintainers, <a href=\"https://github.com/trecloux\" rel=\"noopener\">Thomas Recloux</a> &amp; <a href=\"https://github.com/timoreimann\" rel=\"noopener\">Timo Reimann</a> 👋!</p><hr><p>We would love to hear your feedback on this new release. Join us on <a href=\"https://github.com/containous/traefik\" rel=\"noopener\">GitHub</a>, <a href=\"https://twitter.com/traefikproxy\" rel=\"noopener\">Twitter</a> or on the <a href=\"https://community.containo.us\">Community Forum</a>!</p>","url":"https://containous.ghost.io/blog/traefik-1-2-morbier-is-out-8bc304a66ef3/","canonical_url":null,"uuid":"6616c93e-4dd7-49e9-8a2e-6fab88069f05","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd7faaef1db6f0038c74593","reading_time":2}},{"node":{"id":"Ghost__Post__5dd7fc02f1db6f0038c745cc","title":"Introducing Distributed Cheese: Traefik 1.1 Camembert Is Out!","slug":"introducing-distributed-cheese-traefik-1-1-camembert-is-out-fb19e05a48c8","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/12/camembert.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/05b81fe338ed52345cfc19ee0925c001/bdce4/camembert.png","srcSet":"/static/05b81fe338ed52345cfc19ee0925c001/630fb/camembert.png 300w,\n/static/05b81fe338ed52345cfc19ee0925c001/bdce4/camembert.png 527w","sizes":"(max-width: 527px) 100vw, 527px"}}},"excerpt":"After 4 months of development, we are proud to announce the second release of Traefik: version 1.1.0, codename camembert.\nThe full changelog is quite huge...","custom_excerpt":"After 4 months of development, we are proud to announce the second release of Traefik: version 1.1.0, codename camembert.\nThe full changelog is quite huge...","visibility":"public","created_at_pretty":"22 November, 2019","published_at_pretty":"November 22, 2016","updated_at_pretty":"22 May, 2020","created_at":"2019-11-22T15:17:22.000+00:00","published_at":"2016-11-22T15:17:00.000+00:00","updated_at":"2020-05-22T00:19:40.000+00:00","meta_title":"Introducing Distributed Cheese: Traefik 1.1 Camembert Is Out!","meta_description":"After 4 months of development, we are proud to announce the second release of Traefik: version 1.1.0, codename camembert. ","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Camembert [https://en.wikipedia.org/wiki/Camembert] cheeseAfter 4 months of\ndevelopment, we are proud to announce the second release of Traefik [/traefik/]:\nversion 1.1.0, codename camembert [https://en.wikipedia.org/wiki/Camembert].\n\nThe full changelog is quite huge\n[https://github.com/containous/traefik/releases/tag/v1.1.0] but here are some\nnew features we want to highlight:\n\nSwarm mode support\nIn v1.12, Docker introduced swarm mode [https://docs.docker.com/engine/swarm/],\nfor natively managing a cluster of Docker engines. Traefik is now able to\nconnect to a swarm manager and will discover all services deployed on the swarm.\nThank you diegofernandes [https://github.com/diegofernandes] for your work :)\n\nConstraints\nsamber [https://github.com/samber] initiated the addition of constraints, that\nlimits Traefik scope to a smaller number of routes. It allows to easily deploy\nmultiple instances with specific roles.\nLet’s give an example and add this line to our TOML configurations:\n\n# traefik instance 1\nconstraints = [“tag==eu-*”, “tag==asia-*”]\n\n# traefik instance 2\nconstraints = [“tag==us-*”]\n\nThe instance 1 will now route services tagged with eu-* or asia-* (i.e. \neu-backend, eu-frontend, asia-data…) and the instance 2, services tagged with \nus-*.\nYou can use Docker labels, Marathon labels or Consul Catalog tags to tag your\nservices. For example, let’s deploy a new Docker application and tag it:\n\ndocker run -d -l traefik.tags=eu-frontend emilevauge/whoami\n\n\nThis application will be taken into account by traefik instance 1 and ignored by\ninstance 2.\n\nMesos backend\nPierreLeresteux [https://github.com/PierreLeresteux] & skydjol\n[https://github.com/skydjol] made a great pull request adding universal Mesos\nsupport to Traefik. In addition to Marathon\n[https://mesosphere.github.io/marathon/], Traefik can now be used with any Mesos\nframework (i.e. Chronos, Aurora, custom…). And yeah, the v1.1 codename is \ncamembert because of those Normans [https://en.wikipedia.org/wiki/Normans] guys!\n\nWhy not Saint-Nectaire\n[https://github.com/containous/traefik/pull/353#issuecomment-233914436]?Session\naffinity\nLong awaited [https://github.com/containous/traefik/issues/5#issue-107706542] \nsticky sessions are now supported thanks to owen [https://github.com/owen]! Use\nthem with caution [https://12factor.net/processes] ;)\n\nCluster mode (experimental)\nTraefik now has a cluster mode, which allows to deploy multiple instances\nsharing the same configuration. To do that without copying the same\nconfiguration file on each instance, Traefik uses a distributed Key-Value store\n(Etcd, Consul supported). What is great with cluster mode is that it works with\nLet’s Encrypt, using the Key-Value database to store the TLS certificates. \nCluster mode [https://docs.traefik.io/] is available in this release as an\nexperimental feature.\n\nOfficial Alpine image\nIn addition to the official “from scratch” Docker image, there is now an\nofficial Alpine image tagged v1.1.0-alpine, camembert-alpine. This can be useful\nto get a shell access to a Traefik container for debugging purpose.\n\nExperimental builds\nFor those who want to test bleeding edge features, we introduced experimental\nbuilds. Each time a pull request is merged into master branch, a docker image\nwill be pushed at:\n\ncontainous/traefik:experimental\n\nA specific PR image will also be pushed at:\n\ncontainous/traefik:pr-#\n\n\n--------------------------------------------------------------------------------\n\nGrab the latest binary for Linux, Windows, Mac on Github\n[https://github.com/containous/traefik/releases/tag/v1.1.0] or get the official\nDocker image [https://hub.docker.com/_/traefik/]!\n\ndocker pull traefik:v1.1.0\ndocker pull traefik:v1.1.0-alpine\ndocker pull traefik:camembert\ndocker pull traefik:camembert-alpine\n\nThe documentation can be found on http://docs.traefik.io\n[https://docs.traefik.io/].\n\n\n--------------------------------------------------------------------------------\n\nFinally, we are very pleased to announce that dtomcej\n[https://github.com/dtomcej] and SantoDE [https://github.com/SantoDE] just\njoined the maintainers team. Welcome on board!\n\n\n--------------------------------------------------------------------------------\n\nWe would love to hear your feedback on this new release. Join us on GitHub\n[https://github.com/containous/traefik], Twitter\n[https://twitter.com/traefikproxy] or on the Community Forum\n[https://community.containo.us]!\n\n\n--------------------------------------------------------------------------------\n\nEdit 12/29/2016:\nWe just pushed the first bug-fix release v1.1.1 which deals with Kubernetes and\nSwarm connection issues. The full changelog can be found here\n[https://github.com/containous/traefik/releases/tag/v1.1.1].","html":"<figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://miro.medium.com/max/1054/1*b8EYMGIKAOiTn_Gteyn28g.png\" class=\"kg-image\"><figcaption><a href=\"https://en.wikipedia.org/wiki/Camembert\" class=\"bf cn hw hx hy hz\" target=\"_blank\" rel=\"noopener\" style=\"box-sizing: inherit; color: inherit; text-decoration: none; -webkit-tap-highlight-color: transparent; background-repeat: repeat-x; background-image: url(&quot;data:image/svg+xml;utf8,<svg preserveAspectRatio=\\&quot;none\\&quot; viewBox=\\&quot;0 0 1 1\\&quot; xmlns=\\&quot;http://www.w3.org/2000/svg\\&quot;><line x1=\\&quot;0\\&quot; y1=\\&quot;0\\&quot; x2=\\&quot;1\\&quot; y2=\\&quot;1\\&quot; stroke=\\&quot;rgba(0, 0, 0, 0.84)\\&quot; /></svg>&quot;); background-size: 1px 1px; background-position: 0px calc(1em + 1px);\">Camembert</a> cheese</figcaption></figure><p>After 4 months of development, we are proud to announce the second release of <a href=\"https://containous.ghost.io/traefik/\">Traefik</a>: version <em><em>1.1.0</em></em>, codename <a href=\"https://en.wikipedia.org/wiki/Camembert\" rel=\"noopener\"><em><em>camembert</em></em></a>.</p><p>The full changelog is <a href=\"https://github.com/containous/traefik/releases/tag/v1.1.0\" rel=\"noopener\">quite huge</a> but here are some new features we want to highlight:</p><h2 id=\"swarm-mode-support\">Swarm mode support</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-94.png\" class=\"kg-image\"></figure><p>In v1.12, Docker introduced <a href=\"https://docs.docker.com/engine/swarm/\" rel=\"noopener\">swarm mode</a>, for natively managing a cluster of Docker engines. Traefik is now able to connect to a swarm manager and will discover all services deployed on the swarm. Thank you <a href=\"https://github.com/diegofernandes\" rel=\"noopener\">diegofernandes</a> for your work :)</p><h2 id=\"constraints\">Constraints</h2><p><a href=\"https://github.com/samber\" rel=\"noopener\">samber</a> initiated the addition of constraints, that limits Traefik scope to a smaller number of routes. It allows to easily deploy multiple instances with specific roles.<br>Let’s give an example and add this line to our TOML configurations:</p><pre><code class=\"language-toml\"># traefik instance 1\nconstraints = [“tag==eu-*”, “tag==asia-*”]\n\n# traefik instance 2\nconstraints = [“tag==us-*”]</code></pre><p>The instance 1 will now route services tagged with <em><em>eu-*</em></em> or <em><em>asia-*</em></em> (i.e. <em><em>eu-backend</em></em>, <em><em>eu-frontend</em></em>, <em><em>asia-data</em></em>…) and the instance 2, services tagged with <em><em>us-*</em></em>.<br>You can use Docker labels, Marathon labels or Consul Catalog tags to tag your services. For example, let’s deploy a new Docker application and tag it:</p><pre><code class=\"language-shell\">docker run -d -l traefik.tags=eu-frontend emilevauge/whoami\n</code></pre><p>This application will be taken into account by traefik instance 1 and ignored by instance 2.</p><h2 id=\"mesos-backend\">Mesos backend</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-95.png\" class=\"kg-image\"></figure><p><a href=\"https://github.com/PierreLeresteux\" rel=\"noopener\">PierreLeresteux</a> &amp; <a href=\"https://github.com/skydjol\" rel=\"noopener\">skydjol</a> made a great pull request adding universal Mesos support to Traefik. In addition to <a href=\"https://mesosphere.github.io/marathon/\" rel=\"noopener\">Marathon</a>, Traefik can now be used with any Mesos framework (i.e. Chronos, Aurora, custom…). And yeah, the <em><em>v1.1</em></em> codename is <em><em>camembert</em></em> because of those <a href=\"https://en.wikipedia.org/wiki/Normans\" rel=\"noopener\">Normans</a> guys!</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-96.png\" class=\"kg-image\"><figcaption>Why not <a href=\"https://github.com/containous/traefik/pull/353#issuecomment-233914436\" rel=\"noopener\">Saint-Nectaire</a>?</figcaption></figure><h2 id=\"session-affinity\">Session affinity</h2><p><a href=\"https://github.com/containous/traefik/issues/5#issue-107706542\" rel=\"noopener\">Long awaited</a> sticky sessions are now supported thanks to <a href=\"https://github.com/owen\" rel=\"noopener\">owen</a>! <a href=\"https://12factor.net/processes\" rel=\"noopener\">Use them with caution</a> ;)</p><h2 id=\"cluster-mode-experimental-\">Cluster mode (experimental)</h2><p>Traefik now has a cluster mode, which allows to deploy multiple instances sharing the same configuration. To do that without copying the same configuration file on each instance, Traefik uses a distributed Key-Value store (Etcd, Consul supported). What is great with <em><em>cluster mode</em></em> is that it works with Let’s Encrypt, using the Key-Value database to store the TLS certificates. <a href=\"https://docs.traefik.io/\">Cluster mode</a> is available in this release as an experimental feature.</p><h2 id=\"official-alpine-image\">Official Alpine image</h2><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-97.png\" class=\"kg-image\"></figure><p>In addition to the official “from scratch” Docker image, there is now an official Alpine image tagged <em><em>v1.1.0-alpine, camembert-alpine. </em></em>This can be useful to get a shell access to a Traefik container for debugging purpose.</p><h2 id=\"experimental-builds\">Experimental builds</h2><p>For those who want to test bleeding edge features, we introduced experimental builds. Each time a pull request is merged into master branch, a docker image will be pushed at:</p><pre><code>containous/traefik:experimental</code></pre><p>A specific PR image will also be pushed at:</p><pre><code>containous/traefik:pr-#</code></pre><hr><p>Grab the latest binary for Linux, Windows, Mac on <a href=\"https://github.com/containous/traefik/releases/tag/v1.1.0\" rel=\"noopener\">Github</a> or get the <a href=\"https://hub.docker.com/_/traefik/\" rel=\"noopener\">official Docker image</a>!</p><pre><code>docker pull traefik:v1.1.0\ndocker pull traefik:v1.1.0-alpine\ndocker pull traefik:camembert\ndocker pull traefik:camembert-alpine</code></pre><p>The documentation can be found on <a href=\"https://docs.traefik.io/\">http://docs.traefik.io</a>.</p><hr><p>Finally, we are very pleased to announce that <a href=\"https://github.com/dtomcej\" rel=\"noopener\">dtomcej</a> and <a href=\"https://github.com/SantoDE\" rel=\"noopener\">SantoDE</a> just joined the maintainers team. Welcome on board!</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-98.png\" class=\"kg-image\"></figure><hr><p>We would love to hear your feedback on this new release. Join us on <a href=\"https://github.com/containous/traefik\" rel=\"noopener\">GitHub</a>, <a href=\"https://twitter.com/traefikproxy\" rel=\"noopener\">Twitter</a> or on the <a href=\"https://community.containo.us\">Community Forum</a>!</p><hr><p><strong><strong>Edit 12/29/2016:</strong></strong><br>We just pushed the first bug-fix release <em><em>v1.1.1</em></em> which deals with Kubernetes and Swarm connection issues. The full changelog can be found <a href=\"https://github.com/containous/traefik/releases/tag/v1.1.1\" rel=\"noopener\">here</a>.</p>","url":"https://containous.ghost.io/blog/introducing-distributed-cheese-traefik-1-1-camembert-is-out-fb19e05a48c8/","canonical_url":null,"uuid":"4aa90b99-0d59-4698-bb12-800c74396d63","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd7fc02f1db6f0038c745cc","reading_time":3}},{"node":{"id":"Ghost__Post__5dd7fce3f1db6f0038c745f2","title":"Golang Configuration Made Easy With Flæg And Stært","slug":"golang-configuration-made-easy-with-flaeg-and-staert-2818921e78e","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/12/flaeg.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/ada72671fe3e0047e44e11e1e62cd0ad/9b73b/flaeg.png","srcSet":"/static/ada72671fe3e0047e44e11e1e62cd0ad/630fb/flaeg.png 300w,\n/static/ada72671fe3e0047e44e11e1e62cd0ad/2a4de/flaeg.png 600w,\n/static/ada72671fe3e0047e44e11e1e62cd0ad/9b73b/flaeg.png 710w","sizes":"(max-width: 710px) 100vw, 710px"}}},"excerpt":"There are many ways to provide a configuration to a program. Some use Command Line Interfaces, others use configuration files...","custom_excerpt":"There are many ways to provide a configuration to a program. Some use Command Line Interfaces, others use configuration files...","visibility":"public","created_at_pretty":"22 November, 2019","published_at_pretty":"August 4, 2016","updated_at_pretty":"22 May, 2020","created_at":"2019-11-22T15:21:07.000+00:00","published_at":"2016-08-04T15:21:00.000+00:00","updated_at":"2020-05-22T00:17:35.000+00:00","meta_title":"Golang Configuration Made Easy With Flæg And Stært","meta_description":"There are many ways to provide a configuration to a program. Some use Command Line Interfaces, others use configuration files...","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Traefik Labs","slug":"traefiklabs","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/09/TraefikLabs-symbol-transparent-bg@3x.png","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Traefik Labs","slug":"traefiklabs","bio":null,"profile_image":"https://containous.ghost.io/content/images/2020/09/TraefikLabs-symbol-transparent-bg@3x.png","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"There are many ways to provide a configuration to a program. Some use Command\nLine Interfaces, others use configuration files. Any setting changes can require\na refactor on many lines of code. The configuration loading process have to be\nvery robust. If not, programs could not work as we expected. Unfortunately \ngolang [https://golang.org/] programs are no exception. For instance, adding a\nnew argument in a CLI requires to create a flag, to parse data, to deal with the\nhelp section, to manage default values and to affect the collected value into\nthe configuration structure.\n\nClose your eyes and imagine a library able to automatically manage all this\nconfiguration process for you. You can open them because we did it :)\n\n\n--------------------------------------------------------------------------------\n\nFlæg\nFlæg [https://github.com/containous/flaeg/] is a Go package for building\ndynamically a powerful modern Command Line Interface and loading a program\nconfiguration structure from arguments. Go developers don’t need to worry about\nkeeping flags and commands updated anymore : it works by itself !\n\nFlæg package was born from the need of Træfik [/traefik/], the famous reverse\nproxy created by Emile Vauge [https://github.com/emilevauge]. It was more and\nmore difficult to maintain the list of `flags`: parameters passed in argument\nwhich drive the program.\n\nThanks to Flæg [https://github.com/containous/flaeg/], the maintenance became a\nthing of the past. The `flags` are auto generated from the field names of the\nconfiguration structure. To do that, developers just have to add a StructTag\n[https://golang.org/pkg/reflect/#StructTag] following the field to create a flag\non it. The helper (i.e. what is displayed with -help argument) is generated from\nthe key `description` in the StructTag\n[https://golang.org/pkg/reflect/#StructTag]\n\nHere an example of a complex configuration with StructTag\n[https://golang.org/pkg/reflect/#StructTag] that Flæg can process:\n\nflaegdemo.config.goGitHub Gist: instantly share code, notes, and snippets.\n262588213843476Gist\n[https://gist.github.com/cocap10/bbd5672a81175e07492c6c9e7b43aba7]Flæg\n[https://github.com/containous/flaeg/] is able to load the argument values\n​​given in the configuration structure through reflection\n[https://en.wikipedia.org/wiki/Reflection_(computer_programming)]. The package\nsupports most of field types, but no collections. Hopefully users can add a\ncustom parser on specific types as collections or even whole structures.\n\nLet’s see how simple it is to use Flæg.\n\nFirst we will create a trivial command which do nothing but print the\nconfiguration:\n\nGolang Configuration Made Easy With Flæg And StærtGolang Configuration Made\nEasy\nWith Flæg And Stært - flaegdemo.cmd.go262588213843476Gist\n[https://gist.github.com/cocap10/600d3491c9f005195c3c8bc9234dfc99]Then, we only\nhave to create a Flæg object and call the function Run :\n\nflaegdemo.use.goGitHub Gist: instantly share code, notes, and snippets.\n262588213843476Gist\n[https://gist.github.com/cocap10/69620f12c8fad0953269df5edb3bb58d]Let’s try this\nprogram. We will first call the helper :\n\nflaegdemo.help.shGitHub Gist: instantly share code, notes, and snippets.\n262588213843476Gist\n[https://gist.github.com/cocap10/b8cb3e8f78d1661eefd0f48f46e38e65]As you can\nsee, the generated flags match the fields of the configuration structure with\nsubstructures `DatabaseInfo` and `OwnerInfo`. Default values ​​can be defined\ndirectly in the fields of the configuration structure. These fields will be\nunchanged if their `flags` are not used in argument.\n\nThen, we can try the program:\n\nflaegdemo.try.shGitHub Gist: instantly share code, notes, and snippets.\n262588213843476Gist\n[https://gist.github.com/cocap10/090406f9f88d59d89e7dd0f09edcd8eb]Flæg also\nhandles sub-command, like the “version” command in the example :\n\nflaegdemo.sub.cmd.goGitHub Gist: instantly share code, notes, and snippets.\n262588213843476Gist\n[https://gist.github.com/cocap10/2a88cf1605f3d4187c15e129d8b58a1d]\nflaegdemo.version.try.shGitHub Gist: instantly share code, notes, and snippets.\n262588213843476Gist\n[https://gist.github.com/cocap10/5112adbf0f83027dc0fb7e30bd5cea80]To learn much\nmore about Flæg, please visit the github project page \nhttps://github.com/containous/flaeg.\n\nThanks to Flæg, we have a nice solution to load the configuration from the\nflags. The maintenance is now way simpler than it used to be, which is\nappreciated on open source projects. But how can we manage merging this CLI\nconfiguration with other sources like configuration files ?\n\n\n--------------------------------------------------------------------------------\n\nStært\nThe CLI is not the only way to provide configuration to a program. There are\nother sources of configuration. For instance, Træfik can take a configuration\nfrom flags, from a config file and from a distributed Key-Value Store.\n\nWe created Stært [https://github.com/containous/staert/] to merge those\nconfiguration sources. So far, only flags (using Flæg\n[https://github.com/containous/flaeg/]), TOML config file and Key-Value Stored\n[https://github.com/containous/staert#kvstore] configuration are implemented,\nbut we did the package in such way that it is easy to add other sources.\n\nStært uses the same Command type\n[https://github.com/containous/staert#the-command] as Flæg\n[https://github.com/containous/flaeg].\n\nWe just have to create some sources\n[https://github.com/containous/staert#use-st%C3%A6rt-with-sources] :\n\nstaertdemo.create.sources.goGitHub Gist: instantly share code, notes, and\nsnippets.262588213843476Gist\n[https://gist.github.com/cocap10/d8f1742a119e5f0069790f4fbf230d59]Then, we can\ncreate a Stært [https://github.com/containous/staert] object and use it :\n\nstaertdemo.use.goGitHub Gist: instantly share code, notes, and snippets.\n262588213843476Gist\n[https://gist.github.com/cocap10/6742ba6bf48d82b62feae2c6c8f2af4c]Stært will\nload the configuration in the row and overwrite it following precedence order :\n\n * Key-Value Store source\n * Flæg source\n * TOML config file source\n\nHere an example of TOML file :\n\nstaertdemo.try.tomlGitHub Gist: instantly share code, notes, and snippets.\n262588213843476Gist\n[https://gist.github.com/cocap10/6273109426155223099407cd9a2624cc]And there is\nthe way to store the Key-Value :\n\nstaertdemo.kv.mdGitHub Gist: instantly share code, notes, and snippets.\n262588213843476Gist\n[https://gist.github.com/cocap10/3115098a4c56b4bc13df9cc0182ac556]This was a\nsimple example of what we can do with Stært.\n\nTo conclude, those two packages made us save a lot of time on the Træfik project\n[https://github.com/containous/traefik]. We can now load and merge several\nconfigurations from different sources. Any changes on the configuration\nstructure are automagically handled.\n\nMore features are described on the Github project pages, please visit :\n\n * Flæg: https://github.com/containous/flaeg/\n * Stært: https://github.com/containous/staert/","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1420/0*ABKj5V2gw7tezUc5.\" class=\"kg-image\"></figure><p>There are many ways to provide a configuration to a program. Some use Command Line Interfaces, others use configuration files. Any setting changes can require a refactor on many lines of code. The configuration loading process have to be very robust. If not, programs could not work as we expected. Unfortunately <a href=\"https://golang.org/\" rel=\"noopener\">golang</a> programs are no exception. For instance, adding a new argument in a CLI requires to create a flag, to parse data, to deal with the help section, to manage default values and to affect the collected value into the configuration structure.</p><p>Close your eyes and imagine a library able to automatically manage all this configuration process for you. You can open them because we did it :)</p><hr><h2 id=\"fl-g\">Flæg</h2><p><a href=\"https://github.com/containous/flaeg/\" rel=\"noopener\">Flæg</a> is a Go package for building dynamically a powerful modern Command Line Interface and loading a program configuration structure from arguments. Go developers don’t need to worry about keeping flags and commands updated anymore : it works by itself !</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-99.png\" class=\"kg-image\"></figure><p>Flæg package was born from the need of <a href=\"https://containous.ghost.io/traefik/\">Træfik</a>, the famous reverse proxy created by <a href=\"https://github.com/emilevauge\" rel=\"noopener\">Emile Vauge</a>. It was more and more difficult to maintain the list of `flags`: parameters passed in argument which drive the program.</p><p>Thanks to <a href=\"https://github.com/containous/flaeg/\" rel=\"noopener\">Flæg</a>, the maintenance became a thing of the past. The `flags` are auto generated from the field names of the configuration structure. To do that, developers just have to add a <a href=\"https://golang.org/pkg/reflect/#StructTag\" rel=\"noopener\">StructTag</a> following the field to create a flag on it. The helper (i.e. what is displayed with <em><em>-help</em></em> argument) is generated from the key `description` in the <a href=\"https://golang.org/pkg/reflect/#StructTag\" rel=\"noopener\">StructTag</a></p><p>Here an example of a complex configuration with <a href=\"https://golang.org/pkg/reflect/#StructTag\" rel=\"noopener\">StructTag</a> that Flæg can process:</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://gist.github.com/cocap10/bbd5672a81175e07492c6c9e7b43aba7\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">flaegdemo.config.go</div><div class=\"kg-bookmark-description\">GitHub Gist: instantly share code, notes, and snippets.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicon.ico\"><span class=\"kg-bookmark-author\">262588213843476</span><span class=\"kg-bookmark-publisher\">Gist</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\"></div></a></figure><p><a href=\"https://github.com/containous/flaeg/\" rel=\"noopener\">Flæg</a> is able to load the argument values ​​given in the configuration structure through <a href=\"https://en.wikipedia.org/wiki/Reflection_(computer_programming)\" rel=\"noopener\">reflection</a>. The package supports most of field types, but no collections. Hopefully users can add a custom parser on specific types as collections or even whole structures.</p><p>Let’s see how simple it is to use Flæg.</p><p>First we will create a trivial command which do nothing but print the configuration:</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://gist.github.com/cocap10/600d3491c9f005195c3c8bc9234dfc99\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Golang Configuration Made Easy With Flæg And Stært</div><div class=\"kg-bookmark-description\">Golang Configuration Made Easy With Flæg And Stært - flaegdemo.cmd.go</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicon.ico\"><span class=\"kg-bookmark-author\">262588213843476</span><span class=\"kg-bookmark-publisher\">Gist</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\"></div></a></figure><p>Then, we only have to create a Flæg object and call the function Run :</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://gist.github.com/cocap10/69620f12c8fad0953269df5edb3bb58d\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">flaegdemo.use.go</div><div class=\"kg-bookmark-description\">GitHub Gist: instantly share code, notes, and snippets.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicon.ico\"><span class=\"kg-bookmark-author\">262588213843476</span><span class=\"kg-bookmark-publisher\">Gist</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\"></div></a></figure><p>Let’s try this program. We will first call the helper :</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://gist.github.com/cocap10/b8cb3e8f78d1661eefd0f48f46e38e65\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">flaegdemo.help.sh</div><div class=\"kg-bookmark-description\">GitHub Gist: instantly share code, notes, and snippets.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicon.ico\"><span class=\"kg-bookmark-author\">262588213843476</span><span class=\"kg-bookmark-publisher\">Gist</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\"></div></a></figure><p>As you can see, the generated flags match the fields of the configuration structure with substructures `DatabaseInfo` and `OwnerInfo`. Default values ​​can be defined directly in the fields of the configuration structure. These fields will be unchanged if their `flags` are not used in argument.</p><p>Then, we can try the program:</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://gist.github.com/cocap10/090406f9f88d59d89e7dd0f09edcd8eb\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">flaegdemo.try.sh</div><div class=\"kg-bookmark-description\">GitHub Gist: instantly share code, notes, and snippets.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicon.ico\"><span class=\"kg-bookmark-author\">262588213843476</span><span class=\"kg-bookmark-publisher\">Gist</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\"></div></a></figure><p>Flæg also handles sub-command, like the “version” command in the example :</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://gist.github.com/cocap10/2a88cf1605f3d4187c15e129d8b58a1d\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">flaegdemo.sub.cmd.go</div><div class=\"kg-bookmark-description\">GitHub Gist: instantly share code, notes, and snippets.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicon.ico\"><span class=\"kg-bookmark-author\">262588213843476</span><span class=\"kg-bookmark-publisher\">Gist</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\"></div></a></figure><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://gist.github.com/cocap10/5112adbf0f83027dc0fb7e30bd5cea80\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">flaegdemo.version.try.sh</div><div class=\"kg-bookmark-description\">GitHub Gist: instantly share code, notes, and snippets.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicon.ico\"><span class=\"kg-bookmark-author\">262588213843476</span><span class=\"kg-bookmark-publisher\">Gist</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\"></div></a></figure><p>To learn much more about Flæg, please visit the github project page <a href=\"https://github.com/containous/flaeg\" rel=\"noopener\">https://github.com/containous/flaeg</a>.</p><p>Thanks to Flæg, we have a nice solution to load the configuration from the flags. The maintenance is now way simpler than it used to be, which is appreciated on open source projects. But how can we manage merging this CLI configuration with other sources like configuration files ?</p><hr><h2 id=\"st-rt\">Stært</h2><p>The CLI is not the only way to provide configuration to a program. There are other sources of configuration. For instance, Træfik can take a configuration from flags, from a config file and from a distributed Key-Value Store.</p><p>We created <a href=\"https://github.com/containous/staert/\" rel=\"noopener\">Stært</a> to merge those configuration sources. So far, only flags (using <a href=\"https://github.com/containous/flaeg/\" rel=\"noopener\">Flæg</a>), TOML config file and <a href=\"https://github.com/containous/staert#kvstore\" rel=\"noopener\">Key-Value Stored</a> configuration are implemented, but we did the package in such way that it is easy to add other sources.</p><p>Stært uses the same <a href=\"https://github.com/containous/staert#the-command\" rel=\"noopener\">Command type</a> as <a href=\"https://github.com/containous/flaeg\" rel=\"noopener\">Flæg</a>.</p><p>We just have to <a href=\"https://github.com/containous/staert#use-st%C3%A6rt-with-sources\" rel=\"noopener\">create some sources</a> :</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://gist.github.com/cocap10/d8f1742a119e5f0069790f4fbf230d59\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">staertdemo.create.sources.go</div><div class=\"kg-bookmark-description\">GitHub Gist: instantly share code, notes, and snippets.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicon.ico\"><span class=\"kg-bookmark-author\">262588213843476</span><span class=\"kg-bookmark-publisher\">Gist</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\"></div></a></figure><p>Then, we can create a <a href=\"https://github.com/containous/staert\" rel=\"noopener\">Stært</a> object and use it :</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://gist.github.com/cocap10/6742ba6bf48d82b62feae2c6c8f2af4c\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">staertdemo.use.go</div><div class=\"kg-bookmark-description\">GitHub Gist: instantly share code, notes, and snippets.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicon.ico\"><span class=\"kg-bookmark-author\">262588213843476</span><span class=\"kg-bookmark-publisher\">Gist</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\"></div></a></figure><p>Stært will load the configuration in the row and overwrite it following precedence order :</p><ul><li>Key-Value Store source</li><li>Flæg source</li><li>TOML config file source</li></ul><p>Here an example of TOML file :</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://gist.github.com/cocap10/6273109426155223099407cd9a2624cc\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">staertdemo.try.toml</div><div class=\"kg-bookmark-description\">GitHub Gist: instantly share code, notes, and snippets.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicon.ico\"><span class=\"kg-bookmark-author\">262588213843476</span><span class=\"kg-bookmark-publisher\">Gist</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\"></div></a></figure><p>And there is the way to store the Key-Value :</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://gist.github.com/cocap10/3115098a4c56b4bc13df9cc0182ac556\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">staertdemo.kv.md</div><div class=\"kg-bookmark-description\">GitHub Gist: instantly share code, notes, and snippets.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicon.ico\"><span class=\"kg-bookmark-author\">262588213843476</span><span class=\"kg-bookmark-publisher\">Gist</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\"></div></a></figure><p>This was a simple example of what we can do with Stært.</p><p>To conclude, those two packages made us save a lot of time on the <a href=\"https://github.com/containous/traefik\" rel=\"noopener\">Træfik project</a>. We can now load and merge several configurations from different sources. Any changes on the configuration structure are automagically handled.</p><p>More features are described on the Github project pages, please visit :</p><ul><li>Flæg: <a href=\"https://github.com/containous/flaeg/\" rel=\"noopener\">https://github.com/containous/flaeg/</a></li><li>Stært: <a href=\"https://github.com/containous/staert/\" rel=\"noopener\">https://github.com/containous/staert/</a></li></ul>","url":"https://containous.ghost.io/blog/golang-configuration-made-easy-with-flaeg-and-staert-2818921e78e/","canonical_url":null,"uuid":"510efcc8-d4ef-4366-abc5-eb4f607702ad","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd7fce3f1db6f0038c745f2","reading_time":5}},{"node":{"id":"Ghost__Post__5dd800c2f1db6f0038c74612","title":"Traefik 1.0.0 reblochon is out!","slug":"traefik-1-0-0-reblochon-is-out-e6fca002284d","featured":false,"feature_image":"https://containous.ghost.io/content/images/2019/12/reblochon.png","featureImageSharp":{"childImageSharp":{"fluid":{"src":"/static/e0d849ac137a3525124f5105bd995065/46604/reblochon.png","srcSet":"/static/e0d849ac137a3525124f5105bd995065/630fb/reblochon.png 300w,\n/static/e0d849ac137a3525124f5105bd995065/46604/reblochon.png 500w","sizes":"(max-width: 500px) 100vw, 500px"}}},"excerpt":"After ten months of development, we are proud to announce the first stable release of Traefik: version 1.0.0, codename reblochon...","custom_excerpt":"After ten months of development, we are proud to announce the first stable release of Traefik: version 1.0.0, codename reblochon...","visibility":"public","created_at_pretty":"22 November, 2019","published_at_pretty":"July 6, 2016","updated_at_pretty":"22 May, 2020","created_at":"2019-11-22T15:37:38.000+00:00","published_at":"2016-07-06T15:37:00.000+00:00","updated_at":"2020-05-22T00:27:04.000+00:00","meta_title":"Traefik 1.0.0 reblochon is out!","meta_description":"After ten months of development, we are proud to announce the first stable release of Traefik: version 1.0.0, codename reblochon...","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null}],"primary_author":{"name":"Emile Vauge","slug":"emile","bio":null,"profile_image":"//www.gravatar.com/avatar/68e7fb947bb29dffbd46ac8aae45b6de?s=250&d=mm&r=x","twitter":"@emilevauge","facebook":null,"website":null},"primary_tag":{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Blog","slug":"blog","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Product News","slug":"product-news","description":null,"feature_image":null,"featureImageSharp":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"After ten months of development, we are proud to announce the first stable\nrelease of Traefik [/traefik/]: version 1.0.0, codename reblochon.\n\n> Træfik is a modern HTTP reverse proxy and load balancer made to deploy\nmicroservices with ease. It supports several backends (Docker\n[https://www.docker.com/], Swarm [https://docs.docker.com/swarm], Mesos/Marathon\n[https://mesosphere.github.io/marathon/], Kubernetes [http://kubernetes.io/], \nConsul [https://www.consul.io/], Etcd [https://coreos.com/etcd/], Zookeeper\n[https://zookeeper.apache.org/], BoltDB [https://github.com/boltdb/bolt], Rest\nAPI, file…) to manage its configuration automatically and dynamically.\n\n--------------------------------------------------------------------------------\n\nHere a some of the highlight features of this first release:\n\n * Single binary, fast, made with go\n * Docker, Swarm, Mesos/Marathon, Kubernetes, Consul, Etcd, Zookeeper, BoltDB,\n   Rest API, file configuration support\n * Hot-reloading of configuration with true zero-downtime\n * Circuit breakers on backends\n * Clean AngularJS Web UI\n * Websocket support\n * HTTP/2 support\n * Let’s Encrypt [https://letsencrypt.org/] support (Automatic HTTPS)\n * Available on Linux, MacOS and Windows\n\nA lot of work has been done to make this release: 237 Pull requests have been\nmerged [https://github.com/containous/traefik/pulls?q=is%3Apr+is%3Aclosed], 184 \nissues closed\n[https://github.com/containous/traefik/issues?q=is%3Aissue+is%3Aclosed], by 38 \nawesome contributors [https://github.com/containous/traefik/graphs/contributors]\n:\n\n@jpillora @NicolasGeraud @KevinBusse @kumy @polds @janeczku @danzel\n@Hugues-Antoine @ReadmeCritic @ProPheT777 @gbjk @jonaz @Russell-IO @sample\n@s7anley @antoinecarton @wallies @pborreli @dontrebootme @kevioke @iadvizeponey\n@PierreZ @tayzlor @dylanmei @stongo @fclaeys @tboerger @download13 @keis\n@tooda02 @errm @advait @AlmogBaku @samber @cocap10 @ldez @vdemeester @emilevauge\n\nI would like to give special thanks to @vdemeester\n[https://github.com/vdemeester] who has been helping me maintaining the project\nsince the beginning, and @cocap10 [https://github.com/cocap10] for his great\nwork on staert [https://github.com/containous/staert] and flaeg\n[https://github.com/containous/flaeg]. And we are very pleased to announce that \n@samber [https://github.com/samber], @errm [https://github.com/errm], \n@Russell-IO [https://github.com/Russell-IO] just joined the maintainers team.\nWelcome on board!\n\n\n--------------------------------------------------------------------------------\n\nYou can grab the binaries on GitHub\n[https://github.com/containous/traefik/releases/tag/v1.0.0] or download the\nofficial Docker image [https://hub.docker.com/r/_/traefik]:\n\ndocker pull traefik:v1.0.0\ndocker pull traefik:reblochon // if you prefer cheese ;)\n\nThe documentation can be found on docs.traefik.io [https://docs.traefik.io/].\n\n\n--------------------------------------------------------------------------------\n\nReblochon is a French cheese made in the Alpine region of Savoie. Like all good\nFrenchmen, we love food and especially cheese: it was obvious we had to call\nevery Traefik release with a French cheese name ;)\n\n\n--------------------------------------------------------------------------------\n\nWe would love to hear your feedback on this first major release. Join us on \nGitHub [https://github.com/containous/traefik], Twitter\n[https://twitter.com/traefikproxy] or on the Community Forum\n[https://community.containo.us/]!","html":"<figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1000/1*PKlwpne0ePJuncv4Cbxm2A.png\" class=\"kg-image\"></figure><p>After ten months of development, we are proud to announce the first stable release of <a href=\"https://containous.ghost.io/traefik/\">Traefik</a>: version <em><em>1.0.0</em></em>, codename <em><em>reblochon</em></em>.</p><blockquote><em><em>Træf</em>i<em>k is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. It supports several backends (<a href=\"https://www.docker.com/\" rel=\"noopener\">Docker</a>, <a href=\"https://docs.docker.com/swarm\" rel=\"noopener\">Swarm</a>, <a href=\"https://mesosphere.github.io/marathon/\" rel=\"noopener\">Mesos/Marathon</a>, <a href=\"http://kubernetes.io/\" rel=\"noopener\">Kubernetes</a>, <a href=\"https://www.consul.io/\" rel=\"noopener\">Consul</a>, <a href=\"https://coreos.com/etcd/\" rel=\"noopener\">Etcd</a>, <a href=\"https://zookeeper.apache.org/\" rel=\"noopener\">Zookeeper</a>, <a href=\"https://github.com/boltdb/bolt\" rel=\"noopener\">BoltDB</a>, Rest API, file…) to manage its configuration automatically and dynamically.</em></em></blockquote><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-100.png\" class=\"kg-image\"></figure><hr><p>Here a some of the highlight features of this first release:</p><ul><li>Single binary, fast, made with go</li><li>Docker, Swarm, Mesos/Marathon, Kubernetes, Consul, Etcd, Zookeeper, BoltDB, Rest API, file configuration support</li><li>Hot-reloading of configuration with true zero-downtime</li><li>Circuit breakers on backends</li><li>Clean AngularJS Web UI</li><li>Websocket support</li><li>HTTP/2 support</li><li><a href=\"https://letsencrypt.org/\" rel=\"noopener\">Let’s Encrypt</a> support (Automatic HTTPS)</li><li>Available on Linux, MacOS and Windows</li></ul><p>A lot of work has been done to make this release: <strong><strong>237</strong></strong> Pull requests <a href=\"https://github.com/containous/traefik/pulls?q=is%3Apr+is%3Aclosed\" rel=\"noopener\">have been merged</a>, <strong><strong>184</strong></strong> issues <a href=\"https://github.com/containous/traefik/issues?q=is%3Aissue+is%3Aclosed\" rel=\"noopener\">closed</a>, by <strong><strong>38</strong></strong> awesome <a href=\"https://github.com/containous/traefik/graphs/contributors\" rel=\"noopener\">contributors</a>:</p><p><em><em>@jpillora @NicolasGeraud @KevinBusse @kumy @polds @janeczku @danzel @Hugues-Antoine @ReadmeCritic @ProPheT777 @gbjk @jonaz @Russell-IO @sample @s7anley @antoinecarton @wallies @pborreli @dontrebootme @kevioke @iadvizeponey @PierreZ @tayzlor @dylanmei @stongo @fclaeys @tboerger @download13 @keis @tooda02 @errm @advait @AlmogBaku @samber @cocap10 @ldez @vdemeester @emilevauge</em></em></p><p>I would like to give special thanks to <a href=\"https://github.com/vdemeester\" rel=\"noopener\"><em><em>@vdemeester</em></em></a> who has been helping me maintaining the project since the beginning, and <a href=\"https://github.com/cocap10\" rel=\"noopener\"><em><em>@cocap10</em></em></a><em><em> </em></em>for his great work on <a href=\"https://github.com/containous/staert\" rel=\"noopener\">staert</a> and <a href=\"https://github.com/containous/flaeg\" rel=\"noopener\">flaeg</a>. And we are very pleased to announce that <a href=\"https://github.com/samber\" rel=\"noopener\"><em><em>@samber</em></em></a><em><em>, </em></em><a href=\"https://github.com/errm\" rel=\"noopener\"><em><em>@errm</em></em></a><em><em>, </em></em><a href=\"https://github.com/Russell-IO\" rel=\"noopener\"><em><em>@Russell-IO</em></em></a><em><em> </em></em>just joined the maintainers team. Welcome on board!</p><hr><p>You can grab the binaries <a href=\"https://github.com/containous/traefik/releases/tag/v1.0.0\" rel=\"noopener\">on GitHub</a> or download the official <a href=\"https://hub.docker.com/r/_/traefik\" rel=\"noopener\">Docker image</a>:</p><pre><code class=\"language-shell\">docker pull traefik:v1.0.0\ndocker pull traefik:reblochon // if you prefer cheese ;)</code></pre><p>The documentation can be found on <a href=\"https://docs.traefik.io/\">docs.traefik.io</a>.</p><hr><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-101.png\" class=\"kg-image\"></figure><p>Reblochon is a French cheese made in the Alpine region of Savoie. Like all good Frenchmen, we love food and especially cheese: it was obvious <strong><strong>we had to</strong></strong> call every Traefik release with a French cheese name ;)</p><figure class=\"kg-card kg-image-card\"><img src=\"https://containous.ghost.io/content/images/2019/11/image-102.png\" class=\"kg-image\"></figure><hr><p>We would love to hear your feedback on this first major release. Join us on <a href=\"https://github.com/containous/traefik\" rel=\"noopener\">GitHub</a>, <a href=\"https://twitter.com/traefikproxy\" rel=\"noopener\">Twitter</a> or on the <a href=\"https://community.containo.us/\">Community Forum</a>!</p>","url":"https://containous.ghost.io/blog/traefik-1-0-0-reblochon-is-out-e6fca002284d/","canonical_url":null,"uuid":"f9d32161-8a0f-44cc-ad37-a03c3e526a5c","codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dd800c2f1db6f0038c74612","reading_time":2}}]}},"pageContext":{"slug":"product-news","limit":9,"skip":27,"numberOfPages":4,"humanPageNumber":4,"prevPageNumber":3,"nextPageNumber":null,"previousPagePath":"/tag/product-news/page/3/","nextPagePath":null}},"staticQueryHashes":["1274566015","2561578252","2731221146","394248586","4145280475","749840385"]}